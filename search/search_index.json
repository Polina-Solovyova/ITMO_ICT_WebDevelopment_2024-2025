{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"WEB-\u041f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0434\u043e\u043c\u0430\u0448\u043d\u0435\u0435 \u0437\u0430\u0434\u0430\u043d\u0438\u0435 2","text":"<p>\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 2. \u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043f\u0440\u043e\u0441\u0442\u043e\u0433\u043e \u0441\u0430\u0439\u0442\u0430 \u043d\u0430 django.</p>"},{"location":"#_1","title":"\u0421\u043e\u0434\u0435\u0440\u0436\u0430\u043d\u0438\u0435","text":"<ul> <li>\u0417\u0430\u0434\u0430\u043d\u0438\u0435</li> <li>\u041c\u043e\u0434\u0435\u043b\u0438</li> <li>\u0424\u043e\u0440\u043c\u044b</li> <li>\u041f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f</li> <li>\u041c\u0430\u0440\u0448\u0440\u0443\u0442\u044b</li> <li>Leetcode</li> </ul>"},{"location":"admin/","title":"\u0410\u0434\u043c\u0438\u043d \u043f\u0430\u043d\u0435\u043b\u044c","text":""},{"location":"admin/#customuser","title":"CustomUser","text":"<ul> <li>\u0412\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0444\u0438\u043b\u044c\u0442\u0440\u0430\u0446\u0438\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439 \u043f\u043e \u0441\u0442\u0430\u0442\u0443\u0441\u0443 \u0430\u043a\u0442\u0438\u0432\u043d\u043e\u0441\u0442\u0438 \u0438 \u043f\u0440\u0430\u0432\u0430\u043c \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u0430.</li> <li>\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d \u043f\u043e\u0438\u0441\u043a \u043f\u043e \u0438\u043c\u0435\u043d\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0438 \u044d\u043b\u0435\u043a\u0442\u0440\u043e\u043d\u043d\u043e\u0439 \u043f\u043e\u0447\u0442\u0435 \u0434\u043b\u044f \u0431\u044b\u0441\u0442\u0440\u043e\u0439 \u043d\u0430\u0432\u0438\u0433\u0430\u0446\u0438\u0438.</li> </ul> <pre><code>@admin.register(CustomUser)\nclass CustomUserAdmin(admin.ModelAdmin):\n    list_display = ('username', 'email', 'is_staff', 'is_active')\n    list_filter = ('is_staff', 'is_active')\n    search_fields = ('username', 'email')\n</code></pre>"},{"location":"admin/#travelagency","title":"TravelAgency","text":"<ul> <li>\u0424\u0438\u043b\u044c\u0442\u0440\u0430\u0446\u0438\u044f \u043f\u043e \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044e \u0430\u0433\u0435\u043d\u0442\u0441\u0442\u0432\u0430.</li> <li>\u0412\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0431\u044b\u0441\u0442\u0440\u043e\u0433\u043e \u043f\u043e\u0438\u0441\u043a\u0430 \u043f\u043e \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044e \u0430\u0433\u0435\u043d\u0442\u0441\u0442\u0432\u0430.</li> </ul> <pre><code>@admin.register(TravelAgency)\nclass TravelAgencyAdmin(admin.ModelAdmin):\n    list_display = ('name', 'contact_info')\n    search_fields = ('name',)\n    ordering = ('name',)\n</code></pre>"},{"location":"admin/#tour","title":"Tour","text":"<ul> <li>\u0424\u0438\u043b\u044c\u0442\u0440\u0430\u0446\u0438\u044f \u0442\u0443\u0440\u043e\u0432 \u043f\u043e \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0443 \u0437\u0432\u0435\u0437\u0434, \u0441\u0442\u0440\u0430\u043d\u0435 \u0438 \u0430\u0433\u0435\u043d\u0442\u0441\u0442\u0432\u0443.</li> <li>\u041f\u043e\u0438\u0441\u043a \u043f\u043e \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044e \u043e\u0442\u0435\u043b\u044f, \u0433\u043e\u0440\u043e\u0434\u0443 \u0438 \u0441\u0442\u0440\u0430\u043d\u0435 \u0434\u043b\u044f \u0443\u0434\u043e\u0431\u0441\u0442\u0432\u0430 \u043d\u0430\u0432\u0438\u0433\u0430\u0446\u0438\u0438.</li> <li>\u0421\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0430 \u0442\u0443\u0440\u043e\u0432 \u043f\u043e \u0434\u0430\u0442\u0435 \u043d\u0430\u0447\u0430\u043b\u0430.</li> </ul> <pre><code>@admin.register(Tour)\nclass TourAdmin(admin.ModelAdmin):\n    list_display = ('hotel', 'stars', 'agency', 'country', 'city', 'start_date', 'end_date')\n    list_filter = ('stars', 'country', 'agency')\n    search_fields = ('hotel', 'country', 'city')\n    ordering = ('start_date',)\n\n</code></pre>"},{"location":"admin/#tariff","title":"Tariff","text":"<ul> <li>\u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0430 \u0444\u0438\u043b\u044c\u0442\u0440\u0430\u0446\u0438\u044f \u043f\u043e \u0442\u0443\u0440\u0443.</li> <li>\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d \u043f\u043e\u0438\u0441\u043a \u043f\u043e \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044e \u0442\u0430\u0440\u0438\u0444\u0430.</li> <li>\u0421\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0430 \u0442\u0430\u0440\u0438\u0444\u043e\u0432 \u043f\u043e \u0446\u0435\u043d\u0435.</li> </ul> <pre><code>@admin.register(Tariff)\nclass TariffAdmin(admin.ModelAdmin):\n    list_display = ('name', 'price', 'tour')\n    list_filter = ('tour',)\n    search_fields = ('name',)\n    ordering = ('price',)\n</code></pre>"},{"location":"admin/#mealoption","title":"MealOption","text":"<ul> <li>\u0424\u0438\u043b\u044c\u0442\u0440\u0430\u0446\u0438\u044f \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u043e\u0432 \u043f\u0438\u0442\u0430\u043d\u0438\u044f \u043f\u043e \u0442\u0443\u0440\u0443.</li> <li>\u0412\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u043f\u043e\u0438\u0441\u043a\u0430 \u043f\u043e \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044e \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u0430 \u043f\u0438\u0442\u0430\u043d\u0438\u044f.</li> <li>\u0421\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0430 \u043f\u043e \u0446\u0435\u043d\u0435.</li> </ul> <pre><code>@admin.register(MealOption)\nclass MealOptionAdmin(admin.ModelAdmin):\n    list_display = ('name', 'price', 'tour')\n    list_filter = ('tour',)\n    search_fields = ('name',)\n    ordering = ('price',)\n</code></pre>"},{"location":"admin/#booking","title":"Booking","text":"<ul> <li>\u0424\u0438\u043b\u044c\u0442\u0440\u0430\u0446\u0438\u044f \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0439 \u043f\u043e \u0441\u0442\u0430\u0442\u0443\u0441\u0443 \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u0438\u044f, \u0434\u0430\u0442\u0435 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0438 \u0442\u0443\u0440\u0443.</li> <li>\u041f\u043e\u0438\u0441\u043a \u043f\u043e \u0438\u043c\u0435\u043d\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0438 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044e \u043e\u0442\u0435\u043b\u044f.</li> <li>\u0421\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0430 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0439 \u043f\u043e \u0434\u0430\u0442\u0435 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f (\u043e\u0442 \u043d\u043e\u0432\u044b\u0445 \u043a \u0441\u0442\u0430\u0440\u044b\u043c).</li> </ul> <pre><code>@admin.register(Booking)\nclass BookingAdmin(admin.ModelAdmin):\n    list_display = ('user', 'tour', 'num_people', 'tariff', 'meal_option', 'is_confirmed', 'total_price', 'created')\n    list_filter = ('is_confirmed', 'created', 'tour')\n    search_fields = ('user__username', 'tour__hotel')\n    ordering = ('-created',)\n</code></pre>"},{"location":"admin/#review","title":"Review","text":"<ul> <li>\u0424\u0438\u043b\u044c\u0442\u0440\u0430\u0446\u0438\u044f \u043e\u0442\u0437\u044b\u0432\u043e\u0432 \u043f\u043e \u0440\u0435\u0439\u0442\u0438\u043d\u0433\u0443, \u0434\u0430\u0442\u0435 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0438 \u0442\u0443\u0440\u0443.</li> <li>\u041f\u043e\u0438\u0441\u043a \u043f\u043e \u0438\u043c\u0435\u043d\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f, \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044e \u043e\u0442\u0435\u043b\u044f \u0438 \u0442\u0435\u043a\u0441\u0442\u0443 \u043e\u0442\u0437\u044b\u0432\u0430.</li> <li>\u0421\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0430 \u043e\u0442\u0437\u044b\u0432\u043e\u0432 \u043f\u043e \u0434\u0430\u0442\u0435 (\u043e\u0442 \u043d\u043e\u0432\u044b\u0445 \u043a \u0441\u0442\u0430\u0440\u044b\u043c).</li> </ul> <pre><code>@admin.register(Review)\nclass ReviewAdmin(admin.ModelAdmin):\n    list_display = ('user', 'tour', 'rating', 'date', 'text')\n    list_filter = ('rating', 'date', 'tour')\n    search_fields = ('user__username', 'tour__hotel', 'text')\n    ordering = ('-date',)\n</code></pre>"},{"location":"forms/","title":"\u0424\u043e\u0440\u043c\u044b","text":""},{"location":"forms/#tourform","title":"TourForm","text":"<pre><code>class TourForm(forms.ModelForm):\n    class Meta:\n        model = Tour\n        fields = [\n            'hotel',\n            'stars',\n            'agency',\n            'country',\n            'city',\n            'description',\n            'start_date',\n            'end_date',\n            'payment_conditions',\n        ]\n        widgets = {\n            'start_date': forms.DateInput(attrs={'type': 'date'}),  # \u041a\u0430\u043b\u0435\u043d\u0434\u0430\u0440\u044c \u0434\u043b\u044f start_date\n            'end_date': forms.DateInput(attrs={'type': 'date'}),    # \u041a\u0430\u043b\u0435\u043d\u0434\u0430\u0440\u044c \u0434\u043b\u044f end_date\n        }\n\n    def clean_start_date(self):\n        start_date = self.cleaned_data.get('start_date')\n        today = date.today()\n        if start_date &lt; today:\n            raise forms.ValidationError(\"Start date must be today or later.\")\n        return start_date\n\n    def clean_end_date(self):\n        end_date = self.cleaned_data.get('end_date')\n        if end_date &lt; self.cleaned_data.get('start_date'):\n            raise forms.ValidationError(\"End date cannot be before start date.\")\n        return end_date\n</code></pre> <ul> <li>\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u0432\u0432\u043e\u0434\u0430 \u0438 \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0434\u0430\u043d\u043d\u044b\u0445 \u043c\u043e\u0434\u0435\u043b\u0438 Tour.</li> <li>\u0412\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u0432 \u0441\u0435\u0431\u044f \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0435 \u043f\u043e\u043b\u044f \u043c\u043e\u0434\u0435\u043b\u0438 Tour.</li> <li>\u041f\u043e\u043b\u044f start_date \u0438 end_date \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0442 HTML-\u0432\u0438\u0434\u0436\u0435\u0442 \u0441 \u0442\u0438\u043f\u043e\u043c date, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0435\u0442 \u043a\u0430\u043b\u0435\u043d\u0434\u0430\u0440\u044c \u0434\u043b\u044f \u0432\u044b\u0431\u043e\u0440\u0430 \u0434\u0430\u0442.</li> <li>clean_start_date: \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442, \u0447\u0442\u043e \u0434\u0430\u0442\u0430 \u043d\u0430\u0447\u0430\u043b\u0430 (start_date) \u043d\u0435 \u0440\u0430\u043d\u044c\u0448\u0435 \u0441\u0435\u0433\u043e\u0434\u043d\u044f\u0448\u043d\u0435\u0433\u043e \u0434\u043d\u044f. \u0415\u0441\u043b\u0438 \u0434\u0430\u0442\u0430 \u043d\u0435 \u043f\u0440\u043e\u0445\u043e\u0434\u0438\u0442 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0443, \u0432\u044b\u0431\u0440\u0430\u0441\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u043e\u0448\u0438\u0431\u043a\u0430.</li> <li>clean_end_date: \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442, \u0447\u0442\u043e \u0434\u0430\u0442\u0430 \u043e\u043a\u043e\u043d\u0447\u0430\u043d\u0438\u044f (end_date) \u043d\u0435 \u043f\u0440\u0435\u0434\u0448\u0435\u0441\u0442\u0432\u0443\u0435\u0442 \u0434\u0430\u0442\u0435 \u043d\u0430\u0447\u0430\u043b\u0430. \u0415\u0441\u043b\u0438 \u044d\u0442\u043e \u0443\u0441\u043b\u043e\u0432\u0438\u0435 \u043d\u0430\u0440\u0443\u0448\u0435\u043d\u043e, \u0442\u0430\u043a\u0436\u0435 \u0432\u044b\u0431\u0440\u0430\u0441\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u043e\u0448\u0438\u0431\u043a\u0430.</li> <li>\u041e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0432\u0430\u0435\u0442 \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u044b\u0439 \u0432\u0432\u043e\u0434 \u0434\u0430\u043d\u043d\u044b\u0445 \u0434\u043b\u044f \u043c\u043e\u0434\u0435\u043b\u0438 Tour, \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 \u0432\u044b\u0431\u043e\u0440 \u0434\u0430\u0442 \u0447\u0435\u0440\u0435\u0437 \u043a\u0430\u043b\u0435\u043d\u0434\u0430\u0440\u044c \u0438 \u0432\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u043d\u0430 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0435 \u043b\u043e\u0433\u0438\u0447\u0435\u0441\u043a\u0438\u043c \u0443\u0441\u043b\u043e\u0432\u0438\u044f\u043c.</li> </ul>"},{"location":"forms/#tariffform-mealoptionform","title":"TariffForm \u0438 MealOptionForm","text":"<pre><code>class TariffForm(forms.ModelForm):\n    class Meta:\n        model = Tariff\n        fields = ['name', 'price']\n\n\nclass MealOptionForm(forms.ModelForm):\n    class Meta:\n        model = MealOption\n        fields = ['name', 'price']\n\n\n# Inline formsets \u0434\u043b\u044f Tariff \u0438 MealOption\nTariffFormSet = inlineformset_factory(\n    Tour, Tariff, form=TariffForm, extra=1, can_delete=True\n)\nMealOptionFormSet = inlineformset_factory(\n    Tour, MealOption, form=MealOptionForm, extra=1, can_delete=True\n)\n</code></pre> <p>\u041a\u043b\u0430\u0441\u0441\u044b TariffForm \u0438 MealOptionForm:</p> <ul> <li>\u041e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u044e\u0442 \u0444\u043e\u0440\u043c\u044b \u0434\u043b\u044f \u043c\u043e\u0434\u0435\u043b\u0435\u0439 Tariff \u0438 MealOption.</li> <li>\u0423\u043a\u0430\u0437\u044b\u0432\u0430\u044e\u0442, \u0447\u0442\u043e name \u0438 price \u0431\u0443\u0434\u0443\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b \u0434\u043b\u044f \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f.</li> <li>TariffFormSet \u0438 MealOptionFormSet:</li> <li>\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0442 inlineformset_factory \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0438\u043d\u043b\u0430\u0439\u043d\u043e\u0432\u044b\u0445 \u0444\u043e\u0440\u043c\u0441\u0435\u0442\u043e\u0432, \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u044e\u0449\u0438\u0445 \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0441\u0432\u044f\u0437\u0430\u043d\u043d\u044b\u0435 \u043e\u0431\u044a\u0435\u043a\u0442\u044b Tariff \u0438 MealOption \u043f\u0440\u044f\u043c\u043e \u0438\u0437 \u0444\u043e\u0440\u043c\u044b \u0434\u043b\u044f \u0442\u0443\u0440\u0430.</li> <li>\u0421\u0432\u044f\u0437\u044c \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442\u0441\u044f \u0447\u0435\u0440\u0435\u0437 \u043c\u043e\u0434\u0435\u043b\u044c Tour.</li> </ul> <p>\u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438: - form: \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u044b\u0435 \u0444\u043e\u0440\u043c\u044b (TariffForm \u0438 MealOptionForm). - extra=1: \u041f\u0440\u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0438 \u043d\u043e\u0432\u043e\u0433\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u0432 \u0444\u043e\u0440\u043c\u0441\u0435\u0442\u0435 \u0431\u0443\u0434\u0435\u0442 \u043e\u0434\u043d\u0430 \u043f\u0443\u0441\u0442\u0430\u044f \u0444\u043e\u0440\u043c\u0430 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e. - can_delete=True: \u0420\u0430\u0437\u0440\u0435\u0448\u0430\u0435\u0442 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0441\u0432\u044f\u0437\u0430\u043d\u043d\u044b\u0445 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \u0447\u0435\u0440\u0435\u0437 \u0444\u043e\u0440\u043c\u0443.</p>"},{"location":"forms/#customauthenticationform","title":"CustomAuthenticationForm","text":"<pre><code>class CustomAuthenticationForm(AuthenticationForm):\n    username = forms.CharField(widget=forms.TextInput(attrs={\n        'class': 'form-control',\n        'placeholder': 'Username'\n    }))\n    password = forms.CharField(widget=forms.PasswordInput(attrs={\n        'class': 'form-control',\n        'placeholder': 'Password'\n    }))\n</code></pre> <p>\u041d\u0430\u0441\u043b\u0435\u0434\u0443\u0435\u0442\u0441\u044f \u043e\u0442 AuthenticationForm \u0438 \u043a\u0430\u0441\u0442\u043e\u043c\u0438\u0437\u0438\u0440\u0443\u0435\u0442 \u043f\u043e\u043b\u044f username \u0438 password, \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u044f \u0441\u0442\u0438\u043b\u0438 \u0438 \u043f\u043b\u0435\u0439\u0441\u0445\u043e\u043b\u0434\u0435\u0440\u044b \u0434\u043b\u044f \u0443\u043b\u0443\u0447\u0448\u0435\u043d\u0438\u044f \u0432\u043d\u0435\u0448\u043d\u0435\u0433\u043e \u0432\u0438\u0434\u0430 \u0432\u0432\u043e\u0434\u0430.</p>"},{"location":"forms/#customusercreationform","title":"CustomUserCreationForm","text":"<pre><code>class CustomUserCreationForm(UserCreationForm):\n    class Meta:\n        model = CustomUser\n        fields = ['username', 'email', 'password1', 'password2']\n</code></pre> <p>\u041d\u0430\u0441\u043b\u0435\u0434\u0443\u0435\u0442\u0441\u044f \u043e\u0442 UserCreationForm \u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u043d\u043e\u0432\u043e\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0441 \u043f\u043e\u043b\u044f\u043c\u0438 username, email, password1, password2.</p>"},{"location":"forms/#bookingform","title":"BookingForm","text":"<pre><code>class BookingForm(forms.ModelForm):\n    class Meta:\n        model = Booking\n        fields = ['num_people', 'tariff', 'meal_option']\n\n    def __init__(self, *args, **kwargs):\n        tour = kwargs.pop('tour', None)\n        super().__init__(*args, **kwargs)\n\n        if tour:\n            # \u041e\u0433\u0440\u0430\u043d\u0438\u0447\u0438\u0432\u0430\u0435\u043c \u0432\u044b\u0431\u043e\u0440 \u0442\u0430\u0440\u0438\u0444\u043e\u0432 \u0438 \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u043e\u0432 \u043f\u0438\u0442\u0430\u043d\u0438\u044f\n            self.fields['tariff'].queryset = tour.tariffs.all()\n            self.fields['meal_option'].queryset = tour.meal_options.all()\n\n            self.fields['tariff'].widget = forms.Select(\n                attrs={\n                    'class': 'tariff-select',\n                },\n                choices=[(tariff.id, f'{tariff.name} - {tariff.price} RUB') for tariff in tour.tariffs.all()]\n            )\n            self.fields['meal_option'].widget = forms.Select(\n                attrs={\n                    'class': 'meal-select',\n                },\n                choices=[(meal.id, f'{meal.name} - {meal.price} RUB') for meal in tour.meal_options.all()]\n            )\n</code></pre> <p>\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0442\u0443\u0440\u0430. \u041e\u043d\u0430 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0432\u044b\u0431\u0440\u0430\u0442\u044c \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043b\u044e\u0434\u0435\u0439 (num_people), \u0442\u0430\u0440\u0438\u0444 (tariff) \u0438 \u0432\u0430\u0440\u0438\u0430\u043d\u0442 \u043f\u0438\u0442\u0430\u043d\u0438\u044f (meal_option). \u0412 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0442\u043e\u0440\u0435 \u0444\u043e\u0440\u043c\u044b \u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0438\u0432\u0430\u044e\u0442\u0441\u044f \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0435 \u0442\u0430\u0440\u0438\u0444\u044b \u0438 \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u044b \u043f\u0438\u0442\u0430\u043d\u0438\u044f \u0432 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u043e\u0442 \u0432\u044b\u0431\u0440\u0430\u043d\u043d\u043e\u0433\u043e \u0442\u0443\u0440\u0430.</p>"},{"location":"forms/#reviewform","title":"ReviewForm","text":"<pre><code>class ReviewForm(forms.ModelForm):\n    class Meta:\n        model = Review\n        fields = ['text', 'rating']\n</code></pre> <p>\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u043e\u0442\u0437\u044b\u0432\u0430. \u041e\u043d\u0430 \u0432\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u0434\u0432\u0430 \u043f\u043e\u043b\u044f: \u0442\u0435\u043a\u0441\u0442 \u043e\u0442\u0437\u044b\u0432\u0430 \u0438 \u0440\u0435\u0439\u0442\u0438\u043d\u0433. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0438 \u043e\u0442\u0437\u044b\u0432\u0430 \u043e \u0442\u0443\u0440\u0435, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0437\u0430\u0442\u0435\u043c \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0435\u0442\u0441\u044f \u0432 \u0431\u0430\u0437\u0435 \u0434\u0430\u043d\u043d\u044b\u0445.</p>"},{"location":"forms/#toursearchform","title":"TourSearchForm","text":"<pre><code>class TourSearchForm(forms.Form):\n    query = forms.CharField(label='Search', max_length=100, required=False)\n</code></pre> <p>\u041f\u0440\u0435\u0434\u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u0430 \u0434\u043b\u044f \u043f\u043e\u0438\u0441\u043a\u0430 \u0442\u0443\u0440\u043e\u0432. \u041e\u043d\u0430 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u043e\u0434\u043d\u043e \u043f\u043e\u043b\u0435 query, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0438 \u043c\u043e\u0433\u0443\u0442 \u0432\u0432\u043e\u0434\u0438\u0442\u044c \u0441\u0442\u0440\u043e\u043a\u0443 \u0434\u043b\u044f \u043f\u043e\u0438\u0441\u043a\u0430. \u041f\u043e\u043b\u0435 \u0438\u043c\u0435\u0435\u0442 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0443\u044e \u0434\u043b\u0438\u043d\u0443 100 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432 \u0438 \u043d\u0435 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u043c \u0434\u043b\u044f \u0437\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f (required=False).</p>"},{"location":"models/","title":"\u041c\u043e\u0434\u0435\u043b\u0438","text":""},{"location":"models/#_2","title":"\u0422\u0443\u0440\u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440","text":"<pre><code>class TravelAgency(models.Model):\n    name = models.CharField(max_length=100)\n    contact_info = models.TextField()\n\n    def __str__(self):\n        return self.name\n</code></pre> <p>\u0425\u0440\u0430\u043d\u0438\u0442 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0444\u0438\u0440\u043c\u044b \u0438 \u043a\u043e\u043d\u0442\u0430\u043a\u0442\u044b.</p>"},{"location":"models/#_3","title":"\u0422\u0443\u0440","text":"<pre><code>class Tour(models.Model):\n    hotel = models.CharField(max_length=200)\n    stars = models.PositiveSmallIntegerField(\n        default=3,\n        validators=[MinValueValidator(1), MaxValueValidator(5)],\n        help_text=\"Number of stars from 1 to 5\"\n    )\n    agency = models.ForeignKey(TravelAgency, on_delete=models.CASCADE, related_name=\"tours\")\n    country = models.CharField(max_length=200)\n    city = models.CharField(max_length=200, null=True)\n    description = models.TextField()\n    start_date = models.DateField()\n    end_date = models.DateField()\n    payment_conditions = models.TextField()\n\n    def __str__(self):\n        return f\"{self.hotel} ({self.stars} stars) - {self.agency.name}\"\n\n    def get_absolute_url(self):\n        return reverse('tour_detail', args=[str(self.id)])\n\n    def get_base_price(self):\n        # \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u043c \u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u0443\u044e \u0441\u0442\u043e\u0438\u043c\u043e\u0441\u0442\u044c \u0442\u0430\u0440\u0438\u0444\u0430 \u0438 \u043f\u0438\u0442\u0430\u043d\u0438\u044f\n        tariffs = self.tariffs.all()\n        meal_options = self.meal_options.all()\n\n        if tariffs.exists() and meal_options.exists():\n            min_tariff_price = min(tariffs, key=lambda tariff: tariff.price).price\n            min_meal_option_price = min(meal_options, key=lambda meal: meal.price).price\n            return min_tariff_price + min_meal_option_price\n        return 0\n</code></pre> <p>\u0425\u0440\u0430\u043d\u0438\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u043e \u0442\u0443\u0440\u0435 (\u043e\u0442\u0435\u043b\u044c, \u0435\u0433\u043e \u0437\u0432\u0435\u0437\u0434\u043d\u043e\u0441\u0442\u044c, \u0442\u0443\u0440\u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440, \u0441\u0442\u0440\u0430\u043d\u0430, \u0433\u043e\u0440\u043e\u0434, \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435, \u0434\u0430\u0442\u044b, \u0443\u0441\u043b\u043e\u0432\u0438\u044f \u043e\u043f\u043b\u0430\u0442\u044b). \u0418\u043c\u0435\u0435\u0442 \u043c\u0435\u0442\u043e\u0434 \u043f\u043e \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044e \u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0439 \u0441\u0442\u043e\u0438\u043c\u0441\u0442\u0438 \u0442\u0443\u0440\u0430)</p>"},{"location":"models/#_4","title":"\u0422\u0430\u0440\u0438\u0444","text":"<pre><code>class Tariff(models.Model):\n    tour = models.ForeignKey(Tour, on_delete=models.CASCADE, related_name=\"tariffs\")\n    name = models.CharField(max_length=200)\n    price = models.PositiveIntegerField(default=0)\n\n    class Meta:\n        unique_together = ('tour', 'name')\n\n    def __str__(self):\n        return f\"{self.name} - {self.price} RUB\"\n</code></pre> <p>\u0425\u0440\u0430\u043d\u0438\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u043e \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u043c\u044b\u0445 \u0434\u043b\u044f \u0442\u0443\u0440\u0430 \u0442\u0430\u0440\u0438\u0444\u0430\u0445 \u0438 \u0438\u0445 \u0441\u0442\u043e\u0438\u043c\u043e\u0441\u0442\u0438. \u0421\u0432\u044f\u0437\u0430\u043d\u0430 \u0441 \u0442\u0443\u0440\u043e\u043c.</p>"},{"location":"models/#_5","title":"\u041e\u043f\u0446\u0438\u0438 \u043f\u0438\u0442\u0430\u043d\u0438\u044f","text":"<pre><code>class MealOption(models.Model):\n    tour = models.ForeignKey(Tour, on_delete=models.CASCADE, related_name=\"meal_options\")\n    name = models.CharField(max_length=200)\n    price = models.PositiveIntegerField(default=0)\n\n    class Meta:\n        unique_together = ('tour', 'name')\n\n    def __str__(self):\n        return f\"{self.name} - {self.price} RUB\"\n</code></pre> <p>\u0425\u0440\u0430\u043d\u0438\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u043e \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0445 \u0434\u043b\u044f \u0442\u0443\u0440\u0430 \u043e\u043f\u0446\u0438\u044f\u0445 \u043f\u0438\u0442\u0430\u043d\u0438\u044f. \u0421\u0432\u044f\u0437\u0430\u043d\u0430 \u0441 \u0442\u0443\u0440\u043e\u043c.</p>"},{"location":"models/#_6","title":"\u0411\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435","text":"<pre><code>class Booking(models.Model):\n    user = models.ForeignKey(CustomUser, on_delete=models.CASCADE, related_name=\"bookings\")\n    tour = models.ForeignKey(Tour, on_delete=models.CASCADE, related_name=\"bookings\")\n    num_people = models.PositiveIntegerField(default=1)\n    tariff = models.ForeignKey(Tariff, on_delete=models.CASCADE)\n    meal_option = models.ForeignKey(MealOption, on_delete=models.CASCADE)\n    is_confirmed = models.BooleanField(default=False)\n    total_price = models.PositiveIntegerField(default=0)\n    created = models.DateField(auto_now_add=True, null=True)\n\n    def calculate_price(self):\n        # \u0420\u0430\u0441\u0441\u0447\u0438\u0442\u044b\u0432\u0430\u0435\u043c \u0441\u0442\u043e\u0438\u043c\u043e\u0441\u0442\u044c \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0441 \u0443\u0447\u0435\u0442\u043e\u043c \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u043b\u044e\u0434\u0435\u0439\n        tariff_price = self.tour.get_base_price()\n        total_price = tariff_price * self.num_people\n        return round(total_price, 3)\n\n    def save(self, *args, **kwargs):\n        self.total_price = self.calculate_price()\n        super().save(*args, **kwargs)\n\n    def __str__(self):\n        return f\"Booking by {self.user.username} for {self.tour.hotel}\"\n</code></pre> <p>\u0425\u0440\u0430\u043d\u0438\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f (\u0442\u0443\u0440\u0431 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0447\u0435\u043b\u043e\u0432\u0435\u043a, \u0432\u044b\u0431\u0440\u0430\u043d\u043d\u044b\u0439 \u0442\u0430\u0440\u0438\u0444, \u0432\u044b\u0431\u0440\u0430\u043d\u044b\u0439 \u0432\u0430\u0440\u0438\u0430\u043d\u0442 \u043f\u0438\u0442\u0430\u043d\u0438\u044f, \u0438\u0442\u043e\u0433\u043e\u0432\u0430\u044f \u0446\u0435\u043d\u0430, \u0441\u0442\u0430\u0442\u0443\u0441 \u0438 \u0432\u0440\u0435\u043c\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0431\u0440\u043e\u043d\u0438)</p> <p>\u0421\u0432\u044f\u0437\u0430\u043d\u0430 \u0441 \u0442\u0443\u0440\u043e\u043c, \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u043c, \u0442\u0430\u0440\u0438\u0444\u043e\u043c \u0438 \u043e\u043f\u0446\u0438\u044f\u043c\u0438 \u043f\u0438\u0442\u0430\u043d\u0438\u044f. \u0418\u043c\u0435\u0435\u0442 \u043c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u043f\u043e\u0441\u0447\u0435\u0442\u0430 \u0441\u0442\u043e\u0438\u043c\u043e\u0441\u0442\u0438 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f.</p>"},{"location":"models/#_7","title":"\u041e\u0442\u0437\u044b\u0432","text":"<pre><code>class Review(models.Model):\n    user = models.ForeignKey(CustomUser, on_delete=models.CASCADE, related_name=\"reviews\")\n    tour = models.ForeignKey(Tour, on_delete=models.CASCADE, related_name=\"reviews\")\n    date = models.DateField(auto_now_add=True)\n    text = models.TextField()\n    rating = models.PositiveIntegerField(default=1)\n\n    def __str__(self):\n        return f\"Review by {self.user.username} ({self.rating}/10)\"\n</code></pre> <p>\u0425\u0440\u0430\u043d\u0438\u0442 \u043e\u0442\u0437\u044b\u0432\u044b \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439. \u0421\u0432\u044f\u0437\u0430\u043d\u0430 \u0441 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u043c \u0438 \u0442\u0443\u0440\u043e\u043c.</p>"},{"location":"overview/","title":"\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 \u21162","text":""},{"location":"overview/#_1","title":"\u0422\u0435\u043c\u0430","text":"<p>\u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043f\u0440\u043e\u0441\u0442\u043e\u0433\u043e \u0441\u0430\u0439\u0442\u0430 \u043d\u0430 django</p>"},{"location":"overview/#_2","title":"\u0426\u0435\u043b\u044c \u0440\u0430\u0431\u043e\u0442\u044b","text":"<p>\u041e\u0432\u043b\u0430\u0434\u0435\u0442\u044c \u043f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u043c\u0438 \u043d\u0430\u0432\u044b\u043a\u0430\u043c\u0438 \u0438 \u0443\u043c\u0435\u043d\u0438\u044f\u043c\u0438 \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 web-\u0441\u0435\u0440\u0432\u0438\u0441\u043e\u0432 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 Django 3 \u0438 PostgreSQL.</p>"},{"location":"overview/#_3","title":"\u0417\u0430\u0434\u0430\u0447\u0430","text":"<p>\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u0430\u0439\u0442 \u0442\u0443\u0440\u0444\u0438\u0440\u043c\u044b \u0441\u043e \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u043c \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b\u043e\u043c: - \u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u043d\u043e\u0432\u044b\u0445 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439. - \u041f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u0438 \u0440\u0435\u0437\u0435\u0440\u0432\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0442\u0443\u0440\u043e\u0432. \u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0438\u043c\u0435\u0435\u0442 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0438 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044f \u0441\u0432\u043e\u0438\u0445 \u0440\u0435\u0437\u0435\u0440\u0432\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0439. - \u041d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043e\u0442\u0437\u044b\u0432\u043e\u0432 \u043a \u0442\u0443\u0440\u0430\u043c. - \u0410\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440 \u0438\u043c\u0435\u0435\u0442 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0434\u0438\u0442\u044c \u0440\u0435\u0437\u0435\u0440\u0432\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0442\u0443\u0440\u0430 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 Django-admin. - \u0412 \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u043e\u0439 \u0447\u0430\u0441\u0442\u0438 \u0444\u043e\u0440\u043c\u0438\u0440\u0443\u0435\u0442\u0441\u044f \u0442\u0430\u0431\u043b\u0438\u0446\u0430, \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u044e\u0449\u0430\u044f \u0432\u0441\u0435 \u043f\u0440\u043e\u0434\u0430\u043d\u043d\u044b\u0435 \u0442\u0443\u0440\u044b \u043f\u043e \u0441\u0442\u0440\u0430\u043d\u0430\u043c.</p>"},{"location":"overview/#_4","title":"\u0417\u0430\u043f\u0443\u0441\u043a \u043f\u0440\u043e\u0435\u043a\u0442\u0430","text":"<pre><code>python manage.py runserver\n</code></pre>"},{"location":"urls/","title":"\u041c\u0430\u0440\u0448\u0440\u0443\u0442\u044b","text":"<pre><code>urlpatterns = [\n    # \u0410\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044f\n    path('register/', views.register, name='register'),\n    path('', login_view, name='login'),\n    path('logout/', logout_view, name='logout'),\n\n    # \u0422\u0443\u0440\u044b\n    path('tours/', views.tour_list, name='tour_list'),\n    path('tours/&lt;int:pk&gt;/', views.tour_detail, name='tour_detail'),\n    path('tours/&lt;int:tour_id&gt;/book/', views.book_tour, name='book_tour'),\n    path('tours/&lt;int:pk&gt;/add_review/', views.add_review, name='add_review'),\n\n    # \u0411\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f\n    path('my_bookings/', views.my_bookings, name='my_bookings'),\n    path('my_bookings/&lt;int:pk&gt;/edit', BookingUpdateView.as_view(), name='edit_booking'),\n    path('my_bookings/&lt;int:pk&gt;/delete', BookingDeleteView.as_view(), name='delete_booking'),\n    path('bookings/&lt;int:pk&gt;/', BookingDetailView.as_view(), name='booking_detail'),\n\n    # \u0410\u0434\u043c\u0438\u043d\n    path('add_tour/', views.add_tour, name='add_tour'),\n    path('edit_tour/&lt;int:pk&gt;/', views.edit_tour, name='edit_tour'),\n    path('view_bookings/', views.view_bookings, name='view_bookings'),\n    path('confirm_booking/&lt;int:pk&gt;/', views.confirm_booking, name='confirm_booking'),\n    path('tour_sales_statistics/', views.sold_tours_by_country, name='tour_sales_statistics'),\n]\n</code></pre> <p>\u0410\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044f: - register/: \u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f. - login/: \u0412\u0445\u043e\u0434 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f. - logout/: \u0412\u044b\u0445\u043e\u0434 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f. -  \u0422\u0443\u0440\u044b: - tours/: \u0421\u043f\u0438\u0441\u043e\u043a \u0432\u0441\u0435\u0445 \u0442\u0443\u0440\u043e\u0432. - tours//: \u0414\u0435\u0442\u0430\u043b\u0438 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0433\u043e \u0442\u0443\u0440\u0430. - tours//book/: \u0411\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0433\u043e \u0442\u0443\u0440\u0430. - tours//add_review/: \u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043e\u0442\u0437\u044b\u0432\u0430 \u043a \u0442\u0443\u0440\u0443. -  \u0411\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f: - my_bookings/: \u041c\u043e\u0438 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f. - my_bookings//edit: \u0420\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f. - my_bookings//delete: \u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f. - bookings//: \u0414\u0435\u0442\u0430\u043b\u0438 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0433\u043e \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f. -  \u0410\u0434\u043c\u0438\u043d: - add_tour/: \u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u0433\u043e \u0442\u0443\u0440\u0430. - edit_tour//: \u0420\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0435\u0433\u043e \u0442\u0443\u0440\u0430. - view_bookings/: \u041f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u0432\u0441\u0435\u0445 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0439. - confirm_booking//: \u041f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u0438\u0435 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f. - tour_sales_statistics/: \u0421\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0430 \u043f\u043e \u043f\u0440\u043e\u0434\u0430\u0436\u0430\u043c \u0442\u0443\u0440\u043e\u0432 \u043f\u043e \u0441\u0442\u0440\u0430\u043d\u0430\u043c."},{"location":"views/","title":"\u041f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f","text":""},{"location":"views/#_2","title":"\u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f","text":"<pre><code>class TravelAgency(models.Model):\n    name = models.CharField(max_length=100)\n    contact_info = models.TextField()\n\n    def __str__(self):\n        return self.name\n</code></pre> <p>\u041e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 \u0437\u0430 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044e \u043d\u043e\u0432\u044b\u0445 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439. \u041f\u0435\u0440\u0435\u043d\u0430\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0432\u0445\u043e\u0434\u0430.</p>"},{"location":"views/#_3","title":"\u0412\u0445\u043e\u0434 \u0432 \u0441\u0438\u0441\u0442\u0435\u043c\u0443","text":"<pre><code>def login_view(request):\n    if request.method == 'POST':\n        form = AuthenticationForm(data=request.POST)\n        if form.is_valid():\n            user = form.get_user()\n            login(request, user)\n            return redirect('tour_list')\n    else:\n        form = AuthenticationForm()\n    return render(request, 'login.html', {'form': form})\n</code></pre> <p>\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 \u0444\u043e\u0440\u043c\u0443 \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438 \u0434\u043b\u044f \u0432\u0445\u043e\u0434\u0430 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f. \u041f\u0435\u0440\u0435\u043d\u0430\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u043e\u0442\u0435\u043b\u0435\u0439.</p>"},{"location":"views/#_4","title":"\u0412\u044b\u0445\u043e\u0434 \u0438\u0437 \u0441\u0438\u0441\u0442\u0435\u043c\u044b","text":"<pre><code>@login_required\ndef logout_view(request):\n    logout(request)\n    return redirect('login')\n</code></pre> <p>\u041f\u0435\u0440\u0435\u043d\u0430\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0432\u0445\u043e\u0434\u0430. \u0422\u043e\u043b\u044c\u043a\u043e \u0434\u043b\u044f \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u043d\u044b\u0445 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u0439.</p>"},{"location":"views/#_5","title":"\u0421\u043f\u0438\u0441\u043e\u043a \u0442\u0443\u0440\u043e\u0432","text":"<pre><code>def tour_list(request):\n    form = TourSearchForm(request.GET)\n    tours = Tour.objects.all()\n\n    if form.is_valid():\n        query = form.cleaned_data['query']\n        if query:\n            # \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c Q \u0434\u043b\u044f \u043f\u043e\u0438\u0441\u043a\u0430 \u043f\u043e \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u0438\u043c \u043f\u043e\u043b\u044f\u043c\n            tours = tours.filter(\n                Q(hotel__icontains=query) |\n                Q(country__icontains=query) |\n                Q(city__icontains=query) |\n                Q(description__icontains=query)\n            )\n\n    paginator = Paginator(tours, 5)\n    page_number = request.GET.get('page')\n    page_obj = paginator.get_page(page_number)\n\n    return render(request, 'tour_list.html', {'page_obj': page_obj, 'form': form})\n</code></pre> <p>\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0432\u0441\u0435 \u0438\u043c\u0435\u044e\u0449\u0438\u0435\u0441\u044f \u0442\u0443\u0440\u044b. \u0422\u0430\u043a \u0436\u0435 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0441\u043e\u0432\u0435\u0440\u0448\u0430\u0442\u044c \u043f\u043e\u0438\u0441\u043a \u043f\u043e \u0442\u0443\u0440\u0430\u043c (\u043f\u043e \u043f\u043e\u043b\u044f\u043c \u043e\u0442\u0435\u043b\u044c, \u0441\u0442\u0440\u0430\u043d\u0430, \u0433\u043e\u0440\u043e\u0434 \u0438 \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435). \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 \u043f\u0430\u0433\u0438\u043d\u0430\u0446\u0438\u044e \u0434\u043b\u044f \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0435.</p>"},{"location":"views/#_6","title":"\u0414\u0435\u0442\u0430\u043b\u0438 \u0442\u0443\u0440\u0430","text":"<pre><code>def tour_detail(request, pk):\n    tour = get_object_or_404(Tour, pk=pk)\n    nights = (tour.end_date - tour.start_date).days\n    return render(request, 'tour_detail.html', {'tour': tour, 'nights': nights})\n</code></pre> <p>\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0434\u0435\u0442\u0430\u043b\u0438 \u0442\u0443\u0440\u0430 \u0438\u0437 \u043c\u043e\u0434\u0435\u043b\u0438, \u0441\u0447\u0438\u0442\u0430\u0435\u0442 \u0434\u043b\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u0442\u0443\u0440\u0430.</p>"},{"location":"views/#_7","title":"\u0420\u0435\u0437\u0435\u0440\u0432\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0442\u0443\u0440\u0430","text":"<pre><code>@login_required\ndef book_tour(request, tour_id):\n    tour = get_object_or_404(Tour, id=tour_id)\n    if request.method == 'POST':\n        form = BookingForm(request.POST, tour=tour)\n        print(form.is_valid())\n        if form.is_valid():\n            booking = form.save(commit=False)\n            booking.tour = tour\n            booking.user = request.user\n            booking.save()\n            print(booking)\n            return redirect('my_bookings')\n    else:\n        form = BookingForm(tour=tour)\n    return render(request, 'book_tour.html', {'form': form, 'tour': tour})\n</code></pre> <p>\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u0438\u0437 \u0444\u043e\u0440\u043c\u044b, \u0441\u043e\u0437\u0434\u0430\u0435\u0442 \u0431\u0440\u043e\u043d\u044c \u043d\u0430 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u0439 \u0442\u0443\u0440 \u0438 \u043f\u0435\u0440\u0435\u043d\u0430\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0431\u0440\u043e\u043d\u0435\u0439 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f. \u0422\u043e\u043b\u044c\u043a\u043e \u0434\u043b\u044f \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u043d\u044b\u0445 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u0439.</p>"},{"location":"views/#_8","title":"\u041e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f","text":"<pre><code>class BookingUpdateView(UpdateView):\n    model = Booking\n    form_class = BookingForm\n    template_name = 'update_booking.html'\n    success_url = reverse_lazy('my_bookings')\n\n    def get_form_kwargs(self):\n        kwargs = super().get_form_kwargs()\n        kwargs['tour'] = self.object.tour\n        return kwargs\n\n    def get_context_data(self, **kwargs):\n        context = super().get_context_data(**kwargs)\n        context['title'] = 'Edit Booking'\n        context['total_price'] = self.object.total_price\n        return context\n</code></pre> <p>\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u0438\u0437 \u0444\u043e\u0440\u043c\u044b \u0438 \u043e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u0442 \u0431\u0440\u043e\u043d\u044c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f. \u041f\u0440\u0438 \u0443\u0441\u043f\u0435\u0445\u0435 \u043f\u0435\u0440\u0435\u043d\u0430\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0431\u0440\u043e\u043d\u0435\u0439 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.</p>"},{"location":"views/#_9","title":"\u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f","text":"<pre><code>class BookingDeleteView(DeleteView):\n    model = Booking\n    template_name = 'delete_booking.html'\n    success_url = reverse_lazy('my_bookings')\n    title = 'Booking Cancellation'\n</code></pre> <p>\u0423\u0434\u0430\u043b\u044f\u0435\u0442 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0435 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435. \u041f\u0440\u0438 \u0443\u0441\u043f\u0435\u0445\u0435 \u043f\u0435\u0440\u0435\u043d\u0430\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0439.</p>"},{"location":"views/#_10","title":"\u0414\u0435\u0442\u0430\u043b\u0438 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f","text":"<pre><code>class BookingDetailView(DetailView):\n    model = Booking\n    template_name = 'booking_detail.html'\n    context_object_name = 'booking'\n</code></pre> <p>\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u043e \u0431\u0440\u043e\u043d\u0438.</p>"},{"location":"views/#_11","title":"\u041c\u043e\u0438 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f","text":"<pre><code>@login_required\ndef my_bookings(request):\n    bookings = request.user.bookings.all()\n    return render(request, 'my_bookings.html', {'bookings': bookings})\n</code></pre> <p>\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0432\u0441\u0435 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u043e\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f. \u0422\u043e\u043b\u044c\u043a\u043e \u0434\u043b\u044f \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u043d\u044b\u0445 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439.</p>"},{"location":"views/#_12","title":"\u041e\u0442\u0437\u044b\u0432\u044b","text":"<pre><code>@login_required\ndef add_review(request, pk):\n    tour = get_object_or_404(Tour, pk=pk)\n    if not request.user.bookings.filter(tour=tour, is_confirmed=True).exists():\n        return redirect('my_bookings', pk=pk)\n    if request.method == 'POST':\n        form = ReviewForm(request.POST)\n        if form.is_valid():\n            review = form.save(commit=False)\n            review.user = request.user\n            review.tour = tour\n            review.save()\n            return redirect('tour_detail', pk=pk)\n    else:\n        form = ReviewForm()\n    return render(request, 'add_review.html', {'form': form, 'tour': tour})\n</code></pre> <p>\u0421\u043e\u0437\u0434\u0430\u0435\u0442 \u043e\u0442\u0437\u044b\u0432 \u043d\u0430 \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u043d\u0443\u044e \u0431\u0440\u043e\u043d\u044c. \u0422\u043e\u043b\u044c\u043a\u043e \u0434\u043b\u044f \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u043d\u044b\u0445 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439.</p>"},{"location":"views/#_13","title":"\u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0442\u0443\u0440\u0430","text":"<pre><code>@admin_required\ndef add_tour(request):\n    if request.method == 'POST':\n        form = TourForm(request.POST)\n\n        if form.is_valid():\n            # \u0421\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u0438\u0435 \u0442\u0443\u0440\u0430 \u043f\u0435\u0440\u0435\u0434 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u043e\u0439 \u0444\u043e\u0440\u043c\u0441\u0435\u0442\u043e\u0432\n            tour = form.save(commit=False)\n            tour.save()\n\n            # \u041f\u0440\u0438\u0432\u044f\u0437\u044b\u0432\u0430\u0435\u043c \u0441\u043e\u0445\u0440\u0430\u043d\u0451\u043d\u043d\u044b\u0439 \u0442\u0443\u0440 \u043a \u0444\u043e\u0440\u043c\u0441\u0435\u0442\u0430\u043c\n            tariff_formset = TariffFormSet(request.POST, instance=tour)\n            meal_option_formset = MealOptionFormSet(request.POST, instance=tour)\n\n            if tariff_formset.is_valid() and meal_option_formset.is_valid():\n                tariff_formset.save()\n                meal_option_formset.save()\n                return redirect('tour_list')\n        else:\n            # \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043f\u0443\u0441\u0442\u044b\u0445 \u0444\u043e\u0440\u043c\u0441\u0435\u0442\u043e\u0432 \u043f\u0440\u0438 \u043e\u0448\u0438\u0431\u043a\u0435 \u0432 \u043e\u0441\u043d\u043e\u0432\u043d\u043e\u0439 \u0444\u043e\u0440\u043c\u0435\n            tariff_formset = TariffFormSet(instance=form.instance)\n            meal_option_formset = MealOptionFormSet(instance=form.instance)\n    else:\n        # \u0418\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043f\u0443\u0441\u0442\u044b\u0445 \u0444\u043e\u0440\u043c\n        form = TourForm()\n        tariff_formset = TariffFormSet(instance=Tour())\n        meal_option_formset = MealOptionFormSet(instance=Tour())\n\n    return render(request, 'add_tour.html', {\n        'form': form,\n        'tariff_formset': tariff_formset,\n        'meal_option_formset': meal_option_formset,\n    })\n</code></pre> <p>\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u0438\u0437 \u0444\u043e\u0440\u043c\u044b, \u0441\u043e\u0437\u0434\u0430\u0435\u0442 \u0442\u0443\u0440 \u0438 \u0441\u043e\u0437\u0434\u0430\u0435\u0442 \u0442\u0430\u0440\u0438\u0444\u044b \u0438 \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u044b \u043f\u0438\u0442\u0430\u043d\u0438\u044f \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0442\u0443\u0440\u0430. \u0422\u043e\u043b\u044c\u043a\u043e \u0434\u043b\u044f \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u0430.</p>"},{"location":"views/#_14","title":"\u0420\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0442\u0443\u0440\u0430","text":"<pre><code>@admin_required\ndef edit_tour(request, pk):\n    tour = get_object_or_404(Tour, pk=pk)\n\n    if request.method == 'POST':\n        form = TourForm(request.POST, instance=tour)\n        tariff_formset = TariffFormSet(request.POST, instance=tour)\n        meal_option_formset = MealOptionFormSet(request.POST, instance=tour)\n\n        if form.is_valid() and tariff_formset.is_valid() and meal_option_formset.is_valid():\n            # \u0421\u043e\u0445\u0440\u0430\u043d\u044f\u0435\u043c \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u0432 \u0442\u0443\u0440\u0435\n            form.save()\n\n            for tariff in tariff_formset.save(commit=False):\n                tariff.tour = tour\n                tariff.save()\n\n            # \u0423\u0434\u0430\u043b\u044f\u0435\u043c \u0442\u043e\u043b\u044c\u043a\u043e \u043f\u043e\u043c\u0435\u0447\u0435\u043d\u043d\u044b\u0435 \u0434\u043b\u044f \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044f \u0442\u0430\u0440\u0438\u0444\u044b\n            for tariff in tariff_formset.deleted_objects:\n                tariff.delete()\n\n            for meal_option in meal_option_formset.save(commit=False):\n                meal_option.tour = tour\n                meal_option.save()\n\n            # \u0423\u0434\u0430\u043b\u044f\u0435\u043c \u0442\u043e\u043b\u044c\u043a\u043e \u043f\u043e\u043c\u0435\u0447\u0435\u043d\u043d\u044b\u0435 \u0434\u043b\u044f \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044f \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u044b \u043f\u0438\u0442\u0430\u043d\u0438\u044f\n            for meal_option in meal_option_formset.deleted_objects:\n                meal_option.delete()\n\n            return redirect('tour_list')\n\n    else:\n        form = TourForm(instance=tour)\n        tariff_formset = TariffFormSet(instance=tour)\n        meal_option_formset = MealOptionFormSet(instance=tour)\n\n    return render(request, 'edit_tour.html', {\n        'form': form,\n        'tariff_formset': tariff_formset,\n        'meal_option_formset': meal_option_formset,\n    })\n</code></pre> <p>\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u0438\u0437 \u0444\u043e\u0440\u043c\u044b \u0438 \u043e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u043e \u0442\u0443\u0440\u0435, \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 \u0442\u0430\u0440\u0438\u0444\u044b \u0438 \u043e\u043f\u0446\u0438\u0438 \u0438 \u0443\u0434\u0430\u043b\u044f\u0435\u0442 \u043f\u043e\u043c\u0435\u0447\u0435\u043d\u043d\u043e\u0435. \u0422\u043e\u043b\u044c\u043a\u043e \u0434\u043b\u044f \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u0430.</p>"},{"location":"views/#_15","title":"\u041f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0439 \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u043e\u043c","text":"<pre><code>@admin_required\ndef view_bookings(request):\n    bookings = Booking.objects.all()\n    return render(request, 'view_bookings.html', {'bookings': bookings})\n</code></pre> <p>\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0432\u0441\u0435\u0445 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439. \u0422\u043e\u043b\u044c\u043a\u043e \u0434\u043b\u044f \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u0430.</p>"},{"location":"views/#_16","title":"\u041f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u0438\u0435 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0439 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439","text":"<pre><code>@admin_required\ndef confirm_booking(request, pk):\n    booking = get_object_or_404(Booking, pk=pk)\n    booking.is_confirmed = True\n    booking.save()\n    return redirect('view_bookings')\n</code></pre> <p>\u041f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0430\u0435\u0442 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439, \u043f\u0435\u0440\u0435\u043d\u0430\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0439 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u0439. \u0422\u043e\u043b\u044c\u043a\u043e \u0434\u043b\u044f \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u0430.</p>"},{"location":"views/#_17","title":"\u041f\u0440\u043e\u0434\u0430\u043d\u043d\u044b\u0435 \u0442\u0443\u0440\u044b \u043f\u043e \u0441\u0442\u0440\u0430\u043d\u0430\u043c","text":"<pre><code>@admin_required\ndef sold_tours_by_country(request):\n    tours_by_country = (\n        Tour.objects.filter(bookings__is_confirmed=True)\n        .values('country')\n        .annotate(total_bookings=Count('bookings'))\n        .order_by('-total_bookings')\n    )\n    return render(request, 'sold_tours.html', {'tours_by_country': tours_by_country})\n</code></pre> <p>\u0424\u0438\u043b\u044c\u0442\u0440\u0443\u0435\u0442 \u0442\u0443\u0440\u044b \u0438 \u043f\u043e \u0441\u0442\u0440\u0430\u043d\u0430\u043c \u0438 \u0441\u0447\u0438\u0442\u0430\u0435\u0442 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u043d\u044b\u0445 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0439 \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0439 \u0441\u0442\u0440\u0430\u043d\u044b. \u0422\u043e\u043b\u044c\u043a\u043e \u0434\u043b\u044f \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u0430.</p>"},{"location":"images/leetcode/","title":"Leetcode","text":""},{"location":"images/leetcode/#238-product-of-array-except-self","title":"238. Product of Array Except Self","text":"<p>Given an integer array nums, return an array answer such that answer[i] is equal to the product of all the elements of nums except nums[i].</p> <p>The product of any prefix or suffix of nums is guaranteed to fit in a 32-bit integer.</p> <p>You must write an algorithm that runs in O(n) time and without using the division operation.</p> <p>Example 1:</p> <p>Input: nums = [1,2,3,4] Output: [24,12,8,6]</p> <p>Example 2:</p> <p>Input: nums = [-1,1,0,-3,3] Output: [0,0,9,0,0]</p> <p>Constraints:</p> <p>2 &lt;= nums.length &lt;= 105 -30 &lt;= nums[i] &lt;= 30 The product of any prefix or suffix of nums is guaranteed to fit in a 32-bit integer.</p>"},{"location":"images/leetcode/#solution","title":"Solution","text":"<pre><code>class RandomizedSet:\n    def __init__(self):\n        self.val_to_index = {}\n        self.values = []\n\n    def insert(self, val: int) -&gt; bool:\n        if val in self.val_to_index:\n            return False\n        self.val_to_index[val] = len(self.values)\n        self.values.append(val)\n        return True\n\n    def remove(self, val: int) -&gt; bool:\n        if val not in self.val_to_index:\n            return False\n        index = self.val_to_index[val]\n        last_val = self.values[-1]\n        self.values[index] = last_val\n        self.val_to_index[last_val] = index\n        self.values.pop()\n        del self.val_to_index[val]\n        return True\n\n    def getRandom(self) -&gt; int:\n        return random.choice(self.values)\n</code></pre>"},{"location":"images/leetcode/#274-h-index","title":"274. H-Index","text":"<p>Given an array of integers citations where citations[i] is the number of citations a researcher received for their ith paper, return the researcher's h-index.</p> <p>According to the definition of h-index on Wikipedia: The h-index is defined as the maximum value of h such that the given researcher has published at least h papers that have each been cited at least h times.</p> <p>Example 1:</p> <p>Input: citations = [3,0,6,1,5] Output: 3 Explanation: [3,0,6,1,5] means the researcher has 5 papers in total and each of them had received 3, 0, 6, 1, 5 citations respectively. Since the researcher has 3 papers with at least 3 citations each and the remaining two with no more than 3 citations each, their h-index is 3. Example 2:</p> <p>Input: citations = [1,3,1] Output: 1</p>"},{"location":"images/leetcode/#solution_1","title":"Solution","text":"<pre><code>class Solution:\n    def hIndex(self, citations: List[int]) -&gt; int:\n        citations.sort(reverse=True)  \n        h_index = 0\n        for i, citation in enumerate(citations):\n            if citation &gt;= i + 1:\n                h_index = i + 1\n            else:\n                break\n        return h_index\n</code></pre>"},{"location":"images/leetcode/#55-jump-game","title":"55. Jump Game","text":"<p>You are given an integer array nums. You are initially positioned at the array's first index, and each element in the array represents your maximum jump length at that position.</p> <p>Return true if you can reach the last index, or false otherwise.</p> <p>Example 1:</p> <p>Input: nums = [2,3,1,1,4] Output: true Explanation: Jump 1 step from index 0 to 1, then 3 steps to the last index. Example 2:</p> <p>Input: nums = [3,2,1,0,4] Output: false Explanation: You will always arrive at index 3 no matter what. Its maximum jump length is 0, which makes it impossible to reach the last index.</p> <p>Constraints:</p> <p>1 &lt;= nums.length &lt;= 104 0 &lt;= nums[i] &lt;= 105</p>"},{"location":"images/leetcode/#solution_2","title":"Solution","text":"<pre><code>class Solution:\n    def canJump(self, nums: List[int]) -&gt; bool:\n        max_reach = 0\n        for i, jump in enumerate(nums):\n            if i &gt; max_reach:\n                return False\n            max_reach = max(max_reach, i + jump)\n            if max_reach &gt;= len(nums) - 1:\n                return True\n        return False\n</code></pre>"},{"location":"images/leetcode/#122-best-time-to-buy-and-sell-stock-ii","title":"122. Best Time to Buy and Sell Stock II","text":"<p>You are given an integer array prices where prices[i] is the price of a given stock on the ith day.</p> <p>On each day, you may decide to buy and/or sell the stock. You can only hold at most one share of the stock at any time. However, you can buy it then immediately sell it on the same day.</p> <p>Find and return the maximum profit you can achieve.</p> <p>Example 1:</p> <p>Input: prices = [7,1,5,3,6,4] Output: 7 Explanation: Buy on day 2 (price = 1) and sell on day 3 (price = 5), profit = 5-1 = 4. Then buy on day 4 (price = 3) and sell on day 5 (price = 6), profit = 6-3 = 3. Total profit is 4 + 3 = 7. Example 2:</p> <p>Input: prices = [1,2,3,4,5] Output: 4 Explanation: Buy on day 1 (price = 1) and sell on day 5 (price = 5), profit = 5-1 = 4. Total profit is 4. Example 3:</p> <p>Input: prices = [7,6,4,3,1] Output: 0 Explanation: There is no way to make a positive profit, so we never buy the stock to achieve the maximum profit of 0.</p> <p>Constraints:</p> <p>1 &lt;= prices.length &lt;= 3 * 104 0 &lt;= prices[i] &lt;= 104</p>"},{"location":"images/leetcode/#solution_3","title":"Solution","text":"<pre><code>class Solution:\n    def maxProfit(self, prices: List[int]) -&gt; int:\n        max_profit = 0\n        for i in range(1, len(prices)):\n            if prices[i] &gt; prices[i - 1]:\n                max_profit += prices[i] - prices[i - 1]\n        return max_profit\n</code></pre>"},{"location":"images/leetcode/#leetcode","title":"Leetcode","text":""},{"location":"images/leetcode/#27-remove-element","title":"27. Remove Element","text":"<p>Given an integer array nums and an integer val, remove all occurrences of val in nums in-place. The order of the elements may be changed. Then return the number of elements in nums which are not equal to val.</p> <p>Consider the number of elements in nums which are not equal to val be k, to get accepted, you need to do the following things:</p> <p>Change the array nums such that the first k elements of nums contain the elements which are not equal to val. The remaining elements of nums are not important as well as the size of nums. Return k. Custom Judge:</p> <p>The judge will test your solution with the following code:</p> <p>int[] nums = [...]; // Input array int val = ...; // Value to remove int[] expectedNums = [...]; // The expected answer with correct length.                             // It is sorted with no values equaling val.</p> <p>int k = removeElement(nums, val); // Calls your implementation</p> <p>assert k == expectedNums.length; sort(nums, 0, k); // Sort the first k elements of nums for (int i = 0; i &lt; actualLength; i++) {     assert nums[i] == expectedNums[i]; } If all assertions pass, then your solution will be accepted.</p> <p>Example 1:</p> <p>Input: nums = [3,2,2,3], val = 3 Output: 2, nums = [2,2,,] Explanation: Your function should return k = 2, with the first two elements of nums being 2. It does not matter what you leave beyond the returned k (hence they are underscores). Example 2:</p> <p>Input: nums = [0,1,2,2,3,0,4,2], val = 2 Output: 5, nums = [0,1,4,0,3,,,_] Explanation: Your function should return k = 5, with the first five elements of nums containing 0, 0, 1, 3, and 4. Note that the five elements can be returned in any order. It does not matter what you leave beyond the returned k (hence they are underscores).</p> <p>Constraints:</p> <p>0 &lt;= nums.length &lt;= 100 0 &lt;= nums[i] &lt;= 50 0 &lt;= val &lt;= 100</p>"},{"location":"images/leetcode/#solution_4","title":"Solution","text":"<pre><code>class Solution:\n    def removeElement(self, nums: List[int], val: int) -&gt; int:\n        count = 0\n        for i in range(len(nums))[::-1]:\n            if nums[i] == val:\n                nums.pop(i)\n                nums.append('_')\n                count += 1\n        return len(nums)-count        \n\n</code></pre>"},{"location":"images/leetcode/#88-merge-sorted-array","title":"88. Merge Sorted Array","text":"<p>You are given two integer arrays nums1 and nums2, sorted in non-decreasing order, and two integers m and n, representing the number of elements in nums1 and nums2 respectively.</p> <p>Merge nums1 and nums2 into a single array sorted in non-decreasing order.</p> <p>The final sorted array should not be returned by the function, but instead be stored inside the array nums1. To accommodate this, nums1 has a length of m + n, where the first m elements denote the elements that should be merged, and the last n elements are set to 0 and should be ignored. nums2 has a length of n.</p> <p>Example 1:</p> <p>Input: nums1 = [1,2,3,0,0,0], m = 3, nums2 = [2,5,6], n = 3 Output: [1,2,2,3,5,6] Explanation: The arrays we are merging are [1,2,3] and [2,5,6]. The result of the merge is [1,2,2,3,5,6] with the underlined elements coming from nums1. Example 2:</p> <p>Input: nums1 = [1], m = 1, nums2 = [], n = 0 Output: [1] Explanation: The arrays we are merging are [1] and []. The result of the merge is [1]. Example 3:</p> <p>Input: nums1 = [0], m = 0, nums2 = [1], n = 1 Output: [1] Explanation: The arrays we are merging are [] and [1]. The result of the merge is [1]. Note that because m = 0, there are no elements in nums1. The 0 is only there to ensure the merge result can fit in nums1.</p> <p>Constraints:</p> <p>nums1.length == m + n nums2.length == n 0 &lt;= m, n &lt;= 200 1 &lt;= m + n &lt;= 200 -109 &lt;= nums1[i], nums2[j] &lt;= 109</p>"},{"location":"images/leetcode/#solution_5","title":"Solution","text":"<pre><code>class Solution:\n    def merge(self, nums1: List[int], m: int, nums2: List[int], n: int) -&gt; None:\n        \"\"\"\n        Do not return anything, modify nums1 in-place instead.\n        \"\"\"\n        del nums1[m:m+n]\n        for i in range(n):\n            k=0\n            while k in range (len(nums1)) and nums1[k] &lt; nums2[i]:\n                k+=1\n            nums1.insert(k, nums2[i])\n\n</code></pre>"},{"location":"images/leetcode/#238-product-of-array-except-self_1","title":"238. Product of Array Except Self","text":"<p>Given an integer array nums, return an array answer such that answer[i] is equal to the product of all the elements of nums except nums[i].</p> <p>The product of any prefix or suffix of nums is guaranteed to fit in a 32-bit integer.</p> <p>You must write an algorithm that runs in O(n) time and without using the division operation.</p> <p>Example 1:</p> <p>Input: nums = [1,2,3,4] Output: [24,12,8,6]</p> <p>Example 2:</p> <p>Input: nums = [-1,1,0,-3,3] Output: [0,0,9,0,0]</p> <p>Constraints:</p> <p>2 &lt;= nums.length &lt;= 105 -30 &lt;= nums[i] &lt;= 30 The product of any prefix or suffix of nums is guaranteed to fit in a 32-bit integer.</p>"},{"location":"images/leetcode/#solution_6","title":"Solution","text":"<pre><code>class Solution:\n    def productExceptSelf(self, nums: List[int]) -&gt; List[int]:\n        n = len(nums)\n        answer = [1] * n\n\n        left_product = 1\n        for i in range(n):\n            answer[i] = left_product\n            left_product *= nums[i]\n\n        right_product = 1\n        for i in range(n - 1, -1, -1):\n            answer[i] *= right_product\n            right_product *= nums[i]\n\n        return answer\n</code></pre>"}]}
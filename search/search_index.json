{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"lr1/","title":"WEB-\u041f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0434\u043e\u043c\u0430\u0448\u043d\u0435\u0435 \u0437\u0430\u0434\u0430\u043d\u0438\u0435 1","text":"<p>\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 1. \u0420\u0430\u0431\u043e\u0442\u0430 \u0441 \u0441\u043e\u043a\u0435\u0442\u0430\u043c\u0438.</p>"},{"location":"lr1/#_1","title":"\u0421\u043e\u0434\u0435\u0440\u0436\u0430\u043d\u0438\u0435","text":"<ul> <li>\u0417\u0430\u0434\u0430\u043d\u0438\u0435 1</li> <li>\u0417\u0430\u0434\u0430\u043d\u0438\u0435 2</li> <li>\u0417\u0430\u0434\u0430\u043d\u0438\u0435 3</li> <li>\u0417\u0430\u0434\u0430\u043d\u0438\u0435 4</li> <li>\u0417\u0430\u0434\u0430\u043d\u0438\u0435 5</li> </ul>"},{"location":"lr1/leetcode/","title":"Leetcode","text":""},{"location":"lr1/leetcode/#leetcode","title":"Leetcode","text":""},{"location":"lr1/leetcode/#274-h-index","title":"274. H-Index","text":"<p>Given an array of integers citations where citations[i] is the number of citations a researcher received for their ith paper, return the researcher's h-index.</p> <p>According to the definition of h-index on Wikipedia: The h-index is defined as the maximum value of h such that the given researcher has published at least h papers that have each been cited at least h times.</p> <p>Example 1:</p> <p>Input: citations = [3,0,6,1,5] Output: 3 Explanation: [3,0,6,1,5] means the researcher has 5 papers in total and each of them had received 3, 0, 6, 1, 5 citations respectively. Since the researcher has 3 papers with at least 3 citations each and the remaining two with no more than 3 citations each, their h-index is 3. Example 2:</p> <p>Input: citations = [1,3,1] Output: 1</p>"},{"location":"lr1/leetcode/#solution","title":"Solution","text":"<pre><code>class Solution:\n    def hIndex(self, citations: List[int]) -&gt; int:\n        citations.sort(reverse=True)  \n        h_index = 0\n        for i, citation in enumerate(citations):\n            if citation &gt;= i + 1:\n                h_index = i + 1\n            else:\n                break\n        return h_index\n</code></pre>"},{"location":"lr1/leetcode/#55-jump-game","title":"55. Jump Game","text":"<p>You are given an integer array nums. You are initially positioned at the array's first index, and each element in the array represents your maximum jump length at that position.</p> <p>Return true if you can reach the last index, or false otherwise.</p> <p>Example 1:</p> <p>Input: nums = [2,3,1,1,4] Output: true Explanation: Jump 1 step from index 0 to 1, then 3 steps to the last index. Example 2:</p> <p>Input: nums = [3,2,1,0,4] Output: false Explanation: You will always arrive at index 3 no matter what. Its maximum jump length is 0, which makes it impossible to reach the last index.</p> <p>Constraints:</p> <p>1 &lt;= nums.length &lt;= 104 0 &lt;= nums[i] &lt;= 105</p>"},{"location":"lr1/leetcode/#solution_1","title":"Solution","text":"<pre><code>class Solution:\n    def canJump(self, nums: List[int]) -&gt; bool:\n        max_reach = 0\n        for i, jump in enumerate(nums):\n            if i &gt; max_reach:\n                return False\n            max_reach = max(max_reach, i + jump)\n            if max_reach &gt;= len(nums) - 1:\n                return True\n        return False\n</code></pre>"},{"location":"lr1/leetcode/#122-best-time-to-buy-and-sell-stock-ii","title":"122. Best Time to Buy and Sell Stock II","text":"<p>You are given an integer array prices where prices[i] is the price of a given stock on the ith day.</p> <p>On each day, you may decide to buy and/or sell the stock. You can only hold at most one share of the stock at any time. However, you can buy it then immediately sell it on the same day.</p> <p>Find and return the maximum profit you can achieve.</p> <p>Example 1:</p> <p>Input: prices = [7,1,5,3,6,4] Output: 7 Explanation: Buy on day 2 (price = 1) and sell on day 3 (price = 5), profit = 5-1 = 4. Then buy on day 4 (price = 3) and sell on day 5 (price = 6), profit = 6-3 = 3. Total profit is 4 + 3 = 7. Example 2:</p> <p>Input: prices = [1,2,3,4,5] Output: 4 Explanation: Buy on day 1 (price = 1) and sell on day 5 (price = 5), profit = 5-1 = 4. Total profit is 4. Example 3:</p> <p>Input: prices = [7,6,4,3,1] Output: 0 Explanation: There is no way to make a positive profit, so we never buy the stock to achieve the maximum profit of 0.</p> <p>Constraints:</p> <p>1 &lt;= prices.length &lt;= 3 * 104 0 &lt;= prices[i] &lt;= 104</p>"},{"location":"lr1/leetcode/#solution_2","title":"Solution","text":"<pre><code>class Solution:\n    def maxProfit(self, prices: List[int]) -&gt; int:\n        max_profit = 0\n        for i in range(1, len(prices)):\n            if prices[i] &gt; prices[i - 1]:\n                max_profit += prices[i] - prices[i - 1]\n        return max_profit\n</code></pre>"},{"location":"lr1/leetcode/#27-remove-element","title":"27. Remove Element","text":"<p>Given an integer array nums and an integer val, remove all occurrences of val in nums in-place. The order of the elements may be changed. Then return the number of elements in nums which are not equal to val.</p> <p>Consider the number of elements in nums which are not equal to val be k, to get accepted, you need to do the following things:</p> <p>Change the array nums such that the first k elements of nums contain the elements which are not equal to val. The remaining elements of nums are not important as well as the size of nums. Return k. Custom Judge:</p> <p>The judge will test your solution with the following code:</p> <p>int[] nums = [...]; // Input array int val = ...; // Value to remove int[] expectedNums = [...]; // The expected answer with correct length.                             // It is sorted with no values equaling val.</p> <p>int k = removeElement(nums, val); // Calls your implementation</p> <p>assert k == expectedNums.length; sort(nums, 0, k); // Sort the first k elements of nums for (int i = 0; i &lt; actualLength; i++) {     assert nums[i] == expectedNums[i]; } If all assertions pass, then your solution will be accepted.</p> <p>Example 1:</p> <p>Input: nums = [3,2,2,3], val = 3 Output: 2, nums = [2,2,,] Explanation: Your function should return k = 2, with the first two elements of nums being 2. It does not matter what you leave beyond the returned k (hence they are underscores). Example 2:</p> <p>Input: nums = [0,1,2,2,3,0,4,2], val = 2 Output: 5, nums = [0,1,4,0,3,,,_] Explanation: Your function should return k = 5, with the first five elements of nums containing 0, 0, 1, 3, and 4. Note that the five elements can be returned in any order. It does not matter what you leave beyond the returned k (hence they are underscores).</p> <p>Constraints:</p> <p>0 &lt;= nums.length &lt;= 100 0 &lt;= nums[i] &lt;= 50 0 &lt;= val &lt;= 100</p>"},{"location":"lr1/leetcode/#solution_3","title":"Solution","text":"<pre><code>class Solution:\n    def removeElement(self, nums: List[int], val: int) -&gt; int:\n        count = 0\n        for i in range(len(nums))[::-1]:\n            if nums[i] == val:\n                nums.pop(i)\n                nums.append('_')\n                count += 1\n        return len(nums)-count        \n\n</code></pre>"},{"location":"lr1/leetcode/#88-merge-sorted-array","title":"88. Merge Sorted Array","text":"<p>You are given two integer arrays nums1 and nums2, sorted in non-decreasing order, and two integers m and n, representing the number of elements in nums1 and nums2 respectively.</p> <p>Merge nums1 and nums2 into a single array sorted in non-decreasing order.</p> <p>The final sorted array should not be returned by the function, but instead be stored inside the array nums1. To accommodate this, nums1 has a length of m + n, where the first m elements denote the elements that should be merged, and the last n elements are set to 0 and should be ignored. nums2 has a length of n.</p> <p>Example 1:</p> <p>Input: nums1 = [1,2,3,0,0,0], m = 3, nums2 = [2,5,6], n = 3 Output: [1,2,2,3,5,6] Explanation: The arrays we are merging are [1,2,3] and [2,5,6]. The result of the merge is [1,2,2,3,5,6] with the underlined elements coming from nums1. Example 2:</p> <p>Input: nums1 = [1], m = 1, nums2 = [], n = 0 Output: [1] Explanation: The arrays we are merging are [1] and []. The result of the merge is [1]. Example 3:</p> <p>Input: nums1 = [0], m = 0, nums2 = [1], n = 1 Output: [1] Explanation: The arrays we are merging are [] and [1]. The result of the merge is [1]. Note that because m = 0, there are no elements in nums1. The 0 is only there to ensure the merge result can fit in nums1.</p> <p>Constraints:</p> <p>nums1.length == m + n nums2.length == n 0 &lt;= m, n &lt;= 200 1 &lt;= m + n &lt;= 200 -109 &lt;= nums1[i], nums2[j] &lt;= 109</p>"},{"location":"lr1/leetcode/#solution_4","title":"Solution","text":"<pre><code>class Solution:\n    def merge(self, nums1: List[int], m: int, nums2: List[int], n: int) -&gt; None:\n        \"\"\"\n        Do not return anything, modify nums1 in-place instead.\n        \"\"\"\n        del nums1[m:m+n]\n        for i in range(n):\n            k=0\n            while k in range (len(nums1)) and nums1[k] &lt; nums2[i]:\n                k+=1\n            nums1.insert(k, nums2[i])\n\n</code></pre>"},{"location":"lr1/leetcode/#238-product-of-array-except-self","title":"238. Product of Array Except Self","text":"<p>Given an integer array nums, return an array answer such that answer[i] is equal to the product of all the elements of nums except nums[i].</p> <p>The product of any prefix or suffix of nums is guaranteed to fit in a 32-bit integer.</p> <p>You must write an algorithm that runs in O(n) time and without using the division operation.</p> <p>Example 1:</p> <p>Input: nums = [1,2,3,4] Output: [24,12,8,6]</p> <p>Example 2:</p> <p>Input: nums = [-1,1,0,-3,3] Output: [0,0,9,0,0]</p> <p>Constraints:</p> <p>2 &lt;= nums.length &lt;= 105 -30 &lt;= nums[i] &lt;= 30 The product of any prefix or suffix of nums is guaranteed to fit in a 32-bit integer.</p>"},{"location":"lr1/leetcode/#solution_5","title":"Solution","text":"<pre><code>class Solution:\n    def productExceptSelf(self, nums: List[int]) -&gt; List[int]:\n        n = len(nums)\n        answer = [1] * n\n\n        left_product = 1\n        for i in range(n):\n            answer[i] = left_product\n            left_product *= nums[i]\n\n        right_product = 1\n        for i in range(n - 1, -1, -1):\n            answer[i] *= right_product\n            right_product *= nums[i]\n\n        return answer\n</code></pre>"},{"location":"lr1/leetcode/#238-product-of-array-except-self_1","title":"238. Product of Array Except Self","text":"<p>Given an integer array nums, return an array answer such that answer[i] is equal to the product of all the elements of nums except nums[i].</p> <p>The product of any prefix or suffix of nums is guaranteed to fit in a 32-bit integer.</p> <p>You must write an algorithm that runs in O(n) time and without using the division operation.</p> <p>Example 1:</p> <p>Input: nums = [1,2,3,4] Output: [24,12,8,6]</p> <p>Example 2:</p> <p>Input: nums = [-1,1,0,-3,3] Output: [0,0,9,0,0]</p> <p>Constraints:</p> <p>2 &lt;= nums.length &lt;= 105 -30 &lt;= nums[i] &lt;= 30 The product of any prefix or suffix of nums is guaranteed to fit in a 32-bit integer.</p>"},{"location":"lr1/leetcode/#solution_6","title":"Solution","text":"<pre><code>class RandomizedSet:\n    def __init__(self):\n        self.val_to_index = {}\n        self.values = []\n\n    def insert(self, val: int) -&gt; bool:\n        if val in self.val_to_index:\n            return False\n        self.val_to_index[val] = len(self.values)\n        self.values.append(val)\n        return True\n\n    def remove(self, val: int) -&gt; bool:\n        if val not in self.val_to_index:\n            return False\n        index = self.val_to_index[val]\n        last_val = self.values[-1]\n        self.values[index] = last_val\n        self.val_to_index[last_val] = index\n        self.values.pop()\n        del self.val_to_index[val]\n        return True\n\n    def getRandom(self) -&gt; int:\n        return random.choice(self.values)\n</code></pre>"},{"location":"lr1/task1/","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 1","text":"<p>\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0443\u044e \u0438 \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u0443\u044e \u0447\u0430\u0441\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u041a\u043b\u0438\u0435\u043d\u0442 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0443 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u00abHello, server\u00bb, \u0438 \u043e\u043d\u043e \u0434\u043e\u043b\u0436\u043d\u043e \u043e\u0442\u043e\u0431\u0440\u0430\u0437\u0438\u0442\u044c\u0441\u044f \u043d\u0430 \u0441\u0442\u043e\u0440\u043e\u043d\u0435 \u0441\u0435\u0440\u0432\u0435\u0440\u0430. \u0412 \u043e\u0442\u0432\u0435\u0442 \u0441\u0435\u0440\u0432\u0435\u0440 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0443 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u00abHello, client\u00bb, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0434\u043e\u043b\u0436\u043d\u043e \u043e\u0442\u043e\u0431\u0440\u0430\u0437\u0438\u0442\u044c\u0441\u044f \u0443 \u043a\u043b\u0438\u0435\u043d\u0442\u0430.</p> <p>\u0422\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f:</p> <p>\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 socket. \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b\u0430 UDP.</p> <p>\u043a\u043e\u0434 \u0438\u0437 \u0444\u0430\u0439\u043b\u0430 client.py:</p> <pre><code>import socket\n\n\ndef start_client():\n    server_address = (\"127.0.0.1\", 12345)\n\n    with socket.socket(socket.AF_INET, socket.SOCK_DGRAM) as client_socket:\n        message = \"Hello, server\"\n        client_socket.sendto(message.encode(), server_address)\n        print(f\"\u0421\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u043e \u0441\u0435\u0440\u0432\u0435\u0440\u0443: {message}\")\n\n        data, _ = client_socket.recvfrom(1024)\n        print(f\"\u041e\u0442\u0432\u0435\u0442 \u043e\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430: {data.decode()}\")\n\n\nif __name__ == \"__main__\":\n    start_client()\n</code></pre> <p> \u043a\u043e\u0434 \u0438\u0437 \u0444\u0430\u0439\u043b\u0430 server.py:</p> <pre><code>import socket\n\n\ndef start_server():\n    server_address = (\"127.0.0.1\", 12345)\n\n    with socket.socket(socket.AF_INET, socket.SOCK_DGRAM) as server_socket:\n        server_socket.bind(server_address)\n        print(\"\u0421\u0435\u0440\u0432\u0435\u0440 \u0437\u0430\u043f\u0443\u0449\u0435\u043d \u0438 \u043e\u0436\u0438\u0434\u0430\u0435\u0442 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439...\")\n\n        while True:\n            data, client_address = server_socket.recvfrom(1024)\n            print(f\"\u0421\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u043e\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0430 {client_address}: {data.decode()}\")\n\n            response = \"Hello, client\"\n            server_socket.sendto(response.encode(), client_address)\n\n\nif __name__ == \"__main__\":\n    start_server()\n</code></pre> <p></p>"},{"location":"lr1/task2/","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 2","text":"<p>\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0443\u044e \u0438 \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u0443\u044e \u0447\u0430\u0441\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u041a\u043b\u0438\u0435\u043d\u0442 \u0437\u0430\u043f\u0440\u0430\u0448\u0438\u0432\u0430\u0435\u0442 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u043c\u0430\u0442\u0435\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438, \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u0432\u0432\u043e\u0434\u044f\u0442\u0441\u044f \u0441 \u043a\u043b\u0430\u0432\u0438\u0430\u0442\u0443\u0440\u044b. \u0421\u0435\u0440\u0432\u0435\u0440 \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0443.</p> <p>\u041c\u043e\u0439 \u0432\u0430\u0440\u0438\u0430\u043d\u0442 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438:</p> <pre><code>\u0420\u0435\u0448\u0435\u043d\u0438\u0435 \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u043e\u0433\u043e \u0443\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044f.\n</code></pre> <p>\u0422\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f:</p> <p>\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 socket. \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b\u0430 TCP.</p> <p>\u043a\u043e\u0434 \u0438\u0437 \u0444\u0430\u0439\u043b\u0430 client.py:</p> <pre><code>import socket\n\n\ndef start_client():\n    server_address = (\"127.0.0.1\", 12345)\n\n    with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as client_socket:\n        client_socket.connect(server_address)\n        print(\"\u041f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u043a \u0441\u0435\u0440\u0432\u0435\u0440\u0443 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043e.\")\n        print(\"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u043a\u043e\u044d\u0444\u0444\u0438\u0446\u0438\u0435\u043d\u0442\u044b \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u043e\u0433\u043e \u0443\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044f \u0438\u043b\u0438 'exit' \u0434\u043b\u044f \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f.\")\n\n        while True:\n            message = input(\"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 a, b, c \u0447\u0435\u0440\u0435\u0437 \u043f\u0440\u043e\u0431\u0435\u043b: \")\n            if message.strip().lower() == \"exit\":\n                client_socket.sendall(message.encode())\n                print(\"\u0417\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u043a\u043b\u0438\u0435\u043d\u0442\u0430.\")\n                break\n\n            client_socket.sendall(message.encode())\n\n            result = client_socket.recv(1024).decode()\n            print(f\"\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u043e\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430: {result}\")\n\n\nif __name__ == \"__main__\":\n    start_client()\n\n</code></pre> <p>\u0420\u0430\u0431\u043e\u0442\u0430 \u043a\u043b\u0438\u0435\u043d\u0442\u0430 \u043f\u0440\u0438 \u0437\u0430\u043f\u0443\u0441\u043a\u0435 \u043a\u043e\u0434\u0430 \u043d\u0430 \u0441\u043a\u0440\u0438\u043d\u0448\u043e\u0442\u0435 \u043a\u043e\u0434 \u0438\u0437 \u0444\u0430\u0439\u043b\u0430 server.py:</p> <pre><code>import socket\nimport math\n\n\ndef solve_quadratic(a, b, c):\n    \"\"\"\u0420\u0435\u0448\u0435\u043d\u0438\u0435 \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u043e\u0433\u043e \u0443\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044f ax^2 + bx + c = 0\"\"\"\n    discriminant = b ** 2 - 4 * a * c\n    if discriminant &gt; 0:\n        root1 = (-b + math.sqrt(discriminant)) / (2 * a)\n        root2 = (-b - math.sqrt(discriminant)) / (2 * a)\n        return f\"\u0414\u0432\u0430 \u043a\u043e\u0440\u043d\u044f: {root1}, {root2}\"\n    elif discriminant == 0:\n        root = -b / (2 * a)\n        return f\"\u041e\u0434\u0438\u043d \u043a\u043e\u0440\u0435\u043d\u044c: {root}\"\n    else:\n        return \"\u041a\u043e\u0440\u043d\u0435\u0439 \u043d\u0435\u0442\"\n\n\ndef start_server():\n    server_address = (\"127.0.0.1\", 12345)\n\n    with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as server_socket:\n        server_socket.bind(server_address)\n        server_socket.listen(1)\n        print(\"\u0421\u0435\u0440\u0432\u0435\u0440 \u0437\u0430\u043f\u0443\u0449\u0435\u043d \u0438 \u043e\u0436\u0438\u0434\u0430\u0435\u0442 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0439...\")\n\n        while True:\n            connection, client_address = server_socket.accept()\n            with connection:\n                print(f\"\u041f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d \u043a\u043b\u0438\u0435\u043d\u0442: {client_address}\")\n                while True:\n                    data = connection.recv(1024).decode()\n                    if not data or data.strip().lower() == \"exit\":\n                        print(\"\u041a\u043b\u0438\u0435\u043d\u0442 \u0437\u0430\u0432\u0435\u0440\u0448\u0438\u043b \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435.\")\n                        break\n\n                    try:\n                        a, b, c = map(float, data.split())\n                        result = solve_quadratic(a, b, c)\n                    except ValueError:\n                        result = \"\u041e\u0448\u0438\u0431\u043a\u0430: \u043d\u0435\u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435. \u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0442\u0440\u0438 \u0447\u0438\u0441\u043b\u0430.\"\n\n                    connection.sendall(result.encode())\n\n\nif __name__ == \"__main__\":\n    start_server()\n\n</code></pre> <p>\u0420\u0430\u0431\u043e\u0442\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u043f\u0440\u0438 \u0437\u0430\u043f\u0443\u0441\u043a\u0435 \u043a\u043e\u0434\u0430 \u043d\u0430 \u0441\u043a\u0440\u0438\u043d\u0448\u043e\u0442\u0435 </p>"},{"location":"lr1/task3/","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 3","text":"<p>\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u0443\u044e \u0447\u0430\u0441\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u041a\u043b\u0438\u0435\u043d\u0442 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0435\u0442\u0441\u044f \u043a \u0441\u0435\u0440\u0432\u0435\u0440\u0443, \u0438 \u0432 \u043e\u0442\u0432\u0435\u0442 \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 HTTP-\u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0435\u0435 HTML-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0441\u0435\u0440\u0432\u0435\u0440 \u043f\u043e\u0434\u0433\u0440\u0443\u0436\u0430\u0435\u0442 \u0438\u0437 \u0444\u0430\u0439\u043b\u0430 index.html.</p> <p>\u0422\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f:</p> <p>\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 socket.</p> <p>\u043a\u043e\u0434 \u0438\u0437 \u0444\u0430\u0439\u043b\u0430 server.py:</p> <pre><code>import socket\nimport os\n\n\ndef start_server():\n    server_address = (\"127.0.0.1\", 8080)\n\n    with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as server_socket:\n        server_socket.bind(server_address)\n        server_socket.listen(1)\n        print(\"\u0421\u0435\u0440\u0432\u0435\u0440 \u0437\u0430\u043f\u0443\u0449\u0435\u043d \u0438 \u043e\u0436\u0438\u0434\u0430\u0435\u0442 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0439 \u043d\u0430 \u043f\u043e\u0440\u0442\u0443 8080...\")\n\n        while True:\n            connection, client_address = server_socket.accept()\n            with connection:\n                print(f\"\u041f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d \u043a\u043b\u0438\u0435\u043d\u0442: {client_address}\")\n                request = connection.recv(1024).decode()\n\n                if not request.strip():\n                    print(\"\u041f\u0443\u0441\u0442\u043e\u0439 \u0437\u0430\u043f\u0440\u043e\u0441. \u041f\u0440\u043e\u043f\u0443\u0441\u043a\u0430\u0435\u043c...\")\n                    continue\n\n                print(f\"\u041f\u043e\u043b\u0443\u0447\u0435\u043d \u0437\u0430\u043f\u0440\u043e\u0441: {request.splitlines()[0]}\")\n\n                try:\n                    resource = request.split(\" \")[1]\n                except IndexError:\n                    resource = \"/\"\n\n                if resource == \"/\" or resource == \"/index.html\":\n                    # \u0417\u0430\u0433\u0440\u0443\u0437\u043a\u0430 HTML-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b\n                    try:\n                        with open(\"index.html\", \"r\", encoding=\"utf-8\") as file:\n                            html_content = file.read()\n                        response_body = html_content\n                        response_headers = (\n                            \"HTTP/1.1 200 OK\\r\\n\"\n                            \"Content-Type: text/html; charset=utf-8\\r\\n\"\n                            f\"Content-Length: {len(response_body)}\\r\\n\"\n                            \"Connection: close\\r\\n\\r\\n\"\n                        )\n                    except FileNotFoundError:\n                        response_body = \"&lt;h1&gt;404 Not Found&lt;/h1&gt;\"\n                        response_headers = (\n                            \"HTTP/1.1 404 Not Found\\r\\n\"\n                            \"Content-Type: text/html; charset=utf-8\\r\\n\"\n                            f\"Content-Length: {len(response_body)}\\r\\n\"\n                            \"Connection: close\\r\\n\\r\\n\"\n                        )\n                elif resource.startswith(\"/images/\"):\n                    # \u041e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u043d\u0430 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435\n                    image_path = resource.lstrip(\"/\")\n                    if os.path.exists(image_path):\n                        with open(image_path, \"rb\") as file:\n                            image_content = file.read()\n                        response_body = image_content\n                        response_headers = (\n                                               \"HTTP/1.1 200 OK\\r\\n\"\n                                               \"Content-Type: image/png\\r\\n\"\n                                               f\"Content-Length: {len(response_body)}\\r\\n\"\n                                               \"Connection: close\\r\\n\\r\\n\"\n                                           ).encode() + response_body\n                        connection.sendall(response_headers)\n                        continue\n                    else:\n                        response_body = \"&lt;h1&gt;404 Not Found&lt;/h1&gt;\"\n                        response_headers = (\n                            \"HTTP/1.1 404 Not Found\\r\\n\"\n                            \"Content-Type: text/html; charset=utf-8\\r\\n\"\n                            f\"Content-Length: {len(response_body)}\\r\\n\"\n                            \"Connection: close\\r\\n\\r\\n\"\n                        )\n                else:\n                    # \u0415\u0441\u043b\u0438 \u0440\u0435\u0441\u0443\u0440\u0441 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\n                    response_body = \"&lt;h1&gt;404 Not Found&lt;/h1&gt;\"\n                    response_headers = (\n                        \"HTTP/1.1 404 Not Found\\r\\n\"\n                        \"Content-Type: text/html; charset=utf-8\\r\\n\"\n                        f\"Content-Length: {len(response_body)}\\r\\n\"\n                        \"Connection: close\\r\\n\\r\\n\"\n                    )\n\n                # \u041e\u0442\u043f\u0440\u0430\u0432\u043a\u0430 HTTP-\u043e\u0442\u0432\u0435\u0442\u0430 \u043a\u043b\u0438\u0435\u043d\u0442\u0443\n                response = response_headers + response_body\n                connection.sendall(response.encode() if isinstance(response, str) else response)\n\n\nif __name__ == \"__main__\":\n    start_server()\n\n</code></pre> <p>\u041a\u043e\u0434 \u0438\u0437 \u0444\u0430\u0439\u043b\u0430 index.html</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;title&gt;\u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430&lt;/title&gt;\n    &lt;style&gt;\n        body {\n            margin: 0;\n            padding: 0;\n            font-family: \"Roboto Light\", sans-serif;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            height: 100vh;\n            color: black;\n            text-align: center;\n            flex-direction: column;\n        }\n\n        h1 {\n            font-size: 3em;\n            text-shadow: 2px 2px 4px rgb(104, 181, 255);\n        }\n    &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;h1&gt;Welcome to server!&lt;/h1&gt;\n&lt;h2&gt;kotyata kotyata kotyata&lt;/h2&gt;\n&lt;img src=\"images/img.jpg\" width=\"300\"&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>\u041f\u043e\u0441\u043b\u0435 \u0437\u0430\u043f\u0443\u0441\u043a\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u043f\u0435\u0440\u0435\u0445\u043e\u0434\u0438\u043c \u043d\u0430 http://localhost:8080</p> <p>\u0420\u0430\u0431\u043e\u0442\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u043d\u0430 localhost \u043f\u0440\u0438 \u0437\u0430\u043f\u0443\u0441\u043a\u0435 \u043a\u043e\u0434\u0430 \u043d\u0430 \u0441\u043a\u0440\u0438\u043d\u0448\u043e\u0442\u0435 </p>"},{"location":"lr1/task4/","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 4","text":"<p>\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0434\u0432\u0443\u0445\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u0438\u043b\u0438 \u043c\u043d\u043e\u0433\u043e\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u0447\u0430\u0442. \u0414\u043b\u044f \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u0431\u0430\u043b\u043b\u043e\u0432 \u0440\u0435\u0430\u043b\u0438\u0437\u0443\u0439\u0442\u0435 \u043c\u043d\u043e\u0433\u043e\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u0447\u0430\u0442.</p> <p>\u0422\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f:</p> <p>\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 socket.</p> <p>\u0414\u043b\u044f \u043c\u043d\u043e\u0433\u043e\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0433\u043e \u0447\u0430\u0442\u0430 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 threading.</p> <p>\u043a\u043e\u0434 \u0438\u0437 \u0444\u0430\u0439\u043b\u0430 client.py:</p> <pre><code>import socket\nimport threading\n\n\ndef receive_messages(client_socket):\n    \"\"\"\u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439 \u043e\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430.\"\"\"\n    while True:\n        try:\n            message = client_socket.recv(1024).decode()\n            if message:\n                print(message)\n        except:\n            break\n\n\ndef start_client():\n    \"\"\"\u0417\u0430\u043f\u0443\u0441\u043a \u043a\u043b\u0438\u0435\u043d\u0442\u0430 \u0438 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u043a \u0441\u0435\u0440\u0432\u0435\u0440\u0443.\"\"\"\n    client_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n    client_socket.connect((\"127.0.0.1\", 8080))\n\n    name = input(\"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0432\u0430\u0448\u0435 \u0438\u043c\u044f: \")\n    client_socket.send(name.encode())\n\n    # \u0417\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u043c \u043f\u043e\u0442\u043e\u043a \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439 \u043e\u0442 \u0434\u0440\u0443\u0433\u0438\u0445 \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432\n    receive_thread = threading.Thread(target=receive_messages, args=(client_socket,))\n    receive_thread.start()\n\n    # \u041e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u043c \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u043d\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\n    while True:\n        message = input()\n        if message.lower() == 'exit':\n            break\n        client_socket.send(message.encode())\n\n    client_socket.close()\n\n\nif __name__ == \"__main__\":\n    start_client()\n\n</code></pre> <p>\u043a\u043e\u0434 \u0438\u0437 \u0444\u0430\u0439\u043b\u0430 server.py:</p> <pre><code>import socket\nimport threading\n\nclients = []\nclient_names = {}\n\n\ndef handle_client(client_socket, client_address):\n    \"\"\"\u0424\u0443\u043d\u043a\u0446\u0438\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439 \u043e\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0430.\"\"\"\n    try:\n        client_socket.send(\"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0432\u0430\u0448\u0435 \u0438\u043c\u044f: \".encode())\n        name = client_socket.recv(1024).decode().strip()\n        client_names[client_socket] = name\n        clients.append(client_socket)\n\n        print(f\"{name} \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0438\u043b\u0441\u044f \u0438\u0437 {client_address}\")\n\n        # \u041e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u043c \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u043e\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0430\n        while True:\n            message = client_socket.recv(1024).decode()\n            if message:\n                print(f\"\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u043e \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u043e\u0442 {name}: {message}\")\n                broadcast(f\"{name}: {message}\", client_socket)\n            else:\n                break\n    except:\n        print(f\"\u041e\u0448\u0438\u0431\u043a\u0430 \u0441 \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u043c {client_address}\")\n    finally:\n        clients.remove(client_socket)\n        del client_names[client_socket]\n        client_socket.close()\n\n\ndef broadcast(message, sender_socket):\n    \"\"\"\u041e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u043c \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u0432\u0441\u0435\u043c \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u043d\u044b\u043c \u043a\u043b\u0438\u0435\u043d\u0442\u0430\u043c, \u043a\u0440\u043e\u043c\u0435 \u043e\u0442\u043f\u0440\u0430\u0432\u0438\u0442\u0435\u043b\u044f.\"\"\"\n    for client_socket in clients:\n        if client_socket != sender_socket:\n            try:\n                client_socket.send(message.encode())\n            except:\n                clients.remove(client_socket)\n\n\ndef start_server():\n    server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n    server_socket.bind((\"127.0.0.1\", 8080))\n    server_socket.listen(5)\n    print(\"\u0421\u0435\u0440\u0432\u0435\u0440 \u0437\u0430\u043f\u0443\u0449\u0435\u043d. \u041e\u0436\u0438\u0434\u0430\u044e \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f...\")\n\n    while True:\n        client_socket, client_address = server_socket.accept()\n        # \u0417\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u043c \u043d\u043e\u0432\u044b\u0439 \u043f\u043e\u0442\u043e\u043a \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u043a\u043b\u0438\u0435\u043d\u0442\u0430\n        client_thread = threading.Thread(target=handle_client, args=(client_socket, client_address))\n        client_thread.start()\n\n\nif __name__ == \"__main__\":\n    start_server()\n\n</code></pre> <p>\u0420\u0430\u0431\u043e\u0442\u0430 \u043f\u0435\u0440\u0432\u043e\u0433\u043e \u043a\u043b\u0438\u0435\u043d\u0442\u0430 \u043f\u0440\u0438 \u0437\u0430\u043f\u0443\u0441\u043a\u0435 \u043a\u043e\u0434\u0430 \u043d\u0430 \u0441\u043a\u0440\u0438\u043d\u0448\u043e\u0442\u0435 </p> <p>\u0420\u0430\u0431\u043e\u0442\u0430 \u0442\u0440\u0435\u0442\u044c\u0435\u0433\u043e \u043a\u043b\u0438\u0435\u043d\u0442\u0430 \u043f\u0440\u0438 \u0437\u0430\u043f\u0443\u0441\u043a\u0435 \u043a\u043e\u0434\u0430 \u043d\u0430 \u0441\u043a\u0440\u0438\u043d\u0448\u043e\u0442\u0435 </p>"},{"location":"lr1/task5/","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 5","text":"<p>\u041d\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u043f\u0440\u043e\u0441\u0442\u043e\u0439 \u0432\u0435\u0431-\u0441\u0435\u0440\u0432\u0435\u0440 \u0434\u043b\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 GET \u0438 POST HTTP-\u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 socket \u0432 Python.</p> <p>\u0417\u0430\u0434\u0430\u043d\u0438\u0435:</p> <pre><code>\u0421\u0435\u0440\u0432\u0435\u0440 \u0434\u043e\u043b\u0436\u0435\u043d:\n    \u041f\u0440\u0438\u043d\u044f\u0442\u044c \u0438 \u0437\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0435 \u0438 \u043e\u0446\u0435\u043d\u043a\u0435 \u043f\u043e \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0435.\n    \u041e\u0442\u0434\u0430\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e\u0431\u043e \u0432\u0441\u0435\u0445 \u043e\u0446\u0435\u043d\u043a\u0430\u0445 \u043f\u043e \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0430\u043c \u0432 \u0432\u0438\u0434\u0435 HTML-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b.\n</code></pre> <p>\u043a\u043e\u0434 \u0438\u0437 \u0444\u0430\u0439\u043b\u0430 server.py:</p> <pre><code>from socket import *\nfrom urllib.parse import unquote\n\ngrades = []\n\n\ndef generate_html():\n    try:\n        with open('index.html', 'r', encoding='utf-8') as f:\n            html = f.read()\n\n        table_rows = ''\n        for subject, grade in grades:\n            table_rows += f\"&lt;tr&gt;&lt;td&gt;{subject}&lt;/td&gt;&lt;td&gt;{grade}&lt;/td&gt;&lt;/tr&gt;\"\n\n        html = html.replace('&lt;!-- \u0422\u0430\u0431\u043b\u0438\u0446\u0430 \u043e\u0446\u0435\u043d\u043e\u043a \u0431\u0443\u0434\u0435\u0442 \u0434\u0438\u043d\u0430\u043c\u0438\u0447\u0435\u0441\u043a\u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0442\u044c\u0441\u044f \u0441\u0435\u0440\u0432\u0435\u0440\u043e\u043c --&gt;', table_rows)\n\n        return html\n    except Exception as e:\n        return f\"&lt;h1&gt;\u041e\u0448\u0438\u0431\u043a\u0430: {e}&lt;/h1&gt;\"\n\n\ndef parse_post_data(data):\n    params = {}\n    try:\n        body = data.split('\\r\\n\\r\\n', 1)[1]\n        for param in body.split('&amp;'):\n            key, value = param.split('=')\n            params[key] = unquote(value)\n    except IndexError:\n        pass\n    return params\n\n\nserver_socket = socket(AF_INET, SOCK_STREAM)\nserver_socket.bind(('localhost', 8080))\nserver_socket.listen(1)\n\nprint(\"\u0421\u0435\u0440\u0432\u0435\u0440 \u0437\u0430\u043f\u0443\u0449\u0435\u043d \u043d\u0430 \u043f\u043e\u0440\u0442\u0443 8080...\")\n\nwhile True:\n    client_socket, client_address = server_socket.accept()\n    try:\n        request = client_socket.recv(4096).decode('utf-8')\n\n        headers = request.split('\\n')\n        method = headers[0].split()[0]\n\n        if method == 'GET':\n            response_body = generate_html()\n            response = f\"HTTP/1.1 200 OK\\r\\nContent-Type: text/html; charset=utf-8\\r\\n\\r\\n{response_body}\"\n            client_socket.sendall(response.encode('utf-8'))\n\n\n        elif method == 'POST':\n            params = parse_post_data(request)\n            subject = params.get('subject', '').strip()\n            grade = params.get('grade', '').strip()\n\n            # \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u0439\n            if subject and grade.isdigit() and 1 &lt;= int(grade) &lt;= 100:\n                grades.append((subject, grade))\n                response = \"HTTP/1.1 303 See Other\\r\\nLocation: /\\r\\n\\r\\n\"\n            else:\n                response_body = \"&lt;h1&gt;\u041e\u0448\u0438\u0431\u043a\u0430: \u041e\u0446\u0435\u043d\u043a\u0430 \u0434\u043e\u043b\u0436\u043d\u0430 \u0431\u044b\u0442\u044c \u0447\u0438\u0441\u043b\u043e\u043c \u043e\u0442 1 \u0434\u043e 100&lt;/h1&gt;\"\n                response = f\"HTTP/1.1 400 Bad Request\\r\\nContent-Type: text/html; charset=utf-8\\r\\n\\r\\n{response_body}\"\n            client_socket.sendall(response.encode('utf-8'))\n\n\n    except Exception as e:\n        print(f\"\u041e\u0448\u0438\u0431\u043a\u0430: {e}\")\n\n    finally:\n        client_socket.close()\n\n\n</code></pre> <p>\u041a\u043e\u0434 \u0438\u0437 \u0444\u0430\u0439\u043b\u0430 index.html</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"ru\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"utf-8\"&gt;\n    &lt;title&gt;\u041e\u0446\u0435\u043d\u043a\u0438 \u043f\u043e \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0430\u043c&lt;/title&gt;\n    &lt;style&gt;\n        body {\n            font-family: \"SF Pro Text\", sans-serif;\n            background-color: #e3efef;\n            color: #000000;\n            text-align: center;\n            padding: 50px;\n        }\n        h1 {\n            color: #000000;\n        }\n        table {\n            margin: 0 auto;\n            border-collapse: collapse;\n            width: 50%;\n            background-color: #fff;\n        }\n        th, td {\n            border: 1px solid #ddd;\n            padding: 12px;\n            text-align: center;\n        }\n        th {\n            background-color: #f2f2f2;\n            font-weight: bold;\n        }\n        form {\n            margin-top: 20px;\n        }\n        input[type=\"text\"] {\n            padding: 10px;\n            width: 200px;\n            margin: 5px 0;\n            border-radius: 10px;\n            border: 0;\n        }\n        input[type=\"number\"] {\n            padding: 10px;\n            width: 200px;\n            margin: 5px 0;\n            border-radius: 10px;\n            border: 0;\n        }\n        input[type=\"submit\"] {\n            margin-top: 10px;\n            padding: 10px 20px;\n            background-color: #68b5ff;\n            color: white;\n            border: none;\n            cursor: pointer;\n            border-radius: 10px;\n        }\n        input[type=\"submit\"]:hover {\n            background-color: #007bff;\n            border-radius: 10px;\n        }\n    &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h1&gt;\u041e\u0446\u0435\u043d\u043a\u0438 \u043f\u043e \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0430\u043c&lt;/h1&gt;\n    &lt;table&gt;\n        &lt;tr&gt;&lt;th&gt;\u0414\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0430&lt;/th&gt;&lt;th&gt;\u041e\u0446\u0435\u043d\u043a\u0430&lt;/th&gt;&lt;/tr&gt;\n        &lt;!-- \u0422\u0430\u0431\u043b\u0438\u0446\u0430 \u043e\u0446\u0435\u043d\u043e\u043a \u0431\u0443\u0434\u0435\u0442 \u0434\u0438\u043d\u0430\u043c\u0438\u0447\u0435\u0441\u043a\u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0442\u044c\u0441\u044f \u0441\u0435\u0440\u0432\u0435\u0440\u043e\u043c --&gt;\n    &lt;/table&gt;\n    &lt;form method=\"POST\"&gt;\n        &lt;input type=\"text\" name=\"subject\" placeholder=\"\u0414\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0430\" required&gt;&lt;br&gt;\n        &lt;input type=\"number\" name=\"grade\" placeholder=\"\u041e\u0446\u0435\u043d\u043a\u0430\" min=\"1\" max=\"100\" required&gt;&lt;br&gt;\n        &lt;input type=\"submit\" value=\"\u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c\"&gt;\n    &lt;/form&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>\u041f\u043e\u0441\u043b\u0435 \u0437\u0430\u043f\u0443\u0441\u043a\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u043f\u0435\u0440\u0435\u0445\u043e\u0434\u0438\u043c \u043d\u0430 http://localhost:8080</p> <p>\u0420\u0430\u0431\u043e\u0442\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u043d\u0430 localhost \u043f\u0440\u0438 \u0437\u0430\u043f\u0443\u0441\u043a\u0435 \u043a\u043e\u0434\u0430 \u043d\u0430 \u0441\u043a\u0440\u0438\u043d\u0448\u043e\u0442\u0435 </p> <p>\u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u043f\u0440\u0435\u0434\u043c\u0435\u0442 </p> <p>\u041f\u0440\u0435\u0434\u043c\u0435\u0442 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d </p>"},{"location":"lr2/","title":"WEB-\u041f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0434\u043e\u043c\u0430\u0448\u043d\u0435\u0435 \u0437\u0430\u0434\u0430\u043d\u0438\u0435 2","text":"<p>\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 2. \u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043f\u0440\u043e\u0441\u0442\u043e\u0433\u043e \u0441\u0430\u0439\u0442\u0430 \u043d\u0430 django.</p>"},{"location":"lr2/#_1","title":"\u0421\u043e\u0434\u0435\u0440\u0436\u0430\u043d\u0438\u0435","text":"<ul> <li>\u0417\u0430\u0434\u0430\u043d\u0438\u0435</li> <li>\u041c\u043e\u0434\u0435\u043b\u0438</li> <li>\u0424\u043e\u0440\u043c\u044b</li> <li>\u041f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f</li> <li>\u041c\u0430\u0440\u0448\u0440\u0443\u0442\u044b</li> <li>Leetcode</li> </ul>"},{"location":"lr2/admin/","title":"\u0410\u0434\u043c\u0438\u043d \u043f\u0430\u043d\u0435\u043b\u044c","text":""},{"location":"lr2/admin/#customuser","title":"CustomUser","text":"<ul> <li>\u0412\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0444\u0438\u043b\u044c\u0442\u0440\u0430\u0446\u0438\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439 \u043f\u043e \u0441\u0442\u0430\u0442\u0443\u0441\u0443 \u0430\u043a\u0442\u0438\u0432\u043d\u043e\u0441\u0442\u0438 \u0438 \u043f\u0440\u0430\u0432\u0430\u043c \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u0430.</li> <li>\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d \u043f\u043e\u0438\u0441\u043a \u043f\u043e \u0438\u043c\u0435\u043d\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0438 \u044d\u043b\u0435\u043a\u0442\u0440\u043e\u043d\u043d\u043e\u0439 \u043f\u043e\u0447\u0442\u0435 \u0434\u043b\u044f \u0431\u044b\u0441\u0442\u0440\u043e\u0439 \u043d\u0430\u0432\u0438\u0433\u0430\u0446\u0438\u0438.</li> </ul> <pre><code>@admin.register(CustomUser)\nclass CustomUserAdmin(admin.ModelAdmin):\n    list_display = ('username', 'email', 'is_staff', 'is_active')\n    list_filter = ('is_staff', 'is_active')\n    search_fields = ('username', 'email')\n</code></pre>"},{"location":"lr2/admin/#travelagency","title":"TravelAgency","text":"<ul> <li>\u0424\u0438\u043b\u044c\u0442\u0440\u0430\u0446\u0438\u044f \u043f\u043e \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044e \u0430\u0433\u0435\u043d\u0442\u0441\u0442\u0432\u0430.</li> <li>\u0412\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0431\u044b\u0441\u0442\u0440\u043e\u0433\u043e \u043f\u043e\u0438\u0441\u043a\u0430 \u043f\u043e \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044e \u0430\u0433\u0435\u043d\u0442\u0441\u0442\u0432\u0430.</li> </ul> <pre><code>@admin.register(TravelAgency)\nclass TravelAgencyAdmin(admin.ModelAdmin):\n    list_display = ('name', 'contact_info')\n    search_fields = ('name',)\n    ordering = ('name',)\n</code></pre>"},{"location":"lr2/admin/#tour","title":"Tour","text":"<ul> <li>\u0424\u0438\u043b\u044c\u0442\u0440\u0430\u0446\u0438\u044f \u0442\u0443\u0440\u043e\u0432 \u043f\u043e \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0443 \u0437\u0432\u0435\u0437\u0434, \u0441\u0442\u0440\u0430\u043d\u0435 \u0438 \u0430\u0433\u0435\u043d\u0442\u0441\u0442\u0432\u0443.</li> <li>\u041f\u043e\u0438\u0441\u043a \u043f\u043e \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044e \u043e\u0442\u0435\u043b\u044f, \u0433\u043e\u0440\u043e\u0434\u0443 \u0438 \u0441\u0442\u0440\u0430\u043d\u0435 \u0434\u043b\u044f \u0443\u0434\u043e\u0431\u0441\u0442\u0432\u0430 \u043d\u0430\u0432\u0438\u0433\u0430\u0446\u0438\u0438.</li> <li>\u0421\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0430 \u0442\u0443\u0440\u043e\u0432 \u043f\u043e \u0434\u0430\u0442\u0435 \u043d\u0430\u0447\u0430\u043b\u0430.</li> </ul> <pre><code>@admin.register(Tour)\nclass TourAdmin(admin.ModelAdmin):\n    list_display = ('hotel', 'stars', 'agency', 'country', 'city', 'start_date', 'end_date')\n    list_filter = ('stars', 'country', 'agency')\n    search_fields = ('hotel', 'country', 'city')\n    ordering = ('start_date',)\n\n</code></pre>"},{"location":"lr2/admin/#tariff","title":"Tariff","text":"<ul> <li>\u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0430 \u0444\u0438\u043b\u044c\u0442\u0440\u0430\u0446\u0438\u044f \u043f\u043e \u0442\u0443\u0440\u0443.</li> <li>\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d \u043f\u043e\u0438\u0441\u043a \u043f\u043e \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044e \u0442\u0430\u0440\u0438\u0444\u0430.</li> <li>\u0421\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0430 \u0442\u0430\u0440\u0438\u0444\u043e\u0432 \u043f\u043e \u0446\u0435\u043d\u0435.</li> </ul> <pre><code>@admin.register(Tariff)\nclass TariffAdmin(admin.ModelAdmin):\n    list_display = ('name', 'price', 'tour')\n    list_filter = ('tour',)\n    search_fields = ('name',)\n    ordering = ('price',)\n</code></pre>"},{"location":"lr2/admin/#mealoption","title":"MealOption","text":"<ul> <li>\u0424\u0438\u043b\u044c\u0442\u0440\u0430\u0446\u0438\u044f \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u043e\u0432 \u043f\u0438\u0442\u0430\u043d\u0438\u044f \u043f\u043e \u0442\u0443\u0440\u0443.</li> <li>\u0412\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u043f\u043e\u0438\u0441\u043a\u0430 \u043f\u043e \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044e \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u0430 \u043f\u0438\u0442\u0430\u043d\u0438\u044f.</li> <li>\u0421\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0430 \u043f\u043e \u0446\u0435\u043d\u0435.</li> </ul> <pre><code>@admin.register(MealOption)\nclass MealOptionAdmin(admin.ModelAdmin):\n    list_display = ('name', 'price', 'tour')\n    list_filter = ('tour',)\n    search_fields = ('name',)\n    ordering = ('price',)\n</code></pre>"},{"location":"lr2/admin/#booking","title":"Booking","text":"<ul> <li>\u0424\u0438\u043b\u044c\u0442\u0440\u0430\u0446\u0438\u044f \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0439 \u043f\u043e \u0441\u0442\u0430\u0442\u0443\u0441\u0443 \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u0438\u044f, \u0434\u0430\u0442\u0435 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0438 \u0442\u0443\u0440\u0443.</li> <li>\u041f\u043e\u0438\u0441\u043a \u043f\u043e \u0438\u043c\u0435\u043d\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0438 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044e \u043e\u0442\u0435\u043b\u044f.</li> <li>\u0421\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0430 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0439 \u043f\u043e \u0434\u0430\u0442\u0435 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f (\u043e\u0442 \u043d\u043e\u0432\u044b\u0445 \u043a \u0441\u0442\u0430\u0440\u044b\u043c).</li> </ul> <pre><code>@admin.register(Booking)\nclass BookingAdmin(admin.ModelAdmin):\n    list_display = ('user', 'tour', 'num_people', 'tariff', 'meal_option', 'is_confirmed', 'total_price', 'created')\n    list_filter = ('is_confirmed', 'created', 'tour')\n    search_fields = ('user__username', 'tour__hotel')\n    ordering = ('-created',)\n</code></pre>"},{"location":"lr2/admin/#review","title":"Review","text":"<ul> <li>\u0424\u0438\u043b\u044c\u0442\u0440\u0430\u0446\u0438\u044f \u043e\u0442\u0437\u044b\u0432\u043e\u0432 \u043f\u043e \u0440\u0435\u0439\u0442\u0438\u043d\u0433\u0443, \u0434\u0430\u0442\u0435 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0438 \u0442\u0443\u0440\u0443.</li> <li>\u041f\u043e\u0438\u0441\u043a \u043f\u043e \u0438\u043c\u0435\u043d\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f, \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044e \u043e\u0442\u0435\u043b\u044f \u0438 \u0442\u0435\u043a\u0441\u0442\u0443 \u043e\u0442\u0437\u044b\u0432\u0430.</li> <li>\u0421\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0430 \u043e\u0442\u0437\u044b\u0432\u043e\u0432 \u043f\u043e \u0434\u0430\u0442\u0435 (\u043e\u0442 \u043d\u043e\u0432\u044b\u0445 \u043a \u0441\u0442\u0430\u0440\u044b\u043c).</li> </ul> <pre><code>@admin.register(Review)\nclass ReviewAdmin(admin.ModelAdmin):\n    list_display = ('user', 'tour', 'rating', 'date', 'text')\n    list_filter = ('rating', 'date', 'tour')\n    search_fields = ('user__username', 'tour__hotel', 'text')\n    ordering = ('-date',)\n</code></pre>"},{"location":"lr2/forms/","title":"\u0424\u043e\u0440\u043c\u044b","text":""},{"location":"lr2/forms/#tourform","title":"TourForm","text":"<pre><code>class TourForm(forms.ModelForm):\n    class Meta:\n        model = Tour\n        fields = [\n            'hotel',\n            'stars',\n            'agency',\n            'country',\n            'city',\n            'description',\n            'start_date',\n            'end_date',\n            'payment_conditions',\n        ]\n        widgets = {\n            'start_date': forms.DateInput(attrs={'type': 'date'}),  # \u041a\u0430\u043b\u0435\u043d\u0434\u0430\u0440\u044c \u0434\u043b\u044f start_date\n            'end_date': forms.DateInput(attrs={'type': 'date'}),    # \u041a\u0430\u043b\u0435\u043d\u0434\u0430\u0440\u044c \u0434\u043b\u044f end_date\n        }\n\n    def clean_start_date(self):\n        start_date = self.cleaned_data.get('start_date')\n        today = date.today()\n        if start_date &lt; today:\n            raise forms.ValidationError(\"Start date must be today or later.\")\n        return start_date\n\n    def clean_end_date(self):\n        end_date = self.cleaned_data.get('end_date')\n        if end_date &lt; self.cleaned_data.get('start_date'):\n            raise forms.ValidationError(\"End date cannot be before start date.\")\n        return end_date\n</code></pre> <ul> <li>\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u0432\u0432\u043e\u0434\u0430 \u0438 \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0434\u0430\u043d\u043d\u044b\u0445 \u043c\u043e\u0434\u0435\u043b\u0438 Tour.</li> <li>\u0412\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u0432 \u0441\u0435\u0431\u044f \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0435 \u043f\u043e\u043b\u044f \u043c\u043e\u0434\u0435\u043b\u0438 Tour.</li> <li>\u041f\u043e\u043b\u044f start_date \u0438 end_date \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0442 HTML-\u0432\u0438\u0434\u0436\u0435\u0442 \u0441 \u0442\u0438\u043f\u043e\u043c date, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0435\u0442 \u043a\u0430\u043b\u0435\u043d\u0434\u0430\u0440\u044c \u0434\u043b\u044f \u0432\u044b\u0431\u043e\u0440\u0430 \u0434\u0430\u0442.</li> <li>clean_start_date: \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442, \u0447\u0442\u043e \u0434\u0430\u0442\u0430 \u043d\u0430\u0447\u0430\u043b\u0430 (start_date) \u043d\u0435 \u0440\u0430\u043d\u044c\u0448\u0435 \u0441\u0435\u0433\u043e\u0434\u043d\u044f\u0448\u043d\u0435\u0433\u043e \u0434\u043d\u044f. \u0415\u0441\u043b\u0438 \u0434\u0430\u0442\u0430 \u043d\u0435 \u043f\u0440\u043e\u0445\u043e\u0434\u0438\u0442 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0443, \u0432\u044b\u0431\u0440\u0430\u0441\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u043e\u0448\u0438\u0431\u043a\u0430.</li> <li>clean_end_date: \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442, \u0447\u0442\u043e \u0434\u0430\u0442\u0430 \u043e\u043a\u043e\u043d\u0447\u0430\u043d\u0438\u044f (end_date) \u043d\u0435 \u043f\u0440\u0435\u0434\u0448\u0435\u0441\u0442\u0432\u0443\u0435\u0442 \u0434\u0430\u0442\u0435 \u043d\u0430\u0447\u0430\u043b\u0430. \u0415\u0441\u043b\u0438 \u044d\u0442\u043e \u0443\u0441\u043b\u043e\u0432\u0438\u0435 \u043d\u0430\u0440\u0443\u0448\u0435\u043d\u043e, \u0442\u0430\u043a\u0436\u0435 \u0432\u044b\u0431\u0440\u0430\u0441\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u043e\u0448\u0438\u0431\u043a\u0430.</li> <li>\u041e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0432\u0430\u0435\u0442 \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u044b\u0439 \u0432\u0432\u043e\u0434 \u0434\u0430\u043d\u043d\u044b\u0445 \u0434\u043b\u044f \u043c\u043e\u0434\u0435\u043b\u0438 Tour, \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 \u0432\u044b\u0431\u043e\u0440 \u0434\u0430\u0442 \u0447\u0435\u0440\u0435\u0437 \u043a\u0430\u043b\u0435\u043d\u0434\u0430\u0440\u044c \u0438 \u0432\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u043d\u0430 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0435 \u043b\u043e\u0433\u0438\u0447\u0435\u0441\u043a\u0438\u043c \u0443\u0441\u043b\u043e\u0432\u0438\u044f\u043c.</li> </ul>"},{"location":"lr2/forms/#tariffform-mealoptionform","title":"TariffForm \u0438 MealOptionForm","text":"<pre><code>class TariffForm(forms.ModelForm):\n    class Meta:\n        model = Tariff\n        fields = ['name', 'price']\n\n\nclass MealOptionForm(forms.ModelForm):\n    class Meta:\n        model = MealOption\n        fields = ['name', 'price']\n\n\n# Inline formsets \u0434\u043b\u044f Tariff \u0438 MealOption\nTariffFormSet = inlineformset_factory(\n    Tour, Tariff, form=TariffForm, extra=1, can_delete=True\n)\nMealOptionFormSet = inlineformset_factory(\n    Tour, MealOption, form=MealOptionForm, extra=1, can_delete=True\n)\n</code></pre> <p>\u041a\u043b\u0430\u0441\u0441\u044b TariffForm \u0438 MealOptionForm:</p> <ul> <li>\u041e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u044e\u0442 \u0444\u043e\u0440\u043c\u044b \u0434\u043b\u044f \u043c\u043e\u0434\u0435\u043b\u0435\u0439 Tariff \u0438 MealOption.</li> <li>\u0423\u043a\u0430\u0437\u044b\u0432\u0430\u044e\u0442, \u0447\u0442\u043e name \u0438 price \u0431\u0443\u0434\u0443\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b \u0434\u043b\u044f \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f.</li> <li>TariffFormSet \u0438 MealOptionFormSet:</li> <li>\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0442 inlineformset_factory \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0438\u043d\u043b\u0430\u0439\u043d\u043e\u0432\u044b\u0445 \u0444\u043e\u0440\u043c\u0441\u0435\u0442\u043e\u0432, \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u044e\u0449\u0438\u0445 \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0441\u0432\u044f\u0437\u0430\u043d\u043d\u044b\u0435 \u043e\u0431\u044a\u0435\u043a\u0442\u044b Tariff \u0438 MealOption \u043f\u0440\u044f\u043c\u043e \u0438\u0437 \u0444\u043e\u0440\u043c\u044b \u0434\u043b\u044f \u0442\u0443\u0440\u0430.</li> <li>\u0421\u0432\u044f\u0437\u044c \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442\u0441\u044f \u0447\u0435\u0440\u0435\u0437 \u043c\u043e\u0434\u0435\u043b\u044c Tour.</li> </ul> <p>\u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438: - form: \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u044b\u0435 \u0444\u043e\u0440\u043c\u044b (TariffForm \u0438 MealOptionForm). - extra=1: \u041f\u0440\u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0438 \u043d\u043e\u0432\u043e\u0433\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u0432 \u0444\u043e\u0440\u043c\u0441\u0435\u0442\u0435 \u0431\u0443\u0434\u0435\u0442 \u043e\u0434\u043d\u0430 \u043f\u0443\u0441\u0442\u0430\u044f \u0444\u043e\u0440\u043c\u0430 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e. - can_delete=True: \u0420\u0430\u0437\u0440\u0435\u0448\u0430\u0435\u0442 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0441\u0432\u044f\u0437\u0430\u043d\u043d\u044b\u0445 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \u0447\u0435\u0440\u0435\u0437 \u0444\u043e\u0440\u043c\u0443.</p>"},{"location":"lr2/forms/#customauthenticationform","title":"CustomAuthenticationForm","text":"<pre><code>class CustomAuthenticationForm(AuthenticationForm):\n    username = forms.CharField(widget=forms.TextInput(attrs={\n        'class': 'form-control',\n        'placeholder': 'Username'\n    }))\n    password = forms.CharField(widget=forms.PasswordInput(attrs={\n        'class': 'form-control',\n        'placeholder': 'Password'\n    }))\n</code></pre> <p>\u041d\u0430\u0441\u043b\u0435\u0434\u0443\u0435\u0442\u0441\u044f \u043e\u0442 AuthenticationForm \u0438 \u043a\u0430\u0441\u0442\u043e\u043c\u0438\u0437\u0438\u0440\u0443\u0435\u0442 \u043f\u043e\u043b\u044f username \u0438 password, \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u044f \u0441\u0442\u0438\u043b\u0438 \u0438 \u043f\u043b\u0435\u0439\u0441\u0445\u043e\u043b\u0434\u0435\u0440\u044b \u0434\u043b\u044f \u0443\u043b\u0443\u0447\u0448\u0435\u043d\u0438\u044f \u0432\u043d\u0435\u0448\u043d\u0435\u0433\u043e \u0432\u0438\u0434\u0430 \u0432\u0432\u043e\u0434\u0430.</p>"},{"location":"lr2/forms/#customusercreationform","title":"CustomUserCreationForm","text":"<pre><code>class CustomUserCreationForm(UserCreationForm):\n    class Meta:\n        model = CustomUser\n        fields = ['username', 'email', 'password1', 'password2']\n</code></pre> <p>\u041d\u0430\u0441\u043b\u0435\u0434\u0443\u0435\u0442\u0441\u044f \u043e\u0442 UserCreationForm \u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u043d\u043e\u0432\u043e\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0441 \u043f\u043e\u043b\u044f\u043c\u0438 username, email, password1, password2.</p>"},{"location":"lr2/forms/#bookingform","title":"BookingForm","text":"<pre><code>class BookingForm(forms.ModelForm):\n    class Meta:\n        model = Booking\n        fields = ['num_people', 'tariff', 'meal_option']\n\n    def __init__(self, *args, **kwargs):\n        tour = kwargs.pop('tour', None)\n        super().__init__(*args, **kwargs)\n\n        if tour:\n            # \u041e\u0433\u0440\u0430\u043d\u0438\u0447\u0438\u0432\u0430\u0435\u043c \u0432\u044b\u0431\u043e\u0440 \u0442\u0430\u0440\u0438\u0444\u043e\u0432 \u0438 \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u043e\u0432 \u043f\u0438\u0442\u0430\u043d\u0438\u044f\n            self.fields['tariff'].queryset = tour.tariffs.all()\n            self.fields['meal_option'].queryset = tour.meal_options.all()\n\n            self.fields['tariff'].widget = forms.Select(\n                attrs={\n                    'class': 'tariff-select',\n                },\n                choices=[(tariff.id, f'{tariff.name} - {tariff.price} RUB') for tariff in tour.tariffs.all()]\n            )\n            self.fields['meal_option'].widget = forms.Select(\n                attrs={\n                    'class': 'meal-select',\n                },\n                choices=[(meal.id, f'{meal.name} - {meal.price} RUB') for meal in tour.meal_options.all()]\n            )\n</code></pre> <p>\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0442\u0443\u0440\u0430. \u041e\u043d\u0430 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0432\u044b\u0431\u0440\u0430\u0442\u044c \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043b\u044e\u0434\u0435\u0439 (num_people), \u0442\u0430\u0440\u0438\u0444 (tariff) \u0438 \u0432\u0430\u0440\u0438\u0430\u043d\u0442 \u043f\u0438\u0442\u0430\u043d\u0438\u044f (meal_option). \u0412 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0442\u043e\u0440\u0435 \u0444\u043e\u0440\u043c\u044b \u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0438\u0432\u0430\u044e\u0442\u0441\u044f \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0435 \u0442\u0430\u0440\u0438\u0444\u044b \u0438 \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u044b \u043f\u0438\u0442\u0430\u043d\u0438\u044f \u0432 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u043e\u0442 \u0432\u044b\u0431\u0440\u0430\u043d\u043d\u043e\u0433\u043e \u0442\u0443\u0440\u0430.</p>"},{"location":"lr2/forms/#reviewform","title":"ReviewForm","text":"<pre><code>class ReviewForm(forms.ModelForm):\n    class Meta:\n        model = Review\n        fields = ['text', 'rating']\n</code></pre> <p>\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u043e\u0442\u0437\u044b\u0432\u0430. \u041e\u043d\u0430 \u0432\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u0434\u0432\u0430 \u043f\u043e\u043b\u044f: \u0442\u0435\u043a\u0441\u0442 \u043e\u0442\u0437\u044b\u0432\u0430 \u0438 \u0440\u0435\u0439\u0442\u0438\u043d\u0433. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0438 \u043e\u0442\u0437\u044b\u0432\u0430 \u043e \u0442\u0443\u0440\u0435, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0437\u0430\u0442\u0435\u043c \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0435\u0442\u0441\u044f \u0432 \u0431\u0430\u0437\u0435 \u0434\u0430\u043d\u043d\u044b\u0445.</p>"},{"location":"lr2/forms/#toursearchform","title":"TourSearchForm","text":"<pre><code>class TourSearchForm(forms.Form):\n    query = forms.CharField(label='Search', max_length=100, required=False)\n</code></pre> <p>\u041f\u0440\u0435\u0434\u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u0430 \u0434\u043b\u044f \u043f\u043e\u0438\u0441\u043a\u0430 \u0442\u0443\u0440\u043e\u0432. \u041e\u043d\u0430 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u043e\u0434\u043d\u043e \u043f\u043e\u043b\u0435 query, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0438 \u043c\u043e\u0433\u0443\u0442 \u0432\u0432\u043e\u0434\u0438\u0442\u044c \u0441\u0442\u0440\u043e\u043a\u0443 \u0434\u043b\u044f \u043f\u043e\u0438\u0441\u043a\u0430. \u041f\u043e\u043b\u0435 \u0438\u043c\u0435\u0435\u0442 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0443\u044e \u0434\u043b\u0438\u043d\u0443 100 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432 \u0438 \u043d\u0435 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u043c \u0434\u043b\u044f \u0437\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f (required=False).</p>"},{"location":"lr2/leetcode/","title":"Leetcode","text":""},{"location":"lr2/leetcode/#88-merge-sorted-array","title":"88. Merge Sorted Array","text":"<p>You are given two integer arrays nums1 and nums2, sorted in non-decreasing order, and two integers m and n, representing the number of elements in nums1 and nums2 respectively.</p> <p>Merge nums1 and nums2 into a single array sorted in non-decreasing order.</p> <p>The final sorted array should not be returned by the function, but instead be stored inside the array nums1. To accommodate this, nums1 has a length of m + n, where the first m elements denote the elements that should be merged, and the last n elements are set to 0 and should be ignored. nums2 has a length of n.</p> <p>Example 1:</p> <p>Input: nums1 = [1,2,3,0,0,0], m = 3, nums2 = [2,5,6], n = 3 Output: [1,2,2,3,5,6] Explanation: The arrays we are merging are [1,2,3] and [2,5,6]. The result of the merge is [1,2,2,3,5,6] with the underlined elements coming from nums1. Example 2:</p> <p>Input: nums1 = [1], m = 1, nums2 = [], n = 0 Output: [1] Explanation: The arrays we are merging are [1] and []. The result of the merge is [1]. Example 3:</p> <p>Input: nums1 = [0], m = 0, nums2 = [1], n = 1 Output: [1] Explanation: The arrays we are merging are [] and [1]. The result of the merge is [1]. Note that because m = 0, there are no elements in nums1. The 0 is only there to ensure the merge result can fit in nums1.</p> <p>Constraints:</p> <p>nums1.length == m + n nums2.length == n 0 &lt;= m, n &lt;= 200 1 &lt;= m + n &lt;= 200 -109 &lt;= nums1[i], nums2[j] &lt;= 109</p>"},{"location":"lr2/leetcode/#solution","title":"Solution","text":"<pre><code>class Solution:\n    def merge(self, nums1: List[int], m: int, nums2: List[int], n: int) -&gt; None:\n        \"\"\"\n        Do not return anything, modify nums1 in-place instead.\n        \"\"\"\n        del nums1[m:m+n]\n        for i in range(n):\n            k=0\n            while k in range (len(nums1)) and nums1[k] &lt; nums2[i]:\n                k+=1\n            nums1.insert(k, nums2[i])\n\n</code></pre>"},{"location":"lr2/leetcode/#238-product-of-array-except-self","title":"238. Product of Array Except Self","text":"<p>Given an integer array nums, return an array answer such that answer[i] is equal to the product of all the elements of nums except nums[i].</p> <p>The product of any prefix or suffix of nums is guaranteed to fit in a 32-bit integer.</p> <p>You must write an algorithm that runs in O(n) time and without using the division operation.</p> <p>Example 1:</p> <p>Input: nums = [1,2,3,4] Output: [24,12,8,6]</p> <p>Example 2:</p> <p>Input: nums = [-1,1,0,-3,3] Output: [0,0,9,0,0]</p> <p>Constraints:</p> <p>2 &lt;= nums.length &lt;= 105 -30 &lt;= nums[i] &lt;= 30 The product of any prefix or suffix of nums is guaranteed to fit in a 32-bit integer.</p>"},{"location":"lr2/leetcode/#solution_1","title":"Solution","text":"<pre><code>class RandomizedSet:\n    def __init__(self):\n        self.val_to_index = {}\n        self.values = []\n\n    def insert(self, val: int) -&gt; bool:\n        if val in self.val_to_index:\n            return False\n        self.val_to_index[val] = len(self.values)\n        self.values.append(val)\n        return True\n\n    def remove(self, val: int) -&gt; bool:\n        if val not in self.val_to_index:\n            return False\n        index = self.val_to_index[val]\n        last_val = self.values[-1]\n        self.values[index] = last_val\n        self.val_to_index[last_val] = index\n        self.values.pop()\n        del self.val_to_index[val]\n        return True\n\n    def getRandom(self) -&gt; int:\n        return random.choice(self.values)\n</code></pre>"},{"location":"lr2/leetcode/#274-h-index","title":"274. H-Index","text":"<p>Given an array of integers citations where citations[i] is the number of citations a researcher received for their ith paper, return the researcher's h-index.</p> <p>According to the definition of h-index on Wikipedia: The h-index is defined as the maximum value of h such that the given researcher has published at least h papers that have each been cited at least h times.</p> <p>Example 1:</p> <p>Input: citations = [3,0,6,1,5] Output: 3 Explanation: [3,0,6,1,5] means the researcher has 5 papers in total and each of them had received 3, 0, 6, 1, 5 citations respectively. Since the researcher has 3 papers with at least 3 citations each and the remaining two with no more than 3 citations each, their h-index is 3. Example 2:</p> <p>Input: citations = [1,3,1] Output: 1</p>"},{"location":"lr2/leetcode/#solution_2","title":"Solution","text":"<pre><code>class Solution:\n    def hIndex(self, citations: List[int]) -&gt; int:\n        citations.sort(reverse=True)  \n        h_index = 0\n        for i, citation in enumerate(citations):\n            if citation &gt;= i + 1:\n                h_index = i + 1\n            else:\n                break\n        return h_index\n</code></pre>"},{"location":"lr2/leetcode/#55-jump-game","title":"55. Jump Game","text":"<p>You are given an integer array nums. You are initially positioned at the array's first index, and each element in the array represents your maximum jump length at that position.</p> <p>Return true if you can reach the last index, or false otherwise.</p> <p>Example 1:</p> <p>Input: nums = [2,3,1,1,4] Output: true Explanation: Jump 1 step from index 0 to 1, then 3 steps to the last index. Example 2:</p> <p>Input: nums = [3,2,1,0,4] Output: false Explanation: You will always arrive at index 3 no matter what. Its maximum jump length is 0, which makes it impossible to reach the last index.</p> <p>Constraints:</p> <p>1 &lt;= nums.length &lt;= 104 0 &lt;= nums[i] &lt;= 105</p>"},{"location":"lr2/leetcode/#solution_3","title":"Solution","text":"<pre><code>class Solution:\n    def canJump(self, nums: List[int]) -&gt; bool:\n        max_reach = 0\n        for i, jump in enumerate(nums):\n            if i &gt; max_reach:\n                return False\n            max_reach = max(max_reach, i + jump)\n            if max_reach &gt;= len(nums) - 1:\n                return True\n        return False\n</code></pre>"},{"location":"lr2/leetcode/#122-best-time-to-buy-and-sell-stock-ii","title":"122. Best Time to Buy and Sell Stock II","text":"<p>You are given an integer array prices where prices[i] is the price of a given stock on the ith day.</p> <p>On each day, you may decide to buy and/or sell the stock. You can only hold at most one share of the stock at any time. However, you can buy it then immediately sell it on the same day.</p> <p>Find and return the maximum profit you can achieve.</p> <p>Example 1:</p> <p>Input: prices = [7,1,5,3,6,4] Output: 7 Explanation: Buy on day 2 (price = 1) and sell on day 3 (price = 5), profit = 5-1 = 4. Then buy on day 4 (price = 3) and sell on day 5 (price = 6), profit = 6-3 = 3. Total profit is 4 + 3 = 7. Example 2:</p> <p>Input: prices = [1,2,3,4,5] Output: 4 Explanation: Buy on day 1 (price = 1) and sell on day 5 (price = 5), profit = 5-1 = 4. Total profit is 4. Example 3:</p> <p>Input: prices = [7,6,4,3,1] Output: 0 Explanation: There is no way to make a positive profit, so we never buy the stock to achieve the maximum profit of 0.</p> <p>Constraints:</p> <p>1 &lt;= prices.length &lt;= 3 * 104 0 &lt;= prices[i] &lt;= 104</p>"},{"location":"lr2/leetcode/#solution_4","title":"Solution","text":"<pre><code>class Solution:\n    def maxProfit(self, prices: List[int]) -&gt; int:\n        max_profit = 0\n        for i in range(1, len(prices)):\n            if prices[i] &gt; prices[i - 1]:\n                max_profit += prices[i] - prices[i - 1]\n        return max_profit\n</code></pre>"},{"location":"lr2/leetcode/#leetcode","title":"Leetcode","text":""},{"location":"lr2/leetcode/#27-remove-element","title":"27. Remove Element","text":"<p>Given an integer array nums and an integer val, remove all occurrences of val in nums in-place. The order of the elements may be changed. Then return the number of elements in nums which are not equal to val.</p> <p>Consider the number of elements in nums which are not equal to val be k, to get accepted, you need to do the following things:</p> <p>Change the array nums such that the first k elements of nums contain the elements which are not equal to val. The remaining elements of nums are not important as well as the size of nums. Return k. Custom Judge:</p> <p>The judge will test your solution with the following code:</p> <p>int[] nums = [...]; // Input array int val = ...; // Value to remove int[] expectedNums = [...]; // The expected answer with correct length.                             // It is sorted with no values equaling val.</p> <p>int k = removeElement(nums, val); // Calls your implementation</p> <p>assert k == expectedNums.length; sort(nums, 0, k); // Sort the first k elements of nums for (int i = 0; i &lt; actualLength; i++) {     assert nums[i] == expectedNums[i]; } If all assertions pass, then your solution will be accepted.</p> <p>Example 1:</p> <p>Input: nums = [3,2,2,3], val = 3 Output: 2, nums = [2,2,,] Explanation: Your function should return k = 2, with the first two elements of nums being 2. It does not matter what you leave beyond the returned k (hence they are underscores). Example 2:</p> <p>Input: nums = [0,1,2,2,3,0,4,2], val = 2 Output: 5, nums = [0,1,4,0,3,,,_] Explanation: Your function should return k = 5, with the first five elements of nums containing 0, 0, 1, 3, and 4. Note that the five elements can be returned in any order. It does not matter what you leave beyond the returned k (hence they are underscores).</p> <p>Constraints:</p> <p>0 &lt;= nums.length &lt;= 100 0 &lt;= nums[i] &lt;= 50 0 &lt;= val &lt;= 100</p>"},{"location":"lr2/leetcode/#solution_5","title":"Solution","text":"<pre><code>class Solution:\n    def removeElement(self, nums: List[int], val: int) -&gt; int:\n        count = 0\n        for i in range(len(nums))[::-1]:\n            if nums[i] == val:\n                nums.pop(i)\n                nums.append('_')\n                count += 1\n        return len(nums)-count        \n\n</code></pre>"},{"location":"lr2/leetcode/#88-merge-sorted-array_1","title":"88. Merge Sorted Array","text":"<p>You are given two integer arrays nums1 and nums2, sorted in non-decreasing order, and two integers m and n, representing the number of elements in nums1 and nums2 respectively.</p> <p>Merge nums1 and nums2 into a single array sorted in non-decreasing order.</p> <p>The final sorted array should not be returned by the function, but instead be stored inside the array nums1. To accommodate this, nums1 has a length of m + n, where the first m elements denote the elements that should be merged, and the last n elements are set to 0 and should be ignored. nums2 has a length of n.</p> <p>Example 1:</p> <p>Input: nums1 = [1,2,3,0,0,0], m = 3, nums2 = [2,5,6], n = 3 Output: [1,2,2,3,5,6] Explanation: The arrays we are merging are [1,2,3] and [2,5,6]. The result of the merge is [1,2,2,3,5,6] with the underlined elements coming from nums1. Example 2:</p> <p>Input: nums1 = [1], m = 1, nums2 = [], n = 0 Output: [1] Explanation: The arrays we are merging are [1] and []. The result of the merge is [1]. Example 3:</p> <p>Input: nums1 = [0], m = 0, nums2 = [1], n = 1 Output: [1] Explanation: The arrays we are merging are [] and [1]. The result of the merge is [1]. Note that because m = 0, there are no elements in nums1. The 0 is only there to ensure the merge result can fit in nums1.</p> <p>Constraints:</p> <p>nums1.length == m + n nums2.length == n 0 &lt;= m, n &lt;= 200 1 &lt;= m + n &lt;= 200 -109 &lt;= nums1[i], nums2[j] &lt;= 109</p>"},{"location":"lr2/leetcode/#solution_6","title":"Solution","text":"<pre><code>class Solution:\n    def merge(self, nums1: List[int], m: int, nums2: List[int], n: int) -&gt; None:\n        \"\"\"\n        Do not return anything, modify nums1 in-place instead.\n        \"\"\"\n        del nums1[m:m+n]\n        for i in range(n):\n            k=0\n            while k in range (len(nums1)) and nums1[k] &lt; nums2[i]:\n                k+=1\n            nums1.insert(k, nums2[i])\n\n</code></pre>"},{"location":"lr2/leetcode/#238-product-of-array-except-self_1","title":"238. Product of Array Except Self","text":"<p>Given an integer array nums, return an array answer such that answer[i] is equal to the product of all the elements of nums except nums[i].</p> <p>The product of any prefix or suffix of nums is guaranteed to fit in a 32-bit integer.</p> <p>You must write an algorithm that runs in O(n) time and without using the division operation.</p> <p>Example 1:</p> <p>Input: nums = [1,2,3,4] Output: [24,12,8,6]</p> <p>Example 2:</p> <p>Input: nums = [-1,1,0,-3,3] Output: [0,0,9,0,0]</p> <p>Constraints:</p> <p>2 &lt;= nums.length &lt;= 105 -30 &lt;= nums[i] &lt;= 30 The product of any prefix or suffix of nums is guaranteed to fit in a 32-bit integer.</p>"},{"location":"lr2/leetcode/#solution_7","title":"Solution","text":"<pre><code>class Solution:\n    def productExceptSelf(self, nums: List[int]) -&gt; List[int]:\n        n = len(nums)\n        answer = [1] * n\n\n        left_product = 1\n        for i in range(n):\n            answer[i] = left_product\n            left_product *= nums[i]\n\n        right_product = 1\n        for i in range(n - 1, -1, -1):\n            answer[i] *= right_product\n            right_product *= nums[i]\n\n        return answer\n</code></pre>"},{"location":"lr2/models/","title":"\u041c\u043e\u0434\u0435\u043b\u0438","text":""},{"location":"lr2/models/#_2","title":"\u0422\u0443\u0440\u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440","text":"<pre><code>class TravelAgency(models.Model):\n    name = models.CharField(max_length=100)\n    contact_info = models.TextField()\n\n    def __str__(self):\n        return self.name\n</code></pre> <p>\u0425\u0440\u0430\u043d\u0438\u0442 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0444\u0438\u0440\u043c\u044b \u0438 \u043a\u043e\u043d\u0442\u0430\u043a\u0442\u044b.</p>"},{"location":"lr2/models/#_3","title":"\u0422\u0443\u0440","text":"<pre><code>class Tour(models.Model):\n    hotel = models.CharField(max_length=200)\n    stars = models.PositiveSmallIntegerField(\n        default=3,\n        validators=[MinValueValidator(1), MaxValueValidator(5)],\n        help_text=\"Number of stars from 1 to 5\"\n    )\n    agency = models.ForeignKey(TravelAgency, on_delete=models.CASCADE, related_name=\"tours\")\n    country = models.CharField(max_length=200)\n    city = models.CharField(max_length=200, null=True)\n    description = models.TextField()\n    start_date = models.DateField()\n    end_date = models.DateField()\n    payment_conditions = models.TextField()\n\n    def __str__(self):\n        return f\"{self.hotel} ({self.stars} stars) - {self.agency.name}\"\n\n    def get_absolute_url(self):\n        return reverse('tour_detail', args=[str(self.id)])\n\n    def get_base_price(self):\n        # \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u043c \u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u0443\u044e \u0441\u0442\u043e\u0438\u043c\u043e\u0441\u0442\u044c \u0442\u0430\u0440\u0438\u0444\u0430 \u0438 \u043f\u0438\u0442\u0430\u043d\u0438\u044f\n        tariffs = self.tariffs.all()\n        meal_options = self.meal_options.all()\n\n        if tariffs.exists() and meal_options.exists():\n            min_tariff_price = min(tariffs, key=lambda tariff: tariff.price).price\n            min_meal_option_price = min(meal_options, key=lambda meal: meal.price).price\n            return min_tariff_price + min_meal_option_price\n        return 0\n</code></pre> <p>\u0425\u0440\u0430\u043d\u0438\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u043e \u0442\u0443\u0440\u0435 (\u043e\u0442\u0435\u043b\u044c, \u0435\u0433\u043e \u0437\u0432\u0435\u0437\u0434\u043d\u043e\u0441\u0442\u044c, \u0442\u0443\u0440\u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440, \u0441\u0442\u0440\u0430\u043d\u0430, \u0433\u043e\u0440\u043e\u0434, \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435, \u0434\u0430\u0442\u044b, \u0443\u0441\u043b\u043e\u0432\u0438\u044f \u043e\u043f\u043b\u0430\u0442\u044b). \u0418\u043c\u0435\u0435\u0442 \u043c\u0435\u0442\u043e\u0434 \u043f\u043e \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044e \u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0439 \u0441\u0442\u043e\u0438\u043c\u0441\u0442\u0438 \u0442\u0443\u0440\u0430)</p>"},{"location":"lr2/models/#_4","title":"\u0422\u0430\u0440\u0438\u0444","text":"<pre><code>class Tariff(models.Model):\n    tour = models.ForeignKey(Tour, on_delete=models.CASCADE, related_name=\"tariffs\")\n    name = models.CharField(max_length=200)\n    price = models.PositiveIntegerField(default=0)\n\n    class Meta:\n        unique_together = ('tour', 'name')\n\n    def __str__(self):\n        return f\"{self.name} - {self.price} RUB\"\n</code></pre> <p>\u0425\u0440\u0430\u043d\u0438\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u043e \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u043c\u044b\u0445 \u0434\u043b\u044f \u0442\u0443\u0440\u0430 \u0442\u0430\u0440\u0438\u0444\u0430\u0445 \u0438 \u0438\u0445 \u0441\u0442\u043e\u0438\u043c\u043e\u0441\u0442\u0438. \u0421\u0432\u044f\u0437\u0430\u043d\u0430 \u0441 \u0442\u0443\u0440\u043e\u043c.</p>"},{"location":"lr2/models/#_5","title":"\u041e\u043f\u0446\u0438\u0438 \u043f\u0438\u0442\u0430\u043d\u0438\u044f","text":"<pre><code>class MealOption(models.Model):\n    tour = models.ForeignKey(Tour, on_delete=models.CASCADE, related_name=\"meal_options\")\n    name = models.CharField(max_length=200)\n    price = models.PositiveIntegerField(default=0)\n\n    class Meta:\n        unique_together = ('tour', 'name')\n\n    def __str__(self):\n        return f\"{self.name} - {self.price} RUB\"\n</code></pre> <p>\u0425\u0440\u0430\u043d\u0438\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u043e \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0445 \u0434\u043b\u044f \u0442\u0443\u0440\u0430 \u043e\u043f\u0446\u0438\u044f\u0445 \u043f\u0438\u0442\u0430\u043d\u0438\u044f. \u0421\u0432\u044f\u0437\u0430\u043d\u0430 \u0441 \u0442\u0443\u0440\u043e\u043c.</p>"},{"location":"lr2/models/#_6","title":"\u0411\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435","text":"<pre><code>class Booking(models.Model):\n    user = models.ForeignKey(CustomUser, on_delete=models.CASCADE, related_name=\"bookings\")\n    tour = models.ForeignKey(Tour, on_delete=models.CASCADE, related_name=\"bookings\")\n    num_people = models.PositiveIntegerField(default=1)\n    tariff = models.ForeignKey(Tariff, on_delete=models.CASCADE)\n    meal_option = models.ForeignKey(MealOption, on_delete=models.CASCADE)\n    is_confirmed = models.BooleanField(default=False)\n    total_price = models.PositiveIntegerField(default=0)\n    created = models.DateField(auto_now_add=True, null=True)\n\n    def calculate_price(self):\n        # \u0420\u0430\u0441\u0441\u0447\u0438\u0442\u044b\u0432\u0430\u0435\u043c \u0441\u0442\u043e\u0438\u043c\u043e\u0441\u0442\u044c \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0441 \u0443\u0447\u0435\u0442\u043e\u043c \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u043b\u044e\u0434\u0435\u0439\n        tariff_price = self.tour.get_base_price()\n        total_price = tariff_price * self.num_people\n        return round(total_price, 3)\n\n    def save(self, *args, **kwargs):\n        self.total_price = self.calculate_price()\n        super().save(*args, **kwargs)\n\n    def __str__(self):\n        return f\"Booking by {self.user.username} for {self.tour.hotel}\"\n</code></pre> <p>\u0425\u0440\u0430\u043d\u0438\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f (\u0442\u0443\u0440\u0431 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0447\u0435\u043b\u043e\u0432\u0435\u043a, \u0432\u044b\u0431\u0440\u0430\u043d\u043d\u044b\u0439 \u0442\u0430\u0440\u0438\u0444, \u0432\u044b\u0431\u0440\u0430\u043d\u044b\u0439 \u0432\u0430\u0440\u0438\u0430\u043d\u0442 \u043f\u0438\u0442\u0430\u043d\u0438\u044f, \u0438\u0442\u043e\u0433\u043e\u0432\u0430\u044f \u0446\u0435\u043d\u0430, \u0441\u0442\u0430\u0442\u0443\u0441 \u0438 \u0432\u0440\u0435\u043c\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0431\u0440\u043e\u043d\u0438)</p> <p>\u0421\u0432\u044f\u0437\u0430\u043d\u0430 \u0441 \u0442\u0443\u0440\u043e\u043c, \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u043c, \u0442\u0430\u0440\u0438\u0444\u043e\u043c \u0438 \u043e\u043f\u0446\u0438\u044f\u043c\u0438 \u043f\u0438\u0442\u0430\u043d\u0438\u044f. \u0418\u043c\u0435\u0435\u0442 \u043c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u043f\u043e\u0441\u0447\u0435\u0442\u0430 \u0441\u0442\u043e\u0438\u043c\u043e\u0441\u0442\u0438 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f.</p>"},{"location":"lr2/models/#_7","title":"\u041e\u0442\u0437\u044b\u0432","text":"<pre><code>class Review(models.Model):\n    user = models.ForeignKey(CustomUser, on_delete=models.CASCADE, related_name=\"reviews\")\n    tour = models.ForeignKey(Tour, on_delete=models.CASCADE, related_name=\"reviews\")\n    date = models.DateField(auto_now_add=True)\n    text = models.TextField()\n    rating = models.PositiveIntegerField(default=1)\n\n    def __str__(self):\n        return f\"Review by {self.user.username} ({self.rating}/10)\"\n</code></pre> <p>\u0425\u0440\u0430\u043d\u0438\u0442 \u043e\u0442\u0437\u044b\u0432\u044b \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439. \u0421\u0432\u044f\u0437\u0430\u043d\u0430 \u0441 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u043c \u0438 \u0442\u0443\u0440\u043e\u043c.</p>"},{"location":"lr2/overview/","title":"\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 \u21162","text":""},{"location":"lr2/overview/#_1","title":"\u0422\u0435\u043c\u0430","text":"<p>\u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043f\u0440\u043e\u0441\u0442\u043e\u0433\u043e \u0441\u0430\u0439\u0442\u0430 \u043d\u0430 django</p>"},{"location":"lr2/overview/#_2","title":"\u0426\u0435\u043b\u044c \u0440\u0430\u0431\u043e\u0442\u044b","text":"<p>\u041e\u0432\u043b\u0430\u0434\u0435\u0442\u044c \u043f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u043c\u0438 \u043d\u0430\u0432\u044b\u043a\u0430\u043c\u0438 \u0438 \u0443\u043c\u0435\u043d\u0438\u044f\u043c\u0438 \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 web-\u0441\u0435\u0440\u0432\u0438\u0441\u043e\u0432 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 Django 3 \u0438 PostgreSQL.</p>"},{"location":"lr2/overview/#_3","title":"\u0417\u0430\u0434\u0430\u0447\u0430","text":"<p>\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u0430\u0439\u0442 \u0442\u0443\u0440\u0444\u0438\u0440\u043c\u044b \u0441\u043e \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u043c \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b\u043e\u043c: - \u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u043d\u043e\u0432\u044b\u0445 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439. - \u041f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u0438 \u0440\u0435\u0437\u0435\u0440\u0432\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0442\u0443\u0440\u043e\u0432. \u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0438\u043c\u0435\u0435\u0442 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0438 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044f \u0441\u0432\u043e\u0438\u0445 \u0440\u0435\u0437\u0435\u0440\u0432\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0439. - \u041d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043e\u0442\u0437\u044b\u0432\u043e\u0432 \u043a \u0442\u0443\u0440\u0430\u043c. - \u0410\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440 \u0438\u043c\u0435\u0435\u0442 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0434\u0438\u0442\u044c \u0440\u0435\u0437\u0435\u0440\u0432\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0442\u0443\u0440\u0430 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 Django-admin. - \u0412 \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u043e\u0439 \u0447\u0430\u0441\u0442\u0438 \u0444\u043e\u0440\u043c\u0438\u0440\u0443\u0435\u0442\u0441\u044f \u0442\u0430\u0431\u043b\u0438\u0446\u0430, \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u044e\u0449\u0430\u044f \u0432\u0441\u0435 \u043f\u0440\u043e\u0434\u0430\u043d\u043d\u044b\u0435 \u0442\u0443\u0440\u044b \u043f\u043e \u0441\u0442\u0440\u0430\u043d\u0430\u043c.</p>"},{"location":"lr2/overview/#_4","title":"\u0417\u0430\u043f\u0443\u0441\u043a \u043f\u0440\u043e\u0435\u043a\u0442\u0430","text":"<pre><code>python manage.py runserver\n</code></pre>"},{"location":"lr2/urls/","title":"\u041c\u0430\u0440\u0448\u0440\u0443\u0442\u044b","text":"<pre><code>urlpatterns = [\n    # \u0410\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044f\n    path('register/', views.register, name='register'),\n    path('', login_view, name='login'),\n    path('logout/', logout_view, name='logout'),\n\n    # \u0422\u0443\u0440\u044b\n    path('tours/', views.tour_list, name='tour_list'),\n    path('tours/&lt;int:pk&gt;/', views.tour_detail, name='tour_detail'),\n    path('tours/&lt;int:tour_id&gt;/book/', views.book_tour, name='book_tour'),\n    path('tours/&lt;int:pk&gt;/add_review/', views.add_review, name='add_review'),\n\n    # \u0411\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f\n    path('my_bookings/', views.my_bookings, name='my_bookings'),\n    path('my_bookings/&lt;int:pk&gt;/edit', BookingUpdateView.as_view(), name='edit_booking'),\n    path('my_bookings/&lt;int:pk&gt;/delete', BookingDeleteView.as_view(), name='delete_booking'),\n    path('bookings/&lt;int:pk&gt;/', BookingDetailView.as_view(), name='booking_detail'),\n\n    # \u0410\u0434\u043c\u0438\u043d\n    path('add_tour/', views.add_tour, name='add_tour'),\n    path('edit_tour/&lt;int:pk&gt;/', views.edit_tour, name='edit_tour'),\n    path('view_bookings/', views.view_bookings, name='view_bookings'),\n    path('confirm_booking/&lt;int:pk&gt;/', views.confirm_booking, name='confirm_booking'),\n    path('tour_sales_statistics/', views.sold_tours_by_country, name='tour_sales_statistics'),\n]\n</code></pre> <p>\u0410\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044f: - register/: \u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f. - login/: \u0412\u0445\u043e\u0434 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f. - logout/: \u0412\u044b\u0445\u043e\u0434 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f. -  \u0422\u0443\u0440\u044b: - tours/: \u0421\u043f\u0438\u0441\u043e\u043a \u0432\u0441\u0435\u0445 \u0442\u0443\u0440\u043e\u0432. - tours//: \u0414\u0435\u0442\u0430\u043b\u0438 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0433\u043e \u0442\u0443\u0440\u0430. - tours//book/: \u0411\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0433\u043e \u0442\u0443\u0440\u0430. - tours//add_review/: \u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043e\u0442\u0437\u044b\u0432\u0430 \u043a \u0442\u0443\u0440\u0443. -  \u0411\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f: - my_bookings/: \u041c\u043e\u0438 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f. - my_bookings//edit: \u0420\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f. - my_bookings//delete: \u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f. - bookings//: \u0414\u0435\u0442\u0430\u043b\u0438 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0433\u043e \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f. -  \u0410\u0434\u043c\u0438\u043d: - add_tour/: \u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u0433\u043e \u0442\u0443\u0440\u0430. - edit_tour//: \u0420\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0435\u0433\u043e \u0442\u0443\u0440\u0430. - view_bookings/: \u041f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u0432\u0441\u0435\u0445 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0439. - confirm_booking//: \u041f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u0438\u0435 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f. - tour_sales_statistics/: \u0421\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0430 \u043f\u043e \u043f\u0440\u043e\u0434\u0430\u0436\u0430\u043c \u0442\u0443\u0440\u043e\u0432 \u043f\u043e \u0441\u0442\u0440\u0430\u043d\u0430\u043c."},{"location":"lr2/views/","title":"\u041f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f","text":""},{"location":"lr2/views/#_2","title":"\u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f","text":"<pre><code>class TravelAgency(models.Model):\n    name = models.CharField(max_length=100)\n    contact_info = models.TextField()\n\n    def __str__(self):\n        return self.name\n</code></pre> <p>\u041e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 \u0437\u0430 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044e \u043d\u043e\u0432\u044b\u0445 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439. \u041f\u0435\u0440\u0435\u043d\u0430\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0432\u0445\u043e\u0434\u0430.</p>"},{"location":"lr2/views/#_3","title":"\u0412\u0445\u043e\u0434 \u0432 \u0441\u0438\u0441\u0442\u0435\u043c\u0443","text":"<pre><code>def login_view(request):\n    if request.method == 'POST':\n        form = AuthenticationForm(data=request.POST)\n        if form.is_valid():\n            user = form.get_user()\n            login(request, user)\n            return redirect('tour_list')\n    else:\n        form = AuthenticationForm()\n    return render(request, 'login.html', {'form': form})\n</code></pre> <p>\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 \u0444\u043e\u0440\u043c\u0443 \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438 \u0434\u043b\u044f \u0432\u0445\u043e\u0434\u0430 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f. \u041f\u0435\u0440\u0435\u043d\u0430\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u043e\u0442\u0435\u043b\u0435\u0439.</p>"},{"location":"lr2/views/#_4","title":"\u0412\u044b\u0445\u043e\u0434 \u0438\u0437 \u0441\u0438\u0441\u0442\u0435\u043c\u044b","text":"<pre><code>@login_required\ndef logout_view(request):\n    logout(request)\n    return redirect('login')\n</code></pre> <p>\u041f\u0435\u0440\u0435\u043d\u0430\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0432\u0445\u043e\u0434\u0430. \u0422\u043e\u043b\u044c\u043a\u043e \u0434\u043b\u044f \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u043d\u044b\u0445 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u0439.</p>"},{"location":"lr2/views/#_5","title":"\u0421\u043f\u0438\u0441\u043e\u043a \u0442\u0443\u0440\u043e\u0432","text":"<pre><code>def tour_list(request):\n    form = TourSearchForm(request.GET)\n    tours = Tour.objects.all()\n\n    if form.is_valid():\n        query = form.cleaned_data['query']\n        if query:\n            # \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c Q \u0434\u043b\u044f \u043f\u043e\u0438\u0441\u043a\u0430 \u043f\u043e \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u0438\u043c \u043f\u043e\u043b\u044f\u043c\n            tours = tours.filter(\n                Q(hotel__icontains=query) |\n                Q(country__icontains=query) |\n                Q(city__icontains=query) |\n                Q(description__icontains=query)\n            )\n\n    paginator = Paginator(tours, 5)\n    page_number = request.GET.get('page')\n    page_obj = paginator.get_page(page_number)\n\n    return render(request, 'tour_list.html', {'page_obj': page_obj, 'form': form})\n</code></pre> <p>\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0432\u0441\u0435 \u0438\u043c\u0435\u044e\u0449\u0438\u0435\u0441\u044f \u0442\u0443\u0440\u044b. \u0422\u0430\u043a \u0436\u0435 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0441\u043e\u0432\u0435\u0440\u0448\u0430\u0442\u044c \u043f\u043e\u0438\u0441\u043a \u043f\u043e \u0442\u0443\u0440\u0430\u043c (\u043f\u043e \u043f\u043e\u043b\u044f\u043c \u043e\u0442\u0435\u043b\u044c, \u0441\u0442\u0440\u0430\u043d\u0430, \u0433\u043e\u0440\u043e\u0434 \u0438 \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435). \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 \u043f\u0430\u0433\u0438\u043d\u0430\u0446\u0438\u044e \u0434\u043b\u044f \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0435.</p>"},{"location":"lr2/views/#_6","title":"\u0414\u0435\u0442\u0430\u043b\u0438 \u0442\u0443\u0440\u0430","text":"<pre><code>def tour_detail(request, pk):\n    tour = get_object_or_404(Tour, pk=pk)\n    nights = (tour.end_date - tour.start_date).days\n    return render(request, 'tour_detail.html', {'tour': tour, 'nights': nights})\n</code></pre> <p>\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0434\u0435\u0442\u0430\u043b\u0438 \u0442\u0443\u0440\u0430 \u0438\u0437 \u043c\u043e\u0434\u0435\u043b\u0438, \u0441\u0447\u0438\u0442\u0430\u0435\u0442 \u0434\u043b\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u0442\u0443\u0440\u0430.</p>"},{"location":"lr2/views/#_7","title":"\u0420\u0435\u0437\u0435\u0440\u0432\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0442\u0443\u0440\u0430","text":"<pre><code>@login_required\ndef book_tour(request, tour_id):\n    tour = get_object_or_404(Tour, id=tour_id)\n    if request.method == 'POST':\n        form = BookingForm(request.POST, tour=tour)\n        print(form.is_valid())\n        if form.is_valid():\n            booking = form.save(commit=False)\n            booking.tour = tour\n            booking.user = request.user\n            booking.save()\n            print(booking)\n            return redirect('my_bookings')\n    else:\n        form = BookingForm(tour=tour)\n    return render(request, 'book_tour.html', {'form': form, 'tour': tour})\n</code></pre> <p>\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u0438\u0437 \u0444\u043e\u0440\u043c\u044b, \u0441\u043e\u0437\u0434\u0430\u0435\u0442 \u0431\u0440\u043e\u043d\u044c \u043d\u0430 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u0439 \u0442\u0443\u0440 \u0438 \u043f\u0435\u0440\u0435\u043d\u0430\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0431\u0440\u043e\u043d\u0435\u0439 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f. \u0422\u043e\u043b\u044c\u043a\u043e \u0434\u043b\u044f \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u043d\u044b\u0445 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u0439.</p>"},{"location":"lr2/views/#_8","title":"\u041e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f","text":"<pre><code>class BookingUpdateView(UpdateView):\n    model = Booking\n    form_class = BookingForm\n    template_name = 'update_booking.html'\n    success_url = reverse_lazy('my_bookings')\n\n    def get_form_kwargs(self):\n        kwargs = super().get_form_kwargs()\n        kwargs['tour'] = self.object.tour\n        return kwargs\n\n    def get_context_data(self, **kwargs):\n        context = super().get_context_data(**kwargs)\n        context['title'] = 'Edit Booking'\n        context['total_price'] = self.object.total_price\n        return context\n</code></pre> <p>\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u0438\u0437 \u0444\u043e\u0440\u043c\u044b \u0438 \u043e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u0442 \u0431\u0440\u043e\u043d\u044c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f. \u041f\u0440\u0438 \u0443\u0441\u043f\u0435\u0445\u0435 \u043f\u0435\u0440\u0435\u043d\u0430\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0431\u0440\u043e\u043d\u0435\u0439 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.</p>"},{"location":"lr2/views/#_9","title":"\u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f","text":"<pre><code>class BookingDeleteView(DeleteView):\n    model = Booking\n    template_name = 'delete_booking.html'\n    success_url = reverse_lazy('my_bookings')\n    title = 'Booking Cancellation'\n</code></pre> <p>\u0423\u0434\u0430\u043b\u044f\u0435\u0442 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0435 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435. \u041f\u0440\u0438 \u0443\u0441\u043f\u0435\u0445\u0435 \u043f\u0435\u0440\u0435\u043d\u0430\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0439.</p>"},{"location":"lr2/views/#_10","title":"\u0414\u0435\u0442\u0430\u043b\u0438 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f","text":"<pre><code>class BookingDetailView(DetailView):\n    model = Booking\n    template_name = 'booking_detail.html'\n    context_object_name = 'booking'\n</code></pre> <p>\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u043e \u0431\u0440\u043e\u043d\u0438.</p>"},{"location":"lr2/views/#_11","title":"\u041c\u043e\u0438 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f","text":"<pre><code>@login_required\ndef my_bookings(request):\n    bookings = request.user.bookings.all()\n    return render(request, 'my_bookings.html', {'bookings': bookings})\n</code></pre> <p>\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0432\u0441\u0435 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u043e\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f. \u0422\u043e\u043b\u044c\u043a\u043e \u0434\u043b\u044f \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u043d\u044b\u0445 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439.</p>"},{"location":"lr2/views/#_12","title":"\u041e\u0442\u0437\u044b\u0432\u044b","text":"<pre><code>@login_required\ndef add_review(request, pk):\n    tour = get_object_or_404(Tour, pk=pk)\n    if not request.user.bookings.filter(tour=tour, is_confirmed=True).exists():\n        return redirect('my_bookings', pk=pk)\n    if request.method == 'POST':\n        form = ReviewForm(request.POST)\n        if form.is_valid():\n            review = form.save(commit=False)\n            review.user = request.user\n            review.tour = tour\n            review.save()\n            return redirect('tour_detail', pk=pk)\n    else:\n        form = ReviewForm()\n    return render(request, 'add_review.html', {'form': form, 'tour': tour})\n</code></pre> <p>\u0421\u043e\u0437\u0434\u0430\u0435\u0442 \u043e\u0442\u0437\u044b\u0432 \u043d\u0430 \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u043d\u0443\u044e \u0431\u0440\u043e\u043d\u044c. \u0422\u043e\u043b\u044c\u043a\u043e \u0434\u043b\u044f \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u043d\u044b\u0445 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439.</p>"},{"location":"lr2/views/#_13","title":"\u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0442\u0443\u0440\u0430","text":"<pre><code>@admin_required\ndef add_tour(request):\n    if request.method == 'POST':\n        form = TourForm(request.POST)\n\n        if form.is_valid():\n            # \u0421\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u0438\u0435 \u0442\u0443\u0440\u0430 \u043f\u0435\u0440\u0435\u0434 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u043e\u0439 \u0444\u043e\u0440\u043c\u0441\u0435\u0442\u043e\u0432\n            tour = form.save(commit=False)\n            tour.save()\n\n            # \u041f\u0440\u0438\u0432\u044f\u0437\u044b\u0432\u0430\u0435\u043c \u0441\u043e\u0445\u0440\u0430\u043d\u0451\u043d\u043d\u044b\u0439 \u0442\u0443\u0440 \u043a \u0444\u043e\u0440\u043c\u0441\u0435\u0442\u0430\u043c\n            tariff_formset = TariffFormSet(request.POST, instance=tour)\n            meal_option_formset = MealOptionFormSet(request.POST, instance=tour)\n\n            if tariff_formset.is_valid() and meal_option_formset.is_valid():\n                tariff_formset.save()\n                meal_option_formset.save()\n                return redirect('tour_list')\n        else:\n            # \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043f\u0443\u0441\u0442\u044b\u0445 \u0444\u043e\u0440\u043c\u0441\u0435\u0442\u043e\u0432 \u043f\u0440\u0438 \u043e\u0448\u0438\u0431\u043a\u0435 \u0432 \u043e\u0441\u043d\u043e\u0432\u043d\u043e\u0439 \u0444\u043e\u0440\u043c\u0435\n            tariff_formset = TariffFormSet(instance=form.instance)\n            meal_option_formset = MealOptionFormSet(instance=form.instance)\n    else:\n        # \u0418\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043f\u0443\u0441\u0442\u044b\u0445 \u0444\u043e\u0440\u043c\n        form = TourForm()\n        tariff_formset = TariffFormSet(instance=Tour())\n        meal_option_formset = MealOptionFormSet(instance=Tour())\n\n    return render(request, 'add_tour.html', {\n        'form': form,\n        'tariff_formset': tariff_formset,\n        'meal_option_formset': meal_option_formset,\n    })\n</code></pre> <p>\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u0438\u0437 \u0444\u043e\u0440\u043c\u044b, \u0441\u043e\u0437\u0434\u0430\u0435\u0442 \u0442\u0443\u0440 \u0438 \u0441\u043e\u0437\u0434\u0430\u0435\u0442 \u0442\u0430\u0440\u0438\u0444\u044b \u0438 \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u044b \u043f\u0438\u0442\u0430\u043d\u0438\u044f \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0442\u0443\u0440\u0430. \u0422\u043e\u043b\u044c\u043a\u043e \u0434\u043b\u044f \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u0430.</p>"},{"location":"lr2/views/#_14","title":"\u0420\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0442\u0443\u0440\u0430","text":"<pre><code>@admin_required\ndef edit_tour(request, pk):\n    tour = get_object_or_404(Tour, pk=pk)\n\n    if request.method == 'POST':\n        form = TourForm(request.POST, instance=tour)\n        tariff_formset = TariffFormSet(request.POST, instance=tour)\n        meal_option_formset = MealOptionFormSet(request.POST, instance=tour)\n\n        if form.is_valid() and tariff_formset.is_valid() and meal_option_formset.is_valid():\n            # \u0421\u043e\u0445\u0440\u0430\u043d\u044f\u0435\u043c \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u0432 \u0442\u0443\u0440\u0435\n            form.save()\n\n            for tariff in tariff_formset.save(commit=False):\n                tariff.tour = tour\n                tariff.save()\n\n            # \u0423\u0434\u0430\u043b\u044f\u0435\u043c \u0442\u043e\u043b\u044c\u043a\u043e \u043f\u043e\u043c\u0435\u0447\u0435\u043d\u043d\u044b\u0435 \u0434\u043b\u044f \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044f \u0442\u0430\u0440\u0438\u0444\u044b\n            for tariff in tariff_formset.deleted_objects:\n                tariff.delete()\n\n            for meal_option in meal_option_formset.save(commit=False):\n                meal_option.tour = tour\n                meal_option.save()\n\n            # \u0423\u0434\u0430\u043b\u044f\u0435\u043c \u0442\u043e\u043b\u044c\u043a\u043e \u043f\u043e\u043c\u0435\u0447\u0435\u043d\u043d\u044b\u0435 \u0434\u043b\u044f \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044f \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u044b \u043f\u0438\u0442\u0430\u043d\u0438\u044f\n            for meal_option in meal_option_formset.deleted_objects:\n                meal_option.delete()\n\n            return redirect('tour_list')\n\n    else:\n        form = TourForm(instance=tour)\n        tariff_formset = TariffFormSet(instance=tour)\n        meal_option_formset = MealOptionFormSet(instance=tour)\n\n    return render(request, 'edit_tour.html', {\n        'form': form,\n        'tariff_formset': tariff_formset,\n        'meal_option_formset': meal_option_formset,\n    })\n</code></pre> <p>\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u0438\u0437 \u0444\u043e\u0440\u043c\u044b \u0438 \u043e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u043e \u0442\u0443\u0440\u0435, \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 \u0442\u0430\u0440\u0438\u0444\u044b \u0438 \u043e\u043f\u0446\u0438\u0438 \u0438 \u0443\u0434\u0430\u043b\u044f\u0435\u0442 \u043f\u043e\u043c\u0435\u0447\u0435\u043d\u043d\u043e\u0435. \u0422\u043e\u043b\u044c\u043a\u043e \u0434\u043b\u044f \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u0430.</p>"},{"location":"lr2/views/#_15","title":"\u041f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0439 \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u043e\u043c","text":"<pre><code>@admin_required\ndef view_bookings(request):\n    bookings = Booking.objects.all()\n    return render(request, 'view_bookings.html', {'bookings': bookings})\n</code></pre> <p>\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0432\u0441\u0435\u0445 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439. \u0422\u043e\u043b\u044c\u043a\u043e \u0434\u043b\u044f \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u0430.</p>"},{"location":"lr2/views/#_16","title":"\u041f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u0438\u0435 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0439 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439","text":"<pre><code>@admin_required\ndef confirm_booking(request, pk):\n    booking = get_object_or_404(Booking, pk=pk)\n    booking.is_confirmed = True\n    booking.save()\n    return redirect('view_bookings')\n</code></pre> <p>\u041f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0430\u0435\u0442 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439, \u043f\u0435\u0440\u0435\u043d\u0430\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0439 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u0439. \u0422\u043e\u043b\u044c\u043a\u043e \u0434\u043b\u044f \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u0430.</p>"},{"location":"lr2/views/#_17","title":"\u041f\u0440\u043e\u0434\u0430\u043d\u043d\u044b\u0435 \u0442\u0443\u0440\u044b \u043f\u043e \u0441\u0442\u0440\u0430\u043d\u0430\u043c","text":"<pre><code>@admin_required\ndef sold_tours_by_country(request):\n    tours_by_country = (\n        Tour.objects.filter(bookings__is_confirmed=True)\n        .values('country')\n        .annotate(total_bookings=Count('bookings'))\n        .order_by('-total_bookings')\n    )\n    return render(request, 'sold_tours.html', {'tours_by_country': tours_by_country})\n</code></pre> <p>\u0424\u0438\u043b\u044c\u0442\u0440\u0443\u0435\u0442 \u0442\u0443\u0440\u044b \u0438 \u043f\u043e \u0441\u0442\u0440\u0430\u043d\u0430\u043c \u0438 \u0441\u0447\u0438\u0442\u0430\u0435\u0442 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u043d\u044b\u0445 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0439 \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0439 \u0441\u0442\u0440\u0430\u043d\u044b. \u0422\u043e\u043b\u044c\u043a\u043e \u0434\u043b\u044f \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u0430.</p>"},{"location":"lr3/","title":"WEB-\u041f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0434\u043e\u043c\u0430\u0448\u043d\u0435\u0435 \u0437\u0430\u0434\u0430\u043d\u0438\u0435 3","text":"<p>\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 3. \u0420\u0415\u0410\u041b\u0418\u0417\u0410\u0426\u0418\u042f \u0421\u0415\u0420\u0412\u0415\u0420\u041d\u041e\u0419 \u0427\u0410\u0421\u0422\u0418 \u041f\u0420\u0418\u041b\u041e\u0416\u0415\u041d\u0418\u042f \u0421\u0420\u0415\u0414\u0421\u0422\u0412\u0410\u041c\u0418 DJANGO \u0418 DJANGORESTFRAMEWORK.</p>"},{"location":"lr3/#_1","title":"\u0421\u043e\u0434\u0435\u0440\u0436\u0430\u043d\u0438\u0435","text":"<ul> <li>\u0410\u0434\u043c\u0438\u043d \u043f\u0430\u043d\u0435\u043b\u044c</li> <li>\u041c\u043e\u0434\u0435\u043b\u0438</li> <li>\u0421\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u0430\u0442\u043e\u0440\u044b</li> <li>\u041f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f</li> <li>\u041c\u0430\u0440\u0448\u0440\u0443\u0442\u044b</li> <li>\u041f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0430\u044f</li> <li>Leetcode</li> </ul>"},{"location":"lr3/admin/","title":"\u0410\u0434\u043c\u0438\u043d-\u043f\u0430\u043d\u0435\u043b\u044c \u043a\u043e\u043d\u0446\u0435\u0440\u0442\u043d\u043e\u0439 \u043f\u043b\u043e\u0449\u0430\u0434\u043a\u0438","text":""},{"location":"lr3/admin/#performer","title":"\u0418\u0441\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u0438 (Performer)","text":"<ul> <li>\u0424\u0438\u043b\u044c\u0442\u0440\u0430\u0446\u0438\u044f \u043f\u043e \u043c\u0435\u043d\u0435\u0434\u0436\u0435\u0440\u0443 \u0438\u0441\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044f.</li> <li>\u041f\u043e\u0438\u0441\u043a \u043f\u043e \u0438\u043c\u0435\u043d\u0438 \u0438\u0441\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044f, \u0438\u043c\u0435\u043d\u0438 \u043c\u0435\u043d\u0435\u0434\u0436\u0435\u0440\u0430 \u0438 \u044d\u043b\u0435\u043a\u0442\u0440\u043e\u043d\u043d\u043e\u0439 \u043f\u043e\u0447\u0442\u0435.</li> <li>\u0421\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0430 \u0438\u0441\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u0435\u0439 \u043f\u043e \u0438\u043c\u0435\u043d\u0438.</li> </ul> <pre><code>@admin.register(Performer)\nclass PerformerAdmin(admin.ModelAdmin):\n    list_display = ('name', 'manager', 'email', 'phone')\n    search_fields = ('name', 'manager', 'email')\n    list_filter = ('manager',)\n    ordering = ('name',)\n</code></pre>"},{"location":"lr3/admin/#concert","title":"\u041a\u043e\u043d\u0446\u0435\u0440\u0442\u044b (Concert)","text":"<ul> <li>\u0424\u0438\u043b\u044c\u0442\u0440\u0430\u0446\u0438\u044f \u043a\u043e\u043d\u0446\u0435\u0440\u0442\u043e\u0432 \u043f\u043e \u0441\u0442\u0430\u0442\u0443\u0441\u0443, \u0434\u0430\u0442\u0435 \u043f\u0440\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u044f \u0438 \u0438\u0441\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044e.</li> <li>\u041f\u043e\u0438\u0441\u043a \u043f\u043e \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044e \u043a\u043e\u043d\u0446\u0435\u0440\u0442\u0430 \u0438 \u0438\u043c\u0435\u043d\u0438 \u0438\u0441\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044f.</li> <li>\u0421\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0430 \u043a\u043e\u043d\u0446\u0435\u0440\u0442\u043e\u0432 \u043f\u043e \u0434\u0430\u0442\u0435.</li> </ul> <pre><code>@admin.register(Concert)\nclass ConcertAdmin(admin.ModelAdmin):\n    list_display = ('title', 'performer', 'date', 'status', 'age_limit')\n    search_fields = ('title', 'performer__name')\n    list_filter = ('status', 'date', 'performer')\n    ordering = ('date',)\n</code></pre>"},{"location":"lr3/admin/#equipment","title":"\u041e\u0431\u043e\u0440\u0443\u0434\u043e\u0432\u0430\u043d\u0438\u0435 (Equipment)","text":"<ul> <li>\u0424\u0438\u043b\u044c\u0442\u0440\u0430\u0446\u0438\u044f \u043e\u0431\u043e\u0440\u0443\u0434\u043e\u0432\u0430\u043d\u0438\u044f \u043f\u043e \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044e.</li> <li>\u041f\u043e\u0438\u0441\u043a \u043f\u043e \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044e \u043e\u0431\u043e\u0440\u0443\u0434\u043e\u0432\u0430\u043d\u0438\u044f.</li> <li>\u0421\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0430 \u043e\u0431\u043e\u0440\u0443\u0434\u043e\u0432\u0430\u043d\u0438\u044f \u043f\u043e \u0438\u043c\u0435\u043d\u0438.</li> </ul> <pre><code>@admin.register(Equipment)\nclass EquipmentAdmin(admin.ModelAdmin):\n    list_display = ('name', 'quantity')\n    search_fields = ('name',)\n    list_filter = ('name',)\n    ordering = ('name',)\n</code></pre>"},{"location":"lr3/admin/#concertequipment","title":"\u041e\u0431\u043e\u0440\u0443\u0434\u043e\u0432\u0430\u043d\u0438\u0435 \u0434\u043b\u044f \u043a\u043e\u043d\u0446\u0435\u0440\u0442\u0430 (ConcertEquipment)","text":"<ul> <li>\u0424\u0438\u043b\u044c\u0442\u0440\u0430\u0446\u0438\u044f \u043f\u043e \u043a\u043e\u043d\u0446\u0435\u0440\u0442\u0443 \u0438 \u043e\u0431\u043e\u0440\u0443\u0434\u043e\u0432\u0430\u043d\u0438\u044e.</li> <li>\u041f\u043e\u0438\u0441\u043a \u043f\u043e \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044e \u043a\u043e\u043d\u0446\u0435\u0440\u0442\u0430 \u0438 \u043e\u0431\u043e\u0440\u0443\u0434\u043e\u0432\u0430\u043d\u0438\u044f.</li> <li>\u0421\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0430 \u043f\u043e \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044e \u043a\u043e\u043d\u0446\u0435\u0440\u0442\u0430.</li> </ul> <pre><code>@admin.register(ConcertEquipment)\nclass ConcertEquipmentAdmin(admin.ModelAdmin):\n    list_display = ('concert', 'equipment', 'quantity')\n    search_fields = ('concert__title', 'equipment__name')\n    list_filter = ('concert', 'equipment')\n    ordering = ('concert',)\n</code></pre>"},{"location":"lr3/admin/#ticket","title":"\u0411\u0438\u043b\u0435\u0442\u044b (Ticket)","text":"<ul> <li>\u0424\u0438\u043b\u044c\u0442\u0440\u0430\u0446\u0438\u044f \u0431\u0438\u043b\u0435\u0442\u043e\u0432 \u043f\u043e \u043a\u043e\u043d\u0446\u0435\u0440\u0442\u0443 \u0438 \u0446\u0435\u043d\u0435.</li> <li>\u041f\u043e\u0438\u0441\u043a \u043f\u043e \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044e \u0431\u0438\u043b\u0435\u0442\u0430 \u0438 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044e \u043a\u043e\u043d\u0446\u0435\u0440\u0442\u0430.</li> <li>\u0421\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0430 \u0431\u0438\u043b\u0435\u0442\u043e\u0432 \u043f\u043e \u043a\u043e\u043d\u0446\u0435\u0440\u0442\u0443 \u0438 \u0446\u0435\u043d\u0435.</li> </ul> <pre><code>@admin.register(Ticket)\nclass TicketAdmin(admin.ModelAdmin):\n    list_display = ('name', 'concert', 'price', 'total_quantity', 'sold_quantity', 'available_quantity')\n    search_fields = ('name', 'concert__title')\n    list_filter = ('concert', 'price')\n    ordering = ('concert', 'price')\n</code></pre>"},{"location":"lr3/admin/#order","title":"\u0417\u0430\u043a\u0430\u0437\u044b (Order)","text":"<ul> <li>\u0424\u0438\u043b\u044c\u0442\u0440\u0430\u0446\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u043e\u0432 \u043f\u043e \u0441\u0442\u0430\u0442\u0443\u0441\u0443 \u0438 \u0434\u0430\u0442\u0435 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f.</li> <li>\u041f\u043e\u0438\u0441\u043a \u043f\u043e \u0438\u043c\u0435\u043d\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f, \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044e \u0431\u0438\u043b\u0435\u0442\u0430 \u0438 \u0441\u0442\u0430\u0442\u0443\u0441\u0443 \u0437\u0430\u043a\u0430\u0437\u0430.</li> <li>\u0421\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0430 \u0437\u0430\u043a\u0430\u0437\u043e\u0432 \u043f\u043e \u0434\u0430\u0442\u0435.</li> </ul> <pre><code>@admin.register(Order)\nclass OrderAdmin(admin.ModelAdmin):\n    list_display = ('user', 'ticket', 'quantity', 'date', 'total_price', 'status')\n    search_fields = ('user__username', 'ticket__name', 'status')\n    list_filter = ('status', 'date')\n    ordering = ('date',)\n</code></pre>"},{"location":"lr3/admin/#employee","title":"\u0421\u043e\u0442\u0440\u0443\u0434\u043d\u0438\u043a\u0438 (Employee)","text":"<ul> <li>\u0424\u0438\u043b\u044c\u0442\u0440\u0430\u0446\u0438\u044f \u0441\u043e\u0442\u0440\u0443\u0434\u043d\u0438\u043a\u043e\u0432 \u043f\u043e \u0434\u043e\u043b\u0436\u043d\u043e\u0441\u0442\u0438.</li> <li>\u041f\u043e\u0438\u0441\u043a \u043f\u043e \u0438\u043c\u0435\u043d\u0438 \u0438 \u0434\u043e\u043b\u0436\u043d\u043e\u0441\u0442\u0438.</li> <li>\u0421\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0430 \u0441\u043e\u0442\u0440\u0443\u0434\u043d\u0438\u043a\u043e\u0432 \u043f\u043e \u0438\u043c\u0435\u043d\u0438.</li> </ul> <pre><code>@admin.register(Employee)\nclass EmployeeAdmin(admin.ModelAdmin):\n    list_display = ('name', 'position', 'salary', 'phone', 'email')\n    search_fields = ('name', 'position')\n    list_filter = ('position',)\n    ordering = ('name',)\n</code></pre>"},{"location":"lr3/admin/#organizer","title":"\u041e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0442\u043e\u0440\u044b (Organizer)","text":"<ul> <li>\u0424\u0438\u043b\u044c\u0442\u0440\u0430\u0446\u0438\u044f \u043f\u043e \u043a\u043e\u043d\u0446\u0435\u0440\u0442\u0443.</li> <li>\u041f\u043e\u0438\u0441\u043a \u043f\u043e \u0438\u043c\u0435\u043d\u0438 \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0442\u043e\u0440\u0430 \u0438 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044e \u043a\u043e\u043d\u0446\u0435\u0440\u0442\u0430.</li> <li>\u0421\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0430 \u043f\u043e \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044e \u043a\u043e\u043d\u0446\u0435\u0440\u0442\u0430.</li> </ul> <pre><code>@admin.register(Organizer)\nclass OrganizerAdmin(admin.ModelAdmin):\n    list_display = ('employee', 'concert')\n    search_fields = ('employee__name', 'concert__title')\n    list_filter = ('concert',)\n    ordering = ('concert',)\n</code></pre>"},{"location":"lr3/leetcode/","title":"Leetcode","text":""},{"location":"lr3/leetcode/#leetcode","title":"Leetcode","text":""},{"location":"lr3/leetcode/#122-best-time-to-buy-and-sell-stock-ii","title":"122. Best Time to Buy and Sell Stock II","text":"<p>You are given an integer array prices where prices[i] is the price of a given stock on the ith day.</p> <p>On each day, you may decide to buy and/or sell the stock. You can only hold at most one share of the stock at any time. However, you can buy it then immediately sell it on the same day.</p> <p>Find and return the maximum profit you can achieve.</p> <p>Example 1:</p> <p>Input: prices = [7,1,5,3,6,4] Output: 7 Explanation: Buy on day 2 (price = 1) and sell on day 3 (price = 5), profit = 5-1 = 4. Then buy on day 4 (price = 3) and sell on day 5 (price = 6), profit = 6-3 = 3. Total profit is 4 + 3 = 7. Example 2:</p> <p>Input: prices = [1,2,3,4,5] Output: 4 Explanation: Buy on day 1 (price = 1) and sell on day 5 (price = 5), profit = 5-1 = 4. Total profit is 4. Example 3:</p> <p>Input: prices = [7,6,4,3,1] Output: 0 Explanation: There is no way to make a positive profit, so we never buy the stock to achieve the maximum profit of 0.</p> <p>Constraints:</p> <p>1 &lt;= prices.length &lt;= 3 * 104 0 &lt;= prices[i] &lt;= 104</p>"},{"location":"lr3/leetcode/#product-of-array-except-self","title":"Product of Array Except Self","text":"<p>Given an integer array nums, return an array answer such that answer[i] is equal to the product of all the elements of nums except nums[i].</p> <p>The product of any prefix or suffix of nums is guaranteed to fit in a 32-bit integer.</p> <p>You must write an algorithm that runs in O(n) time and without using the division operation.</p> <p>Example 1:</p> <p>Input: nums = [1,2,3,4] Output: [24,12,8,6] Example 2:</p> <p>Input: nums = [-1,1,0,-3,3] Output: [0,0,9,0,0]</p> <p>Constraints:</p> <p>2 &lt;= nums.length &lt;= 105 -30 &lt;= nums[i] &lt;= 30 The input is generated such that answer[i] is guaranteed to fit in a 32-bit integer.</p> <p>Follow up: Can you solve the problem in O(1) extra space complexity? (The output array does not count as extra space for space complexity analysis.)</p>"},{"location":"lr3/leetcode/#solution","title":"Solution","text":"<pre><code>class Solution:\n    def productExceptSelf(self, nums: List[int]) -&gt; List[int]:\n        n = len(nums)\n        answer = [1] * n\n\n        left_product = 1\n        for i in range(n):\n            answer[i] = left_product\n            left_product *= nums[i]\n\n        right_product = 1\n        for i in range(n - 1, -1, -1):\n            answer[i] *= right_product\n            right_product *= nums[i]\n\n        return answer\n</code></pre>"},{"location":"lr3/leetcode/#27-remove-element","title":"27. Remove Element","text":"<p>Given an integer array nums and an integer val, remove all occurrences of val in nums in-place. The order of the elements may be changed. Then return the number of elements in nums which are not equal to val.</p> <p>Consider the number of elements in nums which are not equal to val be k, to get accepted, you need to do the following things:</p> <p>Change the array nums such that the first k elements of nums contain the elements which are not equal to val. The remaining elements of nums are not important as well as the size of nums. Return k. Custom Judge:</p> <p>The judge will test your solution with the following code:</p> <p>int[] nums = [...]; // Input array int val = ...; // Value to remove int[] expectedNums = [...]; // The expected answer with correct length.                             // It is sorted with no values equaling val.</p> <p>int k = removeElement(nums, val); // Calls your implementation</p> <p>assert k == expectedNums.length; sort(nums, 0, k); // Sort the first k elements of nums for (int i = 0; i &lt; actualLength; i++) {     assert nums[i] == expectedNums[i]; } If all assertions pass, then your solution will be accepted.</p> <p>Example 1:</p> <p>Input: nums = [3,2,2,3], val = 3 Output: 2, nums = [2,2,,] Explanation: Your function should return k = 2, with the first two elements of nums being 2. It does not matter what you leave beyond the returned k (hence they are underscores). Example 2:</p> <p>Input: nums = [0,1,2,2,3,0,4,2], val = 2 Output: 5, nums = [0,1,4,0,3,,,_] Explanation: Your function should return k = 5, with the first five elements of nums containing 0, 0, 1, 3, and 4. Note that the five elements can be returned in any order. It does not matter what you leave beyond the returned k (hence they are underscores).</p> <p>Constraints:</p> <p>0 &lt;= nums.length &lt;= 100 0 &lt;= nums[i] &lt;= 50 0 &lt;= val &lt;= 100</p>"},{"location":"lr3/leetcode/#solution_1","title":"Solution","text":"<pre><code>class Solution:\n    def removeElement(self, nums: List[int], val: int) -&gt; int:\n        count = 0\n        for i in range(len(nums))[::-1]:\n            if nums[i] == val:\n                nums.pop(i)\n                nums.append('_')\n                count += 1\n        return len(nums)-count        \n\n</code></pre>"},{"location":"lr3/leetcode/#88-merge-sorted-array","title":"88. Merge Sorted Array","text":"<p>You are given two integer arrays nums1 and nums2, sorted in non-decreasing order, and two integers m and n, representing the number of elements in nums1 and nums2 respectively.</p> <p>Merge nums1 and nums2 into a single array sorted in non-decreasing order.</p> <p>The final sorted array should not be returned by the function, but instead be stored inside the array nums1. To accommodate this, nums1 has a length of m + n, where the first m elements denote the elements that should be merged, and the last n elements are set to 0 and should be ignored. nums2 has a length of n.</p> <p>Example 1:</p> <p>Input: nums1 = [1,2,3,0,0,0], m = 3, nums2 = [2,5,6], n = 3 Output: [1,2,2,3,5,6] Explanation: The arrays we are merging are [1,2,3] and [2,5,6]. The result of the merge is [1,2,2,3,5,6] with the underlined elements coming from nums1. Example 2:</p> <p>Input: nums1 = [1], m = 1, nums2 = [], n = 0 Output: [1] Explanation: The arrays we are merging are [1] and []. The result of the merge is [1]. Example 3:</p> <p>Input: nums1 = [0], m = 0, nums2 = [1], n = 1 Output: [1] Explanation: The arrays we are merging are [] and [1]. The result of the merge is [1]. Note that because m = 0, there are no elements in nums1. The 0 is only there to ensure the merge result can fit in nums1.</p> <p>Constraints:</p> <p>nums1.length == m + n nums2.length == n 0 &lt;= m, n &lt;= 200 1 &lt;= m + n &lt;= 200 -109 &lt;= nums1[i], nums2[j] &lt;= 109</p>"},{"location":"lr3/leetcode/#solution_2","title":"Solution","text":"<pre><code>class Solution:\n    def merge(self, nums1: List[int], m: int, nums2: List[int], n: int) -&gt; None:\n        \"\"\"\n        Do not return anything, modify nums1 in-place instead.\n        \"\"\"\n        del nums1[m:m+n]\n        for i in range(n):\n            k=0\n            while k in range (len(nums1)) and nums1[k] &lt; nums2[i]:\n                k+=1\n            nums1.insert(k, nums2[i])\n\n</code></pre>"},{"location":"lr3/leetcode/#238-product-of-array-except-self","title":"238. Product of Array Except Self","text":"<p>Given an integer array nums, return an array answer such that answer[i] is equal to the product of all the elements of nums except nums[i].</p> <p>The product of any prefix or suffix of nums is guaranteed to fit in a 32-bit integer.</p> <p>You must write an algorithm that runs in O(n) time and without using the division operation.</p> <p>Example 1:</p> <p>Input: nums = [1,2,3,4] Output: [24,12,8,6]</p> <p>Example 2:</p> <p>Input: nums = [-1,1,0,-3,3] Output: [0,0,9,0,0]</p> <p>Constraints:</p> <p>2 &lt;= nums.length &lt;= 105 -30 &lt;= nums[i] &lt;= 30 The product of any prefix or suffix of nums is guaranteed to fit in a 32-bit integer.</p>"},{"location":"lr3/leetcode/#solution_3","title":"Solution","text":"<pre><code>class Solution:\n    def productExceptSelf(self, nums: List[int]) -&gt; List[int]:\n        n = len(nums)\n        answer = [1] * n\n\n        left_product = 1\n        for i in range(n):\n            answer[i] = left_product\n            left_product *= nums[i]\n\n        right_product = 1\n        for i in range(n - 1, -1, -1):\n            answer[i] *= right_product\n            right_product *= nums[i]\n\n        return answer\n</code></pre>"},{"location":"lr3/leetcode/#238-product-of-array-except-self_1","title":"238. Product of Array Except Self","text":"<p>Given an integer array nums, return an array answer such that answer[i] is equal to the product of all the elements of nums except nums[i].</p> <p>The product of any prefix or suffix of nums is guaranteed to fit in a 32-bit integer.</p> <p>You must write an algorithm that runs in O(n) time and without using the division operation.</p> <p>Example 1:</p> <p>Input: nums = [1,2,3,4] Output: [24,12,8,6]</p> <p>Example 2:</p> <p>Input: nums = [-1,1,0,-3,3] Output: [0,0,9,0,0]</p> <p>Constraints:</p> <p>2 &lt;= nums.length &lt;= 105 -30 &lt;= nums[i] &lt;= 30 The product of any prefix or suffix of nums is guaranteed to fit in a 32-bit integer.</p>"},{"location":"lr3/leetcode/#solution_4","title":"Solution","text":"<pre><code>class RandomizedSet:\n    def __init__(self):\n        self.val_to_index = {}\n        self.values = []\n\n    def insert(self, val: int) -&gt; bool:\n        if val in self.val_to_index:\n            return False\n        self.val_to_index[val] = len(self.values)\n        self.values.append(val)\n        return True\n\n    def remove(self, val: int) -&gt; bool:\n        if val not in self.val_to_index:\n            return False\n        index = self.val_to_index[val]\n        last_val = self.values[-1]\n        self.values[index] = last_val\n        self.val_to_index[last_val] = index\n        self.values.pop()\n        del self.val_to_index[val]\n        return True\n\n    def getRandom(self) -&gt; int:\n        return random.choice(self.values)\n</code></pre>"},{"location":"lr3/leetcode/#274-h-index","title":"274. H-Index","text":"<p>Given an array of integers citations where citations[i] is the number of citations a researcher received for their ith paper, return the researcher's h-index.</p> <p>According to the definition of h-index on Wikipedia: The h-index is defined as the maximum value of h such that the given researcher has published at least h papers that have each been cited at least h times.</p> <p>Example 1:</p> <p>Input: citations = [3,0,6,1,5] Output: 3 Explanation: [3,0,6,1,5] means the researcher has 5 papers in total and each of them had received 3, 0, 6, 1, 5 citations respectively. Since the researcher has 3 papers with at least 3 citations each and the remaining two with no more than 3 citations each, their h-index is 3. Example 2:</p> <p>Input: citations = [1,3,1] Output: 1</p>"},{"location":"lr3/leetcode/#solution_5","title":"Solution","text":"<pre><code>class Solution:\n    def hIndex(self, citations: List[int]) -&gt; int:\n        citations.sort(reverse=True)  \n        h_index = 0\n        for i, citation in enumerate(citations):\n            if citation &gt;= i + 1:\n                h_index = i + 1\n            else:\n                break\n        return h_index\n</code></pre>"},{"location":"lr3/leetcode/#55-jump-game","title":"55. Jump Game","text":"<p>You are given an integer array nums. You are initially positioned at the array's first index, and each element in the array represents your maximum jump length at that position.</p> <p>Return true if you can reach the last index, or false otherwise.</p> <p>Example 1:</p> <p>Input: nums = [2,3,1,1,4] Output: true Explanation: Jump 1 step from index 0 to 1, then 3 steps to the last index. Example 2:</p> <p>Input: nums = [3,2,1,0,4] Output: false Explanation: You will always arrive at index 3 no matter what. Its maximum jump length is 0, which makes it impossible to reach the last index.</p> <p>Constraints:</p> <p>1 &lt;= nums.length &lt;= 104 0 &lt;= nums[i] &lt;= 105</p>"},{"location":"lr3/leetcode/#solution_6","title":"Solution","text":"<pre><code>class Solution:\n    def canJump(self, nums: List[int]) -&gt; bool:\n        max_reach = 0\n        for i, jump in enumerate(nums):\n            if i &gt; max_reach:\n                return False\n            max_reach = max(max_reach, i + jump)\n            if max_reach &gt;= len(nums) - 1:\n                return True\n        return False\n</code></pre>"},{"location":"lr3/leetcode/#122-best-time-to-buy-and-sell-stock-ii_1","title":"122. Best Time to Buy and Sell Stock II","text":"<p>You are given an integer array prices where prices[i] is the price of a given stock on the ith day.</p> <p>On each day, you may decide to buy and/or sell the stock. You can only hold at most one share of the stock at any time. However, you can buy it then immediately sell it on the same day.</p> <p>Find and return the maximum profit you can achieve.</p> <p>Example 1:</p> <p>Input: prices = [7,1,5,3,6,4] Output: 7 Explanation: Buy on day 2 (price = 1) and sell on day 3 (price = 5), profit = 5-1 = 4. Then buy on day 4 (price = 3) and sell on day 5 (price = 6), profit = 6-3 = 3. Total profit is 4 + 3 = 7. Example 2:</p> <p>Input: prices = [1,2,3,4,5] Output: 4 Explanation: Buy on day 1 (price = 1) and sell on day 5 (price = 5), profit = 5-1 = 4. Total profit is 4. Example 3:</p> <p>Input: prices = [7,6,4,3,1] Output: 0 Explanation: There is no way to make a positive profit, so we never buy the stock to achieve the maximum profit of 0.</p> <p>Constraints:</p> <p>1 &lt;= prices.length &lt;= 3 * 104 0 &lt;= prices[i] &lt;= 104</p>"},{"location":"lr3/leetcode/#solution_7","title":"Solution","text":"<pre><code>class Solution:\n    def maxProfit(self, prices: List[int]) -&gt; int:\n        max_profit = 0\n        for i in range(1, len(prices)):\n            if prices[i] &gt; prices[i - 1]:\n                max_profit += prices[i] - prices[i - 1]\n        return max_profit\n</code></pre>"},{"location":"lr3/models/","title":"\u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f \u043c\u043e\u0434\u0435\u043b\u0435\u0439 \u0434\u043b\u044f \u043a\u043e\u043d\u0446\u0435\u0440\u0442\u043d\u043e\u0439 \u043f\u043b\u043e\u0449\u0430\u0434\u043a\u0438","text":""},{"location":"lr3/models/#1-performer","title":"1. \u0418\u0441\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c (Performer)","text":"<pre><code>class Performer(models.Model):\n    name = models.CharField(max_length=255)\n    manager = models.CharField(max_length=255)\n    email = models.EmailField()\n    phone = models.CharField(max_length=20)\n</code></pre> <p>\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u0425\u0440\u0430\u043d\u0438\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e\u0431 \u0438\u0441\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044f\u0445. - <code>name</code> \u2014 \u0418\u043c\u044f \u0438\u0441\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044f. - <code>manager</code> \u2014 \u041c\u0435\u043d\u0435\u0434\u0436\u0435\u0440 \u0438\u0441\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044f. - <code>email</code> \u2014 \u041a\u043e\u043d\u0442\u0430\u043a\u0442\u043d\u044b\u0439 email. - <code>phone</code> \u2014 \u041a\u043e\u043d\u0442\u0430\u043a\u0442\u043d\u044b\u0439 \u0442\u0435\u043b\u0435\u0444\u043e\u043d.</p>"},{"location":"lr3/models/#2-concert","title":"2. \u041a\u043e\u043d\u0446\u0435\u0440\u0442 (Concert)","text":"<pre><code>class Concert(models.Model):\n    STATUS_CHOICES = [\n        ('held', '\u041f\u0440\u043e\u0432\u0435\u0434\u0435\u043d'),\n        ('cancelled', '\u041e\u0442\u043c\u0435\u043d\u0435\u043d'),\n        ('prepared', '\u041f\u043e\u0434\u0433\u043e\u0442\u043e\u0432\u043b\u0435\u043d'),\n        ('in_progress', '\u0412 \u0440\u0430\u0431\u043e\u0442\u0435')\n    ]\n\n    image = models.ImageField(upload_to='concerts', default='concerts.jpg')\n    title = models.CharField(max_length=255)\n    description = models.TextField()\n    performer = models.ForeignKey(Performer, on_delete=models.CASCADE, related_name=\"concerts\")\n    date = models.DateField()\n    age_limit = models.PositiveIntegerField(default=0)\n    status = models.CharField(max_length=11, choices=STATUS_CHOICES, default='in_progress')\n</code></pre> <p>\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u0425\u0440\u0430\u043d\u0438\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u043a\u043e\u043d\u0446\u0435\u0440\u0442\u0430\u0445. - <code>image</code> \u2014 \u041e\u0431\u043b\u043e\u0436\u043a\u0430 \u043a\u043e\u043d\u0446\u0435\u0440\u0442\u0430. - <code>title</code> \u2014 \u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043a\u043e\u043d\u0446\u0435\u0440\u0442\u0430. - <code>description</code> \u2014 \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043a\u043e\u043d\u0446\u0435\u0440\u0442\u0430. - <code>performer</code> \u2014 \u0418\u0441\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c. - <code>date</code> \u2014 \u0414\u0430\u0442\u0430 \u043f\u0440\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u044f. - <code>age_limit</code> \u2014 \u0412\u043e\u0437\u0440\u0430\u0441\u0442\u043d\u043e\u0435 \u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u0435. - <code>status</code> \u2014 \u0421\u0442\u0430\u0442\u0443\u0441 \u043a\u043e\u043d\u0446\u0435\u0440\u0442\u0430 (<code>held</code>, <code>cancelled</code>, <code>prepared</code>, <code>in_progress</code>).</p>"},{"location":"lr3/models/#3-equipment","title":"3. \u041e\u0431\u043e\u0440\u0443\u0434\u043e\u0432\u0430\u043d\u0438\u0435 (Equipment)","text":"<pre><code>class Equipment(models.Model):\n    name = models.CharField(max_length=255)\n    quantity = models.PositiveIntegerField()\n</code></pre> <p>\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u0425\u0440\u0430\u043d\u0438\u0442 \u0441\u043f\u0438\u0441\u043e\u043a \u043e\u0431\u043e\u0440\u0443\u0434\u043e\u0432\u0430\u043d\u0438\u044f. - <code>name</code> \u2014 \u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043e\u0431\u043e\u0440\u0443\u0434\u043e\u0432\u0430\u043d\u0438\u044f. - <code>quantity</code> \u2014 \u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e.</p>"},{"location":"lr3/models/#4-concertequipment","title":"4. \u041e\u0431\u043e\u0440\u0443\u0434\u043e\u0432\u0430\u043d\u0438\u0435 \u0434\u043b\u044f \u043a\u043e\u043d\u0446\u0435\u0440\u0442\u0430 (ConcertEquipment)","text":"<pre><code>class ConcertEquipment(models.Model):\n    concert = models.ForeignKey(Concert, on_delete=models.CASCADE, related_name=\"equipment\")\n    equipment = models.ForeignKey(Equipment, on_delete=models.CASCADE, related_name=\"concerts\")\n    quantity = models.PositiveIntegerField()\n</code></pre> <p>\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u0421\u0432\u044f\u0437\u044b\u0432\u0430\u0435\u0442 \u043a\u043e\u043d\u0446\u0435\u0440\u0442\u044b \u0441 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u044b\u043c \u043e\u0431\u043e\u0440\u0443\u0434\u043e\u0432\u0430\u043d\u0438\u0435\u043c. - <code>concert</code> \u2014 \u041a\u043e\u043d\u0446\u0435\u0440\u0442. - <code>equipment</code> \u2014 \u041e\u0431\u043e\u0440\u0443\u0434\u043e\u0432\u0430\u043d\u0438\u0435. - <code>quantity</code> \u2014 \u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043e\u0431\u043e\u0440\u0443\u0434\u043e\u0432\u0430\u043d\u0438\u044f.</p>"},{"location":"lr3/models/#5-ticket","title":"5. \u0411\u0438\u043b\u0435\u0442 (Ticket)","text":"<pre><code>class Ticket(models.Model):\n    concert = models.ForeignKey('Concert', on_delete=models.CASCADE, related_name='ticket_categories')\n    name = models.CharField(max_length=255)\n    price = models.DecimalField(max_digits=10, decimal_places=2)\n    total_quantity = models.PositiveIntegerField()\n    sold_quantity = models.PositiveIntegerField(default=0)\n</code></pre> <p>\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u0425\u0440\u0430\u043d\u0438\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0431\u0438\u043b\u0435\u0442\u0430\u0445 \u043d\u0430 \u043a\u043e\u043d\u0446\u0435\u0440\u0442. - <code>concert</code> \u2014 \u041a\u043e\u043d\u0446\u0435\u0440\u0442. - <code>name</code> \u2014 \u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0438 \u0431\u0438\u043b\u0435\u0442\u043e\u0432. - <code>price</code> \u2014 \u0426\u0435\u043d\u0430 \u0431\u0438\u043b\u0435\u0442\u0430. - <code>total_quantity</code> \u2014 \u0412\u0441\u0435\u0433\u043e \u0431\u0438\u043b\u0435\u0442\u043e\u0432. - <code>sold_quantity</code> \u2014 \u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043f\u0440\u043e\u0434\u0430\u043d\u043d\u044b\u0445 \u0431\u0438\u043b\u0435\u0442\u043e\u0432.</p> <p>\u041c\u0435\u0442\u043e\u0434\u044b: - <code>available_quantity</code> \u2014 \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0445 \u0431\u0438\u043b\u0435\u0442\u043e\u0432. - <code>sell_tickets(quantity)</code> \u2014 \u041f\u0440\u043e\u0434\u0430\u0435\u0442 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0431\u0438\u043b\u0435\u0442\u043e\u0432.</p>"},{"location":"lr3/models/#6-order","title":"6. \u0417\u0430\u043a\u0430\u0437 (Order)","text":"<pre><code>class Order(models.Model):\n    STATUS_CHOICES = [\n        ('confirmed', '\u041f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u043e'),\n        ('pending', '\u0412 \u043e\u0436\u0438\u0434\u0430\u043d\u0438\u0438'),\n        ('returned', '\u0412\u043e\u0437\u0432\u0440\u0430\u0442'),\n    ]\n\n    user = models.ForeignKey(User, on_delete=models.CASCADE, related_name=\"orders\")\n    ticket = models.ForeignKey(Ticket, on_delete=models.CASCADE, related_name=\"orders\")\n    quantity = models.PositiveIntegerField()\n    date = models.DateTimeField(auto_now_add=True)\n    total_price = models.DecimalField(max_digits=10, decimal_places=2, default=0)\n    status = models.CharField(max_length=10, choices=STATUS_CHOICES, default='pending')\n</code></pre> <p>\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u0425\u0440\u0430\u043d\u0438\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0437\u0430\u043a\u0430\u0437\u0430\u0445 \u0431\u0438\u043b\u0435\u0442\u043e\u0432. - <code>user</code> \u2014 \u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c. - <code>ticket</code> \u2014 \u0412\u044b\u0431\u0440\u0430\u043d\u043d\u044b\u0439 \u0431\u0438\u043b\u0435\u0442. - <code>quantity</code> \u2014 \u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0431\u0438\u043b\u0435\u0442\u043e\u0432. - <code>date</code> \u2014 \u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430. - <code>total_price</code> \u2014 \u0418\u0442\u043e\u0433\u043e\u0432\u0430\u044f \u0441\u0442\u043e\u0438\u043c\u043e\u0441\u0442\u044c. - <code>status</code> \u2014 \u0421\u0442\u0430\u0442\u0443\u0441 \u0437\u0430\u043a\u0430\u0437\u0430 (<code>confirmed</code>, <code>pending</code>, <code>returned</code>).</p> <p>\u041c\u0435\u0442\u043e\u0434\u044b: - <code>save()</code> \u2014 \u041f\u0435\u0440\u0435\u0441\u0447\u0438\u0442\u044b\u0432\u0430\u0435\u0442 <code>total_price</code> \u043f\u0435\u0440\u0435\u0434 \u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u0438\u0435\u043c.</p>"},{"location":"lr3/models/#7-employee","title":"7. \u0421\u043e\u0442\u0440\u0443\u0434\u043d\u0438\u043a (Employee)","text":"<pre><code>class Employee(models.Model):\n    user = models.OneToOneField(User, on_delete=models.CASCADE, null=True, blank=True, related_name=\"employee\")\n    name = models.CharField(max_length=255)\n    position = models.CharField(max_length=255)\n    salary = models.DecimalField(max_digits=10, decimal_places=2)\n    phone = models.CharField(max_length=20)\n    email = models.EmailField()\n</code></pre> <p>\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u0425\u0440\u0430\u043d\u0438\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0441\u043e\u0442\u0440\u0443\u0434\u043d\u0438\u043a\u0430\u0445 \u043a\u043e\u043d\u0446\u0435\u0440\u0442\u043d\u043e\u0439 \u043f\u043b\u043e\u0449\u0430\u0434\u043a\u0438. - <code>user</code> \u2014 \u041f\u0440\u0438\u0432\u044f\u0437\u043a\u0430 \u043a \u0443\u0447\u0435\u0442\u043d\u043e\u0439 \u0437\u0430\u043f\u0438\u0441\u0438. - <code>name</code> \u2014 \u0418\u043c\u044f \u0441\u043e\u0442\u0440\u0443\u0434\u043d\u0438\u043a\u0430. - <code>position</code> \u2014 \u0414\u043e\u043b\u0436\u043d\u043e\u0441\u0442\u044c. - <code>salary</code> \u2014 \u0417\u0430\u0440\u043f\u043b\u0430\u0442\u0430. - <code>phone</code> \u2014 \u041a\u043e\u043d\u0442\u0430\u043a\u0442\u043d\u044b\u0439 \u0442\u0435\u043b\u0435\u0444\u043e\u043d. - <code>email</code> \u2014 \u041a\u043e\u043d\u0442\u0430\u043a\u0442\u043d\u044b\u0439 email.</p>"},{"location":"lr3/models/#8-organizer","title":"8. \u041e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0442\u043e\u0440 (Organizer)","text":"<pre><code>class Organizer(models.Model):\n    employee = models.ForeignKey(Employee, on_delete=models.CASCADE, related_name=\"organized_concerts\")\n    concert = models.ForeignKey(Concert, on_delete=models.CASCADE, related_name=\"organizers\")\n</code></pre> <p>\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u0421\u0432\u044f\u0437\u044b\u0432\u0430\u0435\u0442 \u0441\u043e\u0442\u0440\u0443\u0434\u043d\u0438\u043a\u043e\u0432-\u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0442\u043e\u0440\u043e\u0432 \u0441 \u043a\u043e\u043d\u0446\u0435\u0440\u0442\u0430\u043c\u0438. - <code>employee</code> \u2014 \u041e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0442\u043e\u0440. - <code>concert</code> \u2014 \u041a\u043e\u043d\u0446\u0435\u0440\u0442.</p>"},{"location":"lr3/overview/","title":"\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 \u21163","text":""},{"location":"lr3/overview/#_1","title":"\u0422\u0435\u043c\u0430","text":"<p>\u0421\u0430\u0439\u0442 \u0434\u043b\u044f \u043a\u043e\u043d\u0446\u0435\u0440\u0442\u043d\u043e\u0439 \u043f\u043b\u043e\u0449\u0430\u0434\u043a\u0438</p>"},{"location":"lr3/overview/#_2","title":"\u0426\u0435\u043b\u044c \u0440\u0430\u0431\u043e\u0442\u044b","text":"<p>\u041e\u0432\u043b\u0430\u0434\u0435\u0442\u044c \u043f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u043c\u0438 \u043d\u0430\u0432\u044b\u043a\u0430\u043c\u0438 \u0438 \u0443\u043c\u0435\u043d\u0438\u044f\u043c\u0438 \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 web-\u0441\u0435\u0440\u0432\u0438\u0441\u043e\u0432 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 Django \u0438 Django REST Framework.</p>"},{"location":"lr3/overview/#_3","title":"\u0417\u0430\u0434\u0430\u0447\u0438","text":"<ol> <li>\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u044c \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 Django ORM (\u0441\u043e\u0433\u043b\u0430\u0441\u043e\u0432\u0430\u0442\u044c \u0441 \u043f\u0440\u0435\u043f\u043e\u0434\u0430\u0432\u0430\u0442\u0435\u043b\u0435\u043c \u043d\u0430 \u043a\u043e\u043d\u0441\u0443\u043b\u044c\u0442\u0430\u0446\u0438\u0438).</li> <li>\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043b\u043e\u0433\u0438\u043a\u0443 \u0440\u0430\u0431\u043e\u0442\u044b API \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 Django REST Framework (\u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u043c\u0435\u0442\u043e\u0434\u044b \u0441\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438).</li> <li>\u041f\u043e\u0434\u043a\u043b\u044e\u0447\u0438\u0442\u044c \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044e /\u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u044e \u043f\u043e \u0442\u043e\u043a\u0435\u043d\u0430\u043c /\u0432\u044b\u0432\u043e\u0434 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u0442\u0435\u043a\u0443\u0449\u0435\u043c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 Djoser.</li> <li>\u0412\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u043f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0443\u044e \u0440\u0430\u0431\u043e\u0442\u0443 3.1 \u043f\u043e \u043e\u0444\u043e\u0440\u043c\u043b\u0435\u043d\u0438\u044e \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438 (\u0432 \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u0435 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438).</li> <li>\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044e, \u043e\u043f\u0438\u0441\u044b\u0432\u0430\u044e\u0449\u0443\u044e \u0440\u0430\u0431\u043e\u0442\u0443 \u0432\u0441\u0435\u0445 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u044b\u0445 endpoint-\u043e\u0432 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 Read the Docs \u0438\u043b\u0438 MkDocs.</li> </ol>"},{"location":"lr3/overview/#_4","title":"\u0417\u0430\u043f\u0443\u0441\u043a \u043f\u0440\u043e\u0435\u043a\u0442\u0430","text":"<pre><code>python manage.py runserver\n</code></pre>"},{"location":"lr3/pr_work/","title":"\u041f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u0437\u0430\u0434\u0430\u043d\u0438\u0435 3.1","text":""},{"location":"lr3/pr_work/#1","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 1","text":"<p>\u041d\u0430\u043f\u0438\u0448\u0438\u0442\u0435 \u0437\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 6-7 \u043d\u043e\u0432\u044b\u0445 \u0430\u0432\u0442\u043e\u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432 \u0438 5-6 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0435\u0439, \u043a\u0430\u0436\u0434\u043e\u043c\u0443 \u0430\u0432\u0442\u043e\u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0443 \u043d\u0430\u0437\u043d\u0430\u0447\u044c\u0442\u0435 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u0435 \u0438 \u043e\u0442 1 \u0434\u043e 3 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0435\u0439. \u0417\u0430\u0434\u0430\u043d\u0438\u0435 \u043c\u043e\u0436\u0435\u0442\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u043b\u0438\u0431\u043e \u0432 \u0438\u043d\u0442\u0435\u0440\u0430\u043a\u0442\u0438\u0432\u043d\u043e\u043c \u0440\u0435\u0436\u0438\u043c\u0435 \u0438\u043d\u0442\u0435\u0440\u043f\u0440\u0435\u0442\u0430\u0442\u043e\u0440\u0430, \u043b\u0438\u0431\u043e \u0432 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u043e\u043c python-\u0444\u0430\u0439\u043b\u0435. \u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u043e\u043c \u0434\u043e\u043b\u0436\u043d\u044b \u0441\u0442\u0430\u0442\u044c \u0437\u0430\u043f\u0440\u043e\u0441\u044b \u0438 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u0441\u043e\u0437\u0434\u0430\u043d\u043d\u044b\u0445 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432. </p> <pre><code>from project_second_app.models import *\ncar = Car.objects.create(state_number='A000AA199', brand='BMW', model='X5')\ncar = Car.objects.create(state_number='A001AA199', brand='BMW', model='X4')\ncar = Car.objects.create(state_number='A000AA198', brand='BMW', model='X5')\ncar = Car.objects.create(state_number='A004AA197', brand='BMW', model='M5')\ncar = Car.objects.create(state_number='A006AA197', brand='Audi', model='A80')\ncar = Car.objects.create(state_number='A007AA197', brand='Audi', model='S6')\nowner = Owner.objects.create(firstName=\"First\", lastName=\"Firstov\")\nowner = Owner.objects.create(firstName=\"Second\", lastName=\"Seconod\")\nowner = Owner.objects.create(firstName=\"Third\", lastName=\"Thirdov\")\nowner = Owner.objects.create(firstName=\"Fourth\", lastName=\"Fourthov\")\nowner = Owner.objects.create(firstName=\"Fith\", lastName=\"Fithov\")\nowner = Owner.objects.create(firstName=\"Sixth\", lastName=\"Sixthov\")\ncar = Car.objects.get(state_number='A000AA199')\nowner = Owner.objects.get(firstName='First')\nownership = Ownership.objects.create(owner_id=owner, car_id=car, date_start='2023-11-06', date_end='2024-03-12')\nowner = Owner.objects.get(firstName='Second')\ncar = Car.objects.get(state_number='A001AA199')\nownership = Ownership.objects.create(owner_id=owner, car_id=car, date_start='2023-12-06', date_end='2024-05-12')\ncar = Car.objects.get(state_number='A000AA198')\nowner = Owner.objects.get(firstName='Third')\nownership = Ownership.objects.create(owner_id=owner, car_id=car, date_start='2024-01-15', date_end='2024-05-12')\ncar = Car.objects.get(state_number='A004AA197')\nowner = Owner.objects.get(firstName='Fourth')\nownership = Ownership.objects.create(owner_id=owner, car_id=car, date_start='2024-03-15', date_end='2024-04-13')\ncar = Car.objects.get(state_number='A006AA197')\nowner = Owner.objects.get(firstName='Fith')\nownership = Ownership.objects.create(owner_id=owner, car_id=car, date_start='2024-01-25')\ncar = Car.objects.get(state_number='A007AA197')\nowner = Owner.objects.get(firstName='Sixth')\nownership = Ownership.objects.create(owner_id=owner, car_id=car, date_start='2024-06-21')\n\nlicense = DriverLicense.objects.create(owner_id=owner, license_number='1111111111', type='b', date_of_issue='2026-12-13')\nowner = Owner.objects.get(firstName='Fith')\nlicense = DriverLicense.objects.create(owner_id=owner, license_number='1111111112', type='b', date_of_issue='2030-05-13')\nowner = Owner.objects.get(firstName='Fourth')\nlicense = DriverLicense.objects.create(owner_id=owner, license_number='1111111113', type='b', date_of_issue='2032-05-13')\nowner = Owner.objects.get(firstName='Third')\nlicense = DriverLicense.objects.create(owner_id=owner, license_number='1111111114', type='b', date_of_issue='2033-02-25')\nowner = Owner.objects.get(firstName='Second')\nlicense = DriverLicense.objects.create(owner_id=owner, license_number='1111111115', type='b', date_of_issue='2025-02-25')\nowner = Owner.objects.get(firstName='First')\nlicense = DriverLicense.objects.create(owner_id=owner, license_number='1111111116', type='b', date_of_issue='2025-02-25')\n</code></pre>"},{"location":"lr3/pr_work/#2","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 2","text":"<p>\u041f\u043e \u0441\u043e\u0437\u0434\u0430\u043d\u043d\u044b\u043c \u0432 \u043f\u0440.1 \u0434\u0430\u043d\u043d\u044b\u043c \u043d\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u044b \u043d\u0430 \u0444\u0438\u043b\u044c\u0442\u0440\u0430\u0446\u0438\u044e:</p> <ul> <li>\u0413\u0434\u0435 \u044d\u0442\u043e \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e, \u0434\u043e\u0431\u0430\u0432\u044c\u0442\u0435 related_name \u043a \u043f\u043e\u043b\u044f\u043c \u043c\u043e\u0434\u0435\u043b\u0438</li> <li>\u0412\u044b\u0432\u0435\u0434\u0435\u0442\u0435 \u0432\u0441\u0435 \u043c\u0430\u0448\u0438\u043d\u044b \u043c\u0430\u0440\u043a\u0438 \u201cToyota\u201d (\u0438\u043b\u0438 \u043b\u044e\u0431\u043e\u0439 \u0434\u0440\u0443\u0433\u043e\u0439 \u043c\u0430\u0440\u043a\u0438, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0443 \u0432\u0430\u0441 \u0435\u0441\u0442\u044c)</li> <li>\u041d\u0430\u0439\u0442\u0438 \u0432\u0441\u0435\u0445 \u0432\u043e\u0434\u0438\u0442\u0435\u043b\u0435\u0439 \u0441 \u0438\u043c\u0435\u043d\u0435\u043c \u201c\u041e\u043b\u0435\u0433\u201d (\u0438\u043b\u0438 \u043b\u044e\u0431\u044b\u043c \u0434\u0440\u0443\u0433\u0438\u043c \u0438\u043c\u0435\u043d\u0435\u043c \u043d\u0430 \u0432\u0430\u0448\u0435 \u0443\u0441\u043c\u043e\u0442\u0440\u0435\u043d\u0438\u0435)</li> <li>\u0412\u0437\u044f\u0432 \u043b\u044e\u0431\u043e\u0433\u043e \u0441\u043b\u0443\u0447\u0430\u0439\u043d\u043e\u0433\u043e \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0430 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0435\u0433\u043e id, \u0438 \u043f\u043e \u044d\u0442\u043e\u043c\u0443 id \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u044f \u0432 \u0432\u0438\u0434\u0435 \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u043c\u043e\u0434\u0435\u043b\u0438 (\u043c\u043e\u0436\u043d\u043e \u0432 2 \u0437\u0430\u043f\u0440\u043e\u0441\u0430)</li> <li>\u0412\u044b\u0432\u0435\u0441\u0442\u0438 \u0432\u0441\u0435\u0445 \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432 \u043a\u0440\u0430\u0441\u043d\u044b\u0445 \u043c\u0430\u0448\u0438\u043d (\u0438\u043b\u0438 \u043b\u044e\u0431\u043e\u0433\u043e \u0434\u0440\u0443\u0433\u043e\u0433\u043e \u0446\u0432\u0435\u0442\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0443 \u0432\u0430\u0441 \u043f\u0440\u0438\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442)</li> <li>\u041d\u0430\u0439\u0442\u0438 \u0432\u0441\u0435\u0445 \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432, \u0447\u0435\u0439 \u0433\u043e\u0434 \u0432\u043b\u0430\u0434\u0435\u043d\u0438\u044f \u043c\u0430\u0448\u0438\u043d\u043e\u0439 \u043d\u0430\u0447\u0438\u043d\u0430\u0435\u0442\u0441\u044f \u0441 2010 (\u0438\u043b\u0438 \u043b\u044e\u0431\u043e\u0439 \u0434\u0440\u0443\u0433\u043e\u0439 \u0433\u043e\u0434, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u0440\u0438\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u0443 \u0432\u0430\u0441 \u0432 \u0431\u0430\u0437\u0435)</li> </ul> <pre><code>Car.objects.filter(brand='BMW')\nOwner.objects.filter(firstName='First')\nowner_id = Owner.objects.get(firstName='First').id\nlicense = DriverLicense.objects.get(owner_id=1)\nowners = Owner.objects.filter(car_)\nowners = Owner.objects.filter(owner_car__car__color__contains='Red')\nowners = Owner.objects.filter(owner_car__date_start__contains='2024')\n</code></pre>"},{"location":"lr3/pr_work/#3","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 3","text":"<ul> <li>\u0412\u044b\u0432\u043e\u0434 \u0434\u0430\u0442\u044b \u0432\u044b\u0434\u0430\u0447\u0438 \u0441\u0430\u043c\u043e\u0433\u043e \u0441\u0442\u0430\u0440\u0448\u0435\u0433\u043e \u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0433\u043e \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u044f</li> <li>\u0423\u043a\u0430\u0436\u0438\u0442\u0435 \u0441\u0430\u043c\u0443\u044e \u043f\u043e\u0437\u0434\u043d\u044e\u044e \u0434\u0430\u0442\u0443 \u0432\u043b\u0430\u0434\u0435\u043d\u0438\u044f \u043c\u0430\u0448\u0438\u043d\u043e\u0439, \u0438\u043c\u0435\u044e\u0449\u0443\u044e \u043a\u0430\u043a\u0443\u044e-\u0442\u043e \u0438\u0437 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0445 \u043c\u043e\u0434\u0435\u043b\u0435\u0439 \u0432 \u0432\u0430\u0448\u0435\u0439 \u0431\u0430\u0437\u0435</li> <li>\u0412\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043c\u0430\u0448\u0438\u043d \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044f</li> <li>\u041f\u043e\u0434\u0441\u0447\u0438\u0442\u0430\u0439\u0442\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043c\u0430\u0448\u0438\u043d \u043a\u0430\u0436\u0434\u043e\u0439 \u043c\u0430\u0440\u043a\u0438</li> <li>\u041e\u0442\u0441\u043e\u0440\u0442\u0438\u0440\u0443\u0439\u0442\u0435 \u0432\u0441\u0435\u0445 \u0430\u0432\u0442\u043e\u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432 \u043f\u043e \u0434\u0430\u0442\u0435 \u0432\u044b\u0434\u0430\u0447\u0438 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u044f </li> </ul> <pre><code>DriverLicense.objects.aggregate(Min(\"date_of_issue\"))\nOwnership.objects.aggregate(Max(\"date_start\"))\nOwnership.objects.values(\"owner\").annotate(Count(\"id\"))\nCar.objects.values(\"brand\").annotate(Count(\"id\"))\nfrom django.db.models import F\nOwner.objects.annotate(issue_date=F('driverlicense__date_of_issue')).distinct().order_by('issue_date')\n</code></pre>"},{"location":"lr3/pr_work/#32","title":"\u041f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u0437\u0430\u0434\u0430\u043d\u0438\u0435 3.2","text":""},{"location":"lr3/pr_work/#1_1","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 1","text":"<p>\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0435\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u044b \u0434\u043b\u044f \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0438 \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440\u0430 \u0441\u043a\u0438\u043b\u043e\u0432 \u043c\u0435\u0442\u043e\u0434\u043e\u043c, \u043e\u043f\u0438\u0441\u0430\u043d\u043d\u044b\u043c \u0432 \u043f\u0443\u043d\u043a\u0442\u0435 \u0432\u044b\u0448\u0435.</p>"},{"location":"lr3/pr_work/#serializerspy","title":"serializers.py:","text":"<pre><code>class SkillSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Skill\n        fields = \"__all__\"\n</code></pre>"},{"location":"lr3/pr_work/#viewspy","title":"views.py:","text":"<pre><code>class SkillAPIView(APIView):\n   def get(self, request):\n       skills = Skill.objects.all()\n       serializer = SkillSerializer(skills, many=True)\n       return Response({\"Skills\": serializer.data})\n\nclass SkillCreateSerializer(serializers.Serializer):\n    title = serializers.CharField(max_length=120)\n\n    def create(self, validated_data):\n        skill_model_inst = Skill(**validated_data)\n        skill_model_inst.save()\n        return skill_model_inst\n\n    def update(self, instance, validated_data):\n        pass\n</code></pre>"},{"location":"lr3/pr_work/#2_1","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 2","text":"<p>\u0412\u044b\u0432\u043e\u0434 \u043f\u043e\u043b\u043d\u043e\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u0432\u0441\u0435\u0445 \u0432\u043e\u0439\u043d\u0430\u0445 \u0438 \u0438\u0445 \u043f\u0440\u043e\u0444\u0435\u0441\u0441\u0438\u044f\u0445 (\u0432 \u043e\u0434\u043d\u043e\u043c \u0437\u0430\u043f\u0440\u043e\u0441\u0435).</p>"},{"location":"lr3/pr_work/#serializerspy_1","title":"serializers.py:","text":"<pre><code>class WarriorProfessionSerializer(serializers.ModelSerializer):\n    profession = ProfessionSerializer(many=False)\n    class Meta:\n        model = Warrior\n        fields = [\"id\", \"race\", \"name\", \"level\", \"profession\"]\n</code></pre>"},{"location":"lr3/pr_work/#viewspy_1","title":"views.py:","text":"<pre><code>class WarriorProfessionListAPIView(generics.ListAPIView):\n    serializer_class = WarriorProfessionSerializer\n    queryset = Warrior.objects.all()\n</code></pre> <p>\u0412\u044b\u0432\u043e\u0434 \u043f\u043e\u043b\u043d\u043e\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u0432\u0441\u0435\u0445 \u0432\u043e\u0439\u043d\u0430\u0445 \u0438 \u0438\u0445 \u0441\u043a\u0438\u043b\u0430\u0445 (\u0432 \u043e\u0434\u043d\u043e\u043c \u0437\u0430\u043f\u0440\u043e\u0441\u0435).</p>"},{"location":"lr3/pr_work/#serializerspy_2","title":"serializers.py:","text":"<pre><code>class WarriorSkillSerializer(serializers.ModelSerializer):\n    skill = SkillSerializer(many=True)\n\n    class Meta:\n        model = Warrior\n        fields = [\"id\", \"race\", \"name\", \"level\", \"skill\"]\n</code></pre>"},{"location":"lr3/pr_work/#viewspy_2","title":"views.py:","text":"<pre><code>class WarriorSkillListApiView(generics.ListAPIView):\n    serializer_class = WarriorSkillSerializer\n    queryset = Warrior.objects.all()\n</code></pre> <p>\u0412\u044b\u0432\u043e\u0434 \u043f\u043e\u043b\u043d\u043e\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u0432\u043e\u0439\u043d\u0435 (\u043f\u043e id), \u0435\u0433\u043e \u043f\u0440\u043e\u0444\u0435\u0441\u0441\u0438\u044f\u0445 \u0438 \u0441\u043a\u0438\u043b\u0430\u0445.</p>"},{"location":"lr3/pr_work/#serializerspy_3","title":"serializers.py:","text":"<pre><code>class OneWarriorSerializer(serializers.ModelSerializer,):\n    skill = SkillSerializer(many=True)\n    profession = ProfessionSerializer(many=False)\n\n    class Meta:\n        model = Warrior\n        fields = \"__all__\"\n</code></pre>"},{"location":"lr3/pr_work/#viewspy_3","title":"views.py:","text":"<pre><code>class ShowWarriorAPIView(generics.RetrieveAPIView):\n    serializer_class = OneWarriorSerializer\n    queryset = Warrior.objects.all()\n</code></pre> <p>\u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0432\u043e\u0439\u043d\u0430 \u043f\u043e id.</p>"},{"location":"lr3/pr_work/#viewspy_4","title":"views.py:","text":"<pre><code>class DeleteWarriorAPIView(generics.DestroyAPIView):\n    serializer_class = OneWarriorSerializer\n    queryset = Warrior.objects.all()\n</code></pre> <p>\u0420\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u0432\u043e\u0439\u043d\u0435.</p>"},{"location":"lr3/pr_work/#viewspy_5","title":"views.py:","text":"<pre><code>class UpdateWarriorAPIView(UpdateAPIView):\n    serializer_class = OneWarriorSerializer\n    queryset = Warrior.objects.all()\n</code></pre>"},{"location":"lr3/serializers/","title":"\u0421\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u0430\u0442\u043e\u0440\u044b","text":""},{"location":"lr3/serializers/#_2","title":"\u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0438","text":""},{"location":"lr3/serializers/#userregistrationserializer","title":"UserRegistrationSerializer","text":"<pre><code>class UserRegistrationSerializer(serializers.Serializer):\n    username = serializers.CharField(max_length=255)\n    email = serializers.EmailField(required=False)\n    password = serializers.CharField(write_only=True)\n</code></pre> <ul> <li>\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.</li> <li>\u041f\u043e\u043b\u044f: username, email (\u043d\u0435\u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0435), password (\u0441\u043a\u0440\u044b\u0442\u043e\u0435 \u043f\u043e\u043b\u0435).</li> </ul>"},{"location":"lr3/serializers/#userloginserializer","title":"UserLoginSerializer","text":"<pre><code>class UserLoginSerializer(serializers.Serializer):\n    username = serializers.CharField(max_length=255)\n    password = serializers.CharField(write_only=True)\n</code></pre> <ul> <li>\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.</li> <li>\u041f\u043e\u043b\u044f: username, password (\u0441\u043a\u0440\u044b\u0442\u043e\u0435 \u043f\u043e\u043b\u0435).</li> </ul>"},{"location":"lr3/serializers/#_3","title":"\u041a\u043e\u043d\u0446\u0435\u0440\u0442\u044b","text":""},{"location":"lr3/serializers/#concertserializer","title":"ConcertSerializer","text":"<pre><code>class ConcertSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Concert\n        fields = ['title', 'performer', 'description', 'date', 'age_limit']\n</code></pre> <ul> <li>\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0438 \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f \u043a\u043e\u043d\u0446\u0435\u0440\u0442\u043e\u0432.</li> <li>\u041f\u043e\u043b\u044f: \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435, \u0438\u0441\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c, \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435, \u0434\u0430\u0442\u0430, \u0432\u043e\u0437\u0440\u0430\u0441\u0442\u043d\u043e\u0435 \u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u0435.</li> </ul>"},{"location":"lr3/serializers/#concertlistserializer","title":"ConcertListSerializer","text":"<pre><code>class ConcertListSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Concert\n        fields = ['id', 'title', 'date']\n</code></pre> <ul> <li>\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u0441\u043f\u0438\u0441\u043a\u0430 \u043a\u043e\u043d\u0446\u0435\u0440\u0442\u043e\u0432.</li> <li>\u041f\u043e\u043b\u044f: ID, \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435, \u0434\u0430\u0442\u0430.</li> </ul>"},{"location":"lr3/serializers/#concertdetailserializer","title":"ConcertDetailSerializer","text":"<pre><code>class ConcertDetailSerializer(serializers.ModelSerializer):\n    tickets = serializers.SerializerMethodField()\n\n    class Meta:\n        model = Concert\n        fields = ['id', 'title', 'description', 'date', 'age_limit', 'status', 'performer', 'tickets']\n\n    def get_tickets(self, obj):\n        return TicketDetailSerializer(obj.ticket_categories.all(), many=True).data\n</code></pre> <ul> <li>\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u0434\u0435\u0442\u0430\u043b\u044c\u043d\u043e\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u043a\u043e\u043d\u0446\u0435\u0440\u0442\u0435.</li> <li>\u0412\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u0441\u0432\u044f\u0437\u0430\u043d\u043d\u044b\u0435 \u0431\u0438\u043b\u0435\u0442\u044b.</li> </ul>"},{"location":"lr3/serializers/#_4","title":"\u0411\u0438\u043b\u0435\u0442\u044b","text":""},{"location":"lr3/serializers/#ticketserializer","title":"TicketSerializer","text":"<pre><code>class TicketSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Ticket\n        fields = ['name', 'price', 'total_quantity', 'concert']\n</code></pre> <ul> <li>\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0438 \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f \u0431\u0438\u043b\u0435\u0442\u043e\u0432.</li> <li>\u041f\u043e\u043b\u044f: \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435, \u0446\u0435\u043d\u0430, \u043e\u0431\u0449\u0435\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e, \u0441\u0432\u044f\u0437\u0430\u043d\u043d\u044b\u0439 \u043a\u043e\u043d\u0446\u0435\u0440\u0442.</li> </ul>"},{"location":"lr3/serializers/#ticketdetailserializer","title":"TicketDetailSerializer","text":"<pre><code>class TicketDetailSerializer(serializers.ModelSerializer):\n    available_quantity = serializers.SerializerMethodField()\n\n    class Meta:\n        model = Ticket\n        fields = ['id', 'name', 'price', 'total_quantity', 'sold_quantity', 'available_quantity']\n\n    def get_available_quantity(self, obj):\n        return obj.total_quantity - obj.sold_quantity\n</code></pre> <ul> <li>\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440\u0430 \u0431\u0438\u043b\u0435\u0442\u043e\u0432.</li> <li>\u0420\u0430\u0441\u0441\u0447\u0438\u0442\u044b\u0432\u0430\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0431\u0438\u043b\u0435\u0442\u043e\u0432.</li> </ul>"},{"location":"lr3/serializers/#ticketcreateserializer","title":"TicketCreateSerializer","text":"<pre><code>class TicketCreateSerializer(serializers.Serializer):\n    name = serializers.CharField(max_length=255)\n    price = serializers.DecimalField(max_digits=10, decimal_places=2)\n    quantity = serializers.IntegerField()\n</code></pre> <ul> <li>\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0431\u0438\u043b\u0435\u0442\u043e\u0432.</li> <li>\u041f\u043e\u043b\u044f: \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435, \u0446\u0435\u043d\u0430, \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e.</li> </ul>"},{"location":"lr3/serializers/#ticketorderserializer","title":"TicketOrderSerializer","text":"<pre><code>class TicketOrderSerializer(serializers.ModelSerializer):\n    concert = ConcertSerializer(read_only=True)\n\n    class Meta:\n        model = Ticket\n        fields = ['name', 'price', 'concert']\n</code></pre> <ul> <li>\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u0437\u0430\u043a\u0430\u0437\u0435 \u0431\u0438\u043b\u0435\u0442\u0430.</li> <li>\u0412\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u0441\u0432\u044f\u0437\u0430\u043d\u043d\u044b\u0435 \u043a\u043e\u043d\u0446\u0435\u0440\u0442\u044b.</li> </ul>"},{"location":"lr3/serializers/#_5","title":"\u0417\u0430\u043a\u0430\u0437\u044b","text":""},{"location":"lr3/serializers/#orderserializer","title":"OrderSerializer","text":"<pre><code>class OrderSerializer(serializers.ModelSerializer):\n    ticket = TicketOrderSerializer()\n\n    class Meta:\n        model = Order\n        fields = ['ticket', 'quantity', 'date', 'total_price', 'status']\n</code></pre> <ul> <li>\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440\u0430 \u0437\u0430\u043a\u0430\u0437\u043e\u0432.</li> <li>\u0412\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0431\u0438\u043b\u0435\u0442\u0435 \u0438 \u0441\u0442\u0430\u0442\u0443\u0441\u0435 \u0437\u0430\u043a\u0430\u0437\u0430.</li> </ul>"},{"location":"lr3/serializers/#ordercreationserializer","title":"OrderCreationSerializer","text":"<pre><code>class OrderCreationSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Order\n        fields = ['ticket', 'quantity']\n\n    def create(self, validated_data):\n        ticket = validated_data['ticket']\n        quantity = validated_data['quantity']\n\n        if ticket.available_quantity &lt; quantity:\n            raise serializers.ValidationError({\"error\": \"\u041d\u0435\u0434\u043e\u0441\u0442\u0430\u0442\u043e\u0447\u043d\u043e \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0445 \u0431\u0438\u043b\u0435\u0442\u043e\u0432\"})\n\n        ticket.sell_tickets(quantity)\n        order = Order.objects.create(**validated_data)\n        return order\n</code></pre> <ul> <li>\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430.</li> <li>\u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u043d\u0430\u043b\u0438\u0447\u0438\u0435 \u0431\u0438\u043b\u0435\u0442\u043e\u0432 \u043f\u0435\u0440\u0435\u0434 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435\u043c \u0437\u0430\u043a\u0430\u0437\u0430.</li> </ul>"},{"location":"lr3/serializers/#_6","title":"\u041e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0442\u043e\u0440\u044b","text":""},{"location":"lr3/serializers/#organizerserializer","title":"OrganizerSerializer","text":"<pre><code>class OrganizerSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Organizer\n        fields = '__all__'\n</code></pre> <ul> <li>\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u0441\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0442\u043e\u0440\u043e\u0432 \u043a\u043e\u043d\u0446\u0435\u0440\u0442\u043e\u0432.</li> <li>\u0412\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u0432\u0441\u0435 \u043f\u043e\u043b\u044f \u043c\u043e\u0434\u0435\u043b\u0438.</li> </ul>"},{"location":"lr3/serializers/#_7","title":"\u041e\u0431\u043e\u0440\u0443\u0434\u043e\u0432\u0430\u043d\u0438\u0435","text":""},{"location":"lr3/serializers/#equipmentserializer","title":"EquipmentSerializer","text":"<pre><code>class EquipmentSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Equipment\n        fields = ['name']\n</code></pre> <ul> <li>\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u0441\u043f\u0438\u0441\u043a\u0430 \u043e\u0431\u043e\u0440\u0443\u0434\u043e\u0432\u0430\u043d\u0438\u044f.</li> <li>\u041f\u043e\u043b\u044f: \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043e\u0431\u043e\u0440\u0443\u0434\u043e\u0432\u0430\u043d\u0438\u044f.</li> </ul>"},{"location":"lr3/serializers/#concertequipmentserializer","title":"ConcertEquipmentSerializer","text":"<pre><code>class ConcertEquipmentSerializer(serializers.ModelSerializer):\n    equipment = EquipmentSerializer()\n\n    class Meta:\n        model = ConcertEquipment\n        fields = ['concert', 'equipment', 'quantity']\n</code></pre> <ul> <li>\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u043e\u0431\u043e\u0440\u0443\u0434\u043e\u0432\u0430\u043d\u0438\u044f, \u0441\u0432\u044f\u0437\u0430\u043d\u043d\u043e\u0433\u043e \u0441 \u043a\u043e\u043d\u0446\u0435\u0440\u0442\u043e\u043c.</li> <li>\u0412\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u043a\u043e\u043d\u0446\u0435\u0440\u0442\u0435 \u0438 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0435 \u043e\u0431\u043e\u0440\u0443\u0434\u043e\u0432\u0430\u043d\u0438\u044f.</li> </ul>"},{"location":"lr3/serializers/#concertequipmentcreationserializer","title":"ConcertEquipmentCreationSerializer","text":"<pre><code>class ConcertEquipmentCreationSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = ConcertEquipment\n        fields = ['concert', 'equipment', 'quantity']\n</code></pre> <ul> <li>\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043e\u0431\u043e\u0440\u0443\u0434\u043e\u0432\u0430\u043d\u0438\u044f \u043a \u043a\u043e\u043d\u0446\u0435\u0440\u0442\u0443.</li> <li>\u041f\u043e\u043b\u044f: \u043a\u043e\u043d\u0446\u0435\u0440\u0442, \u043e\u0431\u043e\u0440\u0443\u0434\u043e\u0432\u0430\u043d\u0438\u0435, \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e.</li> </ul>"},{"location":"lr3/urls/","title":"\u041c\u0430\u0440\u0448\u0440\u0443\u0442\u044b","text":"<pre><code>from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    # \u0410\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044f\n    path('auth/register/', views.register_user, name='register'),\n    path('auth/login/', views.login_user, name='login'),\n    path('auth/logout/', views.logout_user, name='logout'),\n\n    # \u041a\u043e\u043d\u0446\u0435\u0440\u0442\u044b\n    path('concerts/', views.concert_list, name='concert-list'),\n    path('concerts/', views.create_concert, name='create_concert'),\n    path('concerts/&lt;int:pk&gt;/', views.concert_detail, name='concert-detail'),\n    path('concerts/&lt;int:pk&gt;/', views.update_concert, name='update_concert'),\n    path('concerts/&lt;int:pk&gt;/delete/', views.delete_concert, name='delete_concert'),\n\n    # \u041e\u0431\u043e\u0440\u0443\u0434\u043e\u0432\u0430\u043d\u0438\u0435 \u0434\u043b\u044f \u043a\u043e\u043d\u0446\u0435\u0440\u0442\u043e\u0432\n    path('concerts/equipment/', views.add_equipment_to_concert, name='add_equipment_to_concert'),\n    path('concerts/&lt;int:concert_id&gt;/equipment/', views.get_equipment_for_concert, name='get_equipment_for_concert'),\n    path('concerts/equipment/&lt;int:pk&gt;/remove/', views.remove_equipment_from_concert, name='remove_equipment_from_concert'),\n    path('concerts/equipment/&lt;int:pk&gt;/update/', views.update_equipment_for_concert, name='update_equipment_for_concert'),\n\n    # \u0411\u0438\u043b\u0435\u0442\u044b\n    path('tickets/', views.ticket_list_create, name='ticket-list-create'),\n    path('tickets/&lt;int:pk&gt;/', views.ticket_detail, name='ticket-detail'),\n\n    # \u0417\u0430\u043a\u0430\u0437\u044b\n    path('orders/', views.order_list_create, name='order-list-create'),\n    path('orders/&lt;int:pk&gt;/', views.get_order, name='get_order'),\n    path('orders/&lt;int:pk&gt;/confirm/', views.confirm_order, name='confirm-order'),\n\n    # \u041e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0442\u043e\u0440\u044b\n    path(\"organizer/assign/&lt;int:pk&gt;/\", views.assign_concert, name=\"assign_concert\"),\n    path(\"organizer/concerts/\", views.get_organizer_concerts, name=\"organizer-concerts\"),\n]\n</code></pre>"},{"location":"lr3/urls/#_2","title":"\u0410\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044f","text":"<ul> <li>auth/register/ \u2013 \u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.</li> <li>auth/login/ \u2013 \u0412\u0445\u043e\u0434 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.</li> <li>auth/logout/ \u2013 \u0412\u044b\u0445\u043e\u0434 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.</li> </ul>"},{"location":"lr3/urls/#_3","title":"\u041a\u043e\u043d\u0446\u0435\u0440\u0442\u044b","text":"<ul> <li>concerts/ \u2013 \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u043f\u0438\u0441\u043a\u0430 \u043a\u043e\u043d\u0446\u0435\u0440\u0442\u043e\u0432.</li> <li>concerts/ \u2013 \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u0433\u043e \u043a\u043e\u043d\u0446\u0435\u0440\u0442\u0430.</li> <li>concerts// \u2013 \u041f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u0434\u0435\u0442\u0430\u043b\u0435\u0439 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0433\u043e \u043a\u043e\u043d\u0446\u0435\u0440\u0442\u0430. <li>concerts// \u2013 \u041e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 \u043a\u043e\u043d\u0446\u0435\u0440\u0442\u0430. <li>concerts//delete/ \u2013 \u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u043a\u043e\u043d\u0446\u0435\u0440\u0442\u0430."},{"location":"lr3/urls/#_4","title":"\u041e\u0431\u043e\u0440\u0443\u0434\u043e\u0432\u0430\u043d\u0438\u0435 \u0434\u043b\u044f \u043a\u043e\u043d\u0446\u0435\u0440\u0442\u043e\u0432","text":"<ul> <li>concerts/equipment/ \u2013 \u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043e\u0431\u043e\u0440\u0443\u0434\u043e\u0432\u0430\u043d\u0438\u044f \u043a \u043a\u043e\u043d\u0446\u0435\u0440\u0442\u0443.</li> <li>concerts//equipment/ \u2013 \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u043f\u0438\u0441\u043a\u0430 \u043e\u0431\u043e\u0440\u0443\u0434\u043e\u0432\u0430\u043d\u0438\u044f \u0434\u043b\u044f \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0433\u043e \u043a\u043e\u043d\u0446\u0435\u0440\u0442\u0430. <li>concerts/equipment//remove/ \u2013 \u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u043e\u0431\u043e\u0440\u0443\u0434\u043e\u0432\u0430\u043d\u0438\u044f \u0438\u0437 \u043a\u043e\u043d\u0446\u0435\u0440\u0442\u0430. <li>concerts/equipment//update/ \u2013 \u041e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 \u043e\u0431 \u043e\u0431\u043e\u0440\u0443\u0434\u043e\u0432\u0430\u043d\u0438\u0438 \u0434\u043b\u044f \u043a\u043e\u043d\u0446\u0435\u0440\u0442\u0430."},{"location":"lr3/urls/#_5","title":"\u0411\u0438\u043b\u0435\u0442\u044b","text":"<ul> <li>tickets/ \u2013 \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u043f\u0438\u0441\u043a\u0430 \u0431\u0438\u043b\u0435\u0442\u043e\u0432 / \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u0433\u043e \u0431\u0438\u043b\u0435\u0442\u0430.</li> <li>tickets// \u2013 \u041f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u0434\u0435\u0442\u0430\u043b\u0435\u0439 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0433\u043e \u0431\u0438\u043b\u0435\u0442\u0430."},{"location":"lr3/urls/#_6","title":"\u0417\u0430\u043a\u0430\u0437\u044b","text":"<ul> <li>orders/ \u2013 \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u043f\u0438\u0441\u043a\u0430 \u0437\u0430\u043a\u0430\u0437\u043e\u0432 / \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u0433\u043e \u0437\u0430\u043a\u0430\u0437\u0430.</li> <li>orders// \u2013 \u041f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u0434\u0435\u0442\u0430\u043b\u0435\u0439 \u0437\u0430\u043a\u0430\u0437\u0430. <li>orders//confirm/ \u2013 \u041f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u0438\u0435 \u0437\u0430\u043a\u0430\u0437\u0430."},{"location":"lr3/urls/#_7","title":"\u041e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0442\u043e\u0440\u044b","text":"<ul> <li>organizer/assign// \u2013 \u041d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0442\u043e\u0440\u0430 \u043d\u0430 \u043a\u043e\u043d\u0446\u0435\u0440\u0442. <li>organizer/concerts/ \u2013 \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u043f\u0438\u0441\u043a\u0430 \u043a\u043e\u043d\u0446\u0435\u0440\u0442\u043e\u0432, \u0437\u0430\u043a\u0440\u0435\u043f\u043b\u0435\u043d\u043d\u044b\u0445 \u0437\u0430 \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0442\u043e\u0440\u043e\u043c.</li>"},{"location":"lr3/views/","title":"API Endpoints Documentation","text":""},{"location":"lr3/views/#_1","title":"\u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f","text":"<p>POST <code>/register_user/</code> - Summary: \u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f - Description: \u042d\u0442\u043e\u0442 \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u043d\u043e\u0432\u043e\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0432 \u0441\u0438\u0441\u0442\u0435\u043c\u0435, \u043e\u0442\u043f\u0440\u0430\u0432\u0438\u0432 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 <code>UserRegistrationSerializer</code>. - Request Body: <code>UserRegistrationSerializer</code> - Responses:   - <code>201</code>: \u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u043d   - <code>400</code>: \u041e\u0448\u0438\u0431\u043a\u0438 \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u0438   - </p> <pre><code>@swagger_auto_schema(\n    method=\"post\",\n    operation_summary=\"\u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\",\n    request_body=UserRegistrationSerializer,\n    responses={201: \"\u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u043d\", 400: \"\u041e\u0448\u0438\u0431\u043a\u0438 \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u0438\"},\n)\n@api_view([\"POST\"])\n@permission_classes([AllowAny])\ndef register_user(request):\n    serializer = UserRegistrationSerializer(data=request.data)\n    if serializer.is_valid():\n        if User.objects.filter(username=serializer.validated_data[\"username\"]).exists():\n            return Response({\"error\": \"\u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0441 \u0442\u0430\u043a\u0438\u043c \u0438\u043c\u0435\u043d\u0435\u043c \u0443\u0436\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442\"}, status=status.HTTP_400_BAD_REQUEST)\n\n        User.objects.create_user(**serializer.validated_data)\n        return Response({\"message\": \"\u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u043d\"}, status=status.HTTP_201_CREATED)\n\n    return Response(serializer.errors, status=status.HTTP_400_BAD_REQUEST)\n</code></pre>"},{"location":"lr3/views/#_2","title":"\u0412\u0445\u043e\u0434 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f","text":"<p>POST <code>/login_user/</code> - Summary: \u0412\u0445\u043e\u0434 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f - Description: \u042d\u0442\u043e\u0442 \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044e \u0432\u043e\u0439\u0442\u0438 \u0432 \u0441\u0438\u0441\u0442\u0435\u043c\u0443, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u0441\u0432\u043e\u0438 \u0443\u0447\u0435\u0442\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435. - Request Body: <code>UserLoginSerializer</code> - Responses:   - <code>200</code>: \u0423\u0441\u043f\u0435\u0448\u043d\u044b\u0439 \u0432\u0445\u043e\u0434   - <code>400</code>: \u041e\u0448\u0438\u0431\u043a\u0438 \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u0438   - <code>401</code>: \u041d\u0435\u0432\u0435\u0440\u043d\u044b\u0435 \u0443\u0447\u0435\u0442\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435   - </p> <pre><code>@swagger_auto_schema(\n    method=\"post\",\n    operation_summary=\"\u0412\u0445\u043e\u0434 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\",\n    request_body=UserLoginSerializer,\n    responses={200: \"\u0423\u0441\u043f\u0435\u0448\u043d\u044b\u0439 \u0432\u0445\u043e\u0434\", 400: \"\u041e\u0448\u0438\u0431\u043a\u0438 \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u0438\", 401: \"\u041d\u0435\u0432\u0435\u0440\u043d\u044b\u0435 \u0443\u0447\u0435\u0442\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435\"},\n)\n@api_view([\"POST\"])\n@permission_classes([AllowAny])\ndef login_user(request):\n    user = authenticate(username=request.data.get(\"username\"), password=request.data.get(\"password\"))\n    if user:\n        refresh = RefreshToken.for_user(user)\n        return Response({\"refresh\": str(refresh), \"access\": str(refresh.access_token)}, status=status.HTTP_200_OK)\n    return Response({\"error\": \"\u041d\u0435\u0432\u0435\u0440\u043d\u043e\u0435 \u0438\u043c\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0438\u043b\u0438 \u043f\u0430\u0440\u043e\u043b\u044c\"}, status=status.HTTP_401_UNAUTHORIZED)\n</code></pre>"},{"location":"lr3/views/#_3","title":"\u0412\u044b\u0445\u043e\u0434 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f","text":"<p>POST <code>/logout_user/</code> - Summary: \u0412\u044b\u0445\u043e\u0434 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f - Description: \u042d\u0442\u043e\u0442 \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044e \u0432\u044b\u0439\u0442\u0438 \u0438\u0437 \u0441\u0438\u0441\u0442\u0435\u043c\u044b. - Responses:   - <code>200</code>: \u0412\u044b\u0445\u043e\u0434 \u0443\u0441\u043f\u0435\u0448\u0435\u043d</p> <pre><code>@swagger_auto_schema(\n    method=\"post\",\n    operation_summary=\"\u0412\u044b\u0445\u043e\u0434 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\",\n    responses={200: \"\u0412\u044b\u0445\u043e\u0434 \u0443\u0441\u043f\u0435\u0448\u0435\u043d\"},\n)\n@api_view([\"POST\"])\n@permission_classes([IsAuthenticated])\ndef logout_user(request):\n    request.auth.delete()\n    return Response({\"message\": \"\u0412\u044b \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0432\u044b\u0448\u043b\u0438\"}, status=status.HTTP_200_OK)\n</code></pre>"},{"location":"lr3/views/#_4","title":"\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u043a\u043e\u043d\u0446\u0435\u0440\u0442\u043e\u0432","text":"<p>GET <code>/concert_list/</code> - Summary: \u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u043a\u043e\u043d\u0446\u0435\u0440\u0442\u043e\u0432 - Description: \u042d\u0442\u043e\u0442 \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u043f\u0438\u0441\u043e\u043a \u0432\u0441\u0435\u0445 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0445 \u043a\u043e\u043d\u0446\u0435\u0440\u0442\u043e\u0432. - Responses:   - <code>200</code>: <code>ConcertSerializer(many=True)</code></p> <pre><code>@swagger_auto_schema(\n    method=\"get\",\n    operation_summary=\"\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u043a\u043e\u043d\u0446\u0435\u0440\u0442\u043e\u0432\",\n    responses={200: ConcertSerializer(many=True)}\n)\n@api_view([\"GET\"])\n@permission_classes([AllowAny])\ndef concert_list(request):\n    concerts = Concert.objects.all()\n    serializer = ConcertSerializer(concerts, many=True)\n    return Response(serializer.data, status=status.HTTP_200_OK)\n</code></pre>"},{"location":"lr3/views/#_5","title":"\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u043a\u043e\u043d\u0446\u0435\u0440\u0442\u0435","text":"<p>GET <code>/concert_detail/&lt;pk&gt;/</code> - Summary: \u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u043a\u043e\u043d\u0446\u0435\u0440\u0442\u0435 - Description: \u042d\u0442\u043e\u0442 \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442 \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u0443\u044e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u043c \u043a\u043e\u043d\u0446\u0435\u0440\u0442\u0435 \u043f\u043e \u0435\u0433\u043e \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440\u0443. - Responses:   - <code>200</code>: <code>ConcertDetailSerializer</code>   - <code>404</code>: \u041a\u043e\u043d\u0446\u0435\u0440\u0442 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d</p> <pre><code>@swagger_auto_schema(\n    method=\"get\",\n    operation_summary=\"\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u043a\u043e\u043d\u0446\u0435\u0440\u0442\u0435\",\n    responses={200: ConcertDetailSerializer, 404: \"\u041a\u043e\u043d\u0446\u0435\u0440\u0442 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\"}\n)\n@api_view([\"GET\"])\n@permission_classes([AllowAny])\ndef concert_detail(request, pk):\n    try:\n        concert = Concert.objects.get(pk=pk)\n    except Concert.DoesNotExist:\n        return Response({\"error\": \"\u041a\u043e\u043d\u0446\u0435\u0440\u0442 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\"}, status=status.HTTP_404_NOT_FOUND)\n\n    serializer = ConcertDetailSerializer(concert)\n    return Response(serializer.data, status=status.HTTP_200_OK)\n</code></pre>"},{"location":"lr3/views/#_6","title":"\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0431\u0438\u043b\u0435\u0442\u0430","text":"<p>POST <code>/ticket_list_create/</code> - Summary: \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0431\u0438\u043b\u0435\u0442\u0430 - Description: \u042d\u0442\u043e\u0442 \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\u043c \u0441\u043e\u0437\u0434\u0430\u0432\u0430\u0442\u044c \u043d\u043e\u0432\u044b\u0439 \u0431\u0438\u043b\u0435\u0442 \u0434\u043b\u044f \u043a\u043e\u043d\u0446\u0435\u0440\u0442\u0430. - Request Body: <code>TicketCreateSerializer</code> - Responses:   - <code>201</code>: <code>TicketSerializer</code>   - <code>400</code>: \u041e\u0448\u0438\u0431\u043a\u0438 \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u0438   - <code>403</code>: \u041d\u0435\u0434\u043e\u0441\u0442\u0430\u0442\u043e\u0447\u043d\u043e \u043f\u0440\u0430\u0432</p> <pre><code>@swagger_auto_schema(\n    method=\"post\",\n    operation_summary=\"\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0431\u0438\u043b\u0435\u0442\u0430\",\n    request_body=TicketCreateSerializer,\n    responses={201: TicketSerializer, 400: \"\u041e\u0448\u0438\u0431\u043a\u0438 \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u0438\", 403: \"\u041d\u0435\u0434\u043e\u0441\u0442\u0430\u0442\u043e\u0447\u043d\u043e \u043f\u0440\u0430\u0432\"}\n)\n@api_view([\"POST\"])\n@permission_classes([AllowAny])\ndef ticket_list_create(request):\n    serializer = TicketCreateSerializer(data=request.data)\n    if serializer.is_valid():\n        serializer.save()\n        return Response(serializer.data, status=status.HTTP_201_CREATED)\n    return Response(serializer.errors, status=status.HTTP_400_BAD_REQUEST)\n</code></pre>"},{"location":"lr3/views/#_7","title":"\u041e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435, \u0447\u0430\u0441\u0442\u0438\u0447\u043d\u043e\u0435 \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435 \u0438 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0431\u0438\u043b\u0435\u0442\u0430","text":"<p>GET, PUT, PATCH, DELETE <code>/ticket_detail/&lt;pk&gt;/</code> - Summary: \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435, \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435, \u0438\u043b\u0438 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0431\u0438\u043b\u0435\u0442\u0430 - Description: \u042d\u0442\u043e\u0442 \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\u043c \u043f\u0440\u043e\u0441\u043c\u0430\u0442\u0440\u0438\u0432\u0430\u0442\u044c, \u043e\u0431\u043d\u043e\u0432\u043b\u044f\u0442\u044c \u0438\u043b\u0438 \u0443\u0434\u0430\u043b\u044f\u0442\u044c \u0431\u0438\u043b\u0435\u0442 \u043f\u043e \u0435\u0433\u043e \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440\u0443. - Request Body (for PUT, PATCH): <code>TicketSerializer</code> - Responses:   - <code>200</code>: <code>TicketSerializer</code>   - <code>204</code>: \u0411\u0438\u043b\u0435\u0442 \u0443\u0434\u0430\u043b\u0435\u043d   - <code>400</code>: \u041e\u0448\u0438\u0431\u043a\u0438 \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u0438   - <code>403</code>: \u041d\u0435\u0434\u043e\u0441\u0442\u0430\u0442\u043e\u0447\u043d\u043e \u043f\u0440\u0430\u0432   - <code>404</code>: \u0411\u0438\u043b\u0435\u0442 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d</p> <pre><code>@swagger_auto_schema(\n    method=\"put\",\n    operation_summary=\"\u041e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435 \u0431\u0438\u043b\u0435\u0442\u0430\",\n    request_body=TicketSerializer,\n    responses={200: TicketSerializer, 400: \"\u041e\u0448\u0438\u0431\u043a\u0438 \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u0438\", 403: \"\u041d\u0435\u0434\u043e\u0441\u0442\u0430\u0442\u043e\u0447\u043d\u043e \u043f\u0440\u0430\u0432\", 404: \"\u0411\u0438\u043b\u0435\u0442 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\"}\n)\n@swagger_auto_schema(\n    method=\"patch\",\n    operation_summary=\"\u0427\u0430\u0441\u0442\u0438\u0447\u043d\u043e\u0435 \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435 \u0431\u0438\u043b\u0435\u0442\u0430\",\n    request_body=TicketSerializer,\n    responses={200: TicketSerializer, 400: \"\u041e\u0448\u0438\u0431\u043a\u0438 \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u0438\", 403: \"\u041d\u0435\u0434\u043e\u0441\u0442\u0430\u0442\u043e\u0447\u043d\u043e \u043f\u0440\u0430\u0432\", 404: \"\u0411\u0438\u043b\u0435\u0442 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\"}\n)\n@swagger_auto_schema(\n    method=\"delete\",\n    operation_summary=\"\u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0431\u0438\u043b\u0435\u0442\u0430\",\n    responses={204: \"\u0411\u0438\u043b\u0435\u0442 \u0443\u0434\u0430\u043b\u0435\u043d\", 403: \"\u041d\u0435\u0434\u043e\u0441\u0442\u0430\u0442\u043e\u0447\u043d\u043e \u043f\u0440\u0430\u0432\", 404: \"\u0411\u0438\u043b\u0435\u0442 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\"}\n)\n@swagger_auto_schema(\n    method=\"get\",\n    operation_summary=\"\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u0431\u0438\u043b\u0435\u0442\u0435\",\n    responses={200: TicketSerializer, 404: \"\u0411\u0438\u043b\u0435\u0442 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\"}\n)\n@api_view([\"GET\", \"PUT\", \"PATCH\", \"DELETE\"])\n@permission_classes([AllowAny])\ndef ticket_detail(request, pk):\n    try:\n        ticket = Ticket.objects.get(pk=pk)\n    except Ticket.DoesNotExist:\n        return Response({\"error\": \"\u0411\u0438\u043b\u0435\u0442 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\"}, status=status.HTTP_404_NOT_FOUND)\n\n    if request.method == \"GET\":\n        return Response(TicketSerializer(ticket).data)\n\n    if not request.user.is_staff:\n        return Response({\"error\": \"\u041d\u0435\u0434\u043e\u0441\u0442\u0430\u0442\u043e\u0447\u043d\u043e \u043f\u0440\u0430\u0432\"}, status=status.HTTP_403_FORBIDDEN)\n\n    if request.method in [\"PUT\", \"PATCH\"]:\n        serializer = TicketSerializer(ticket, data=request.data, partial=(request.method == \"PATCH\"))\n        if serializer.is_valid():\n            serializer.save()\n            return Response(serializer.data)\n        return Response(serializer.errors, status=status.HTTP_400_BAD_REQUEST)\n\n    ticket.delete()\n    return Response(status=status.HTTP_204_NO_CONTENT)\n</code></pre>"},{"location":"lr3/views/#_8","title":"\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0437\u0430\u043a\u0430\u0437\u0430","text":"<p>POST <code>/order_list_create/</code> - Summary: \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0437\u0430\u043a\u0430\u0437\u0430 - Description: \u042d\u0442\u043e\u0442 \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044e \u0441\u043e\u0437\u0434\u0430\u0432\u0430\u0442\u044c \u043d\u043e\u0432\u044b\u0439 \u0437\u0430\u043a\u0430\u0437 \u043d\u0430 \u0431\u0438\u043b\u0435\u0442\u044b \u0434\u043b\u044f \u043a\u043e\u043d\u0446\u0435\u0440\u0442\u0430. - Request Body: <code>OrderCreationSerializer</code> - Responses:   - <code>201</code>: <code>OrderCreationSerializer</code>   - <code>400</code>: \u041e\u0448\u0438\u0431\u043a\u0438 \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u0438</p> <pre><code>@swagger_auto_schema(\n    method=\"post\",\n    operation_summary=\"\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0437\u0430\u043a\u0430\u0437\u0430\",\n    request_body=OrderCreationSerializer,\n    responses={201: OrderCreationSerializer, 400: \"\u041e\u0448\u0438\u0431\u043a\u0438 \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u0438\"}\n)\n@api_view([\"POST\"])\n@permission_classes([IsAuthenticated])\ndef order_list_create(request):\n    serializer = OrderCreationSerializer(data=request.data)\n    if serializer.is_valid():\n        serializer.save(user=request.user)\n        return Response(serializer.data, status=status.HTTP_201_CREATED)\n\n    return Response(serializer.errors, status=status.HTTP_400_BAD_REQUEST)\n</code></pre>"},{"location":"lr3/views/#_9","title":"\u041f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u0438\u0435 \u0437\u0430\u043a\u0430\u0437\u0430","text":"<p>POST <code>/confirm_order/&lt;pk&gt;/</code> - Summary: \u041f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u0438\u0435 \u0437\u0430\u043a\u0430\u0437\u0430 - Description: \u042d\u0442\u043e\u0442 \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u0430\u043c \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0430\u0442\u044c \u0437\u0430\u043a\u0430\u0437\u044b \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439. - Responses:   - <code>200</code>: \u0417\u0430\u043a\u0430\u0437 \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d   - <code>404</code>: \u0417\u0430\u043a\u0430\u0437 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d</p> <pre><code>@swagger_auto_schema(\n    method=\"post\",\n    operation_summary=\"\u041f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u0438\u0435 \u0437\u0430\u043a\u0430\u0437\u0430\",\n    responses={200: \"\u0417\u0430\u043a\u0430\u0437 \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\", 404: \"\u0417\u0430\u043a\u0430\u0437 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\"}\n)\n@api_view([\"POST\"])\n@permission_classes([IsAdminUser])\ndef confirm_order(request, pk):\n    try:\n        order = Order.objects.get(pk=pk)\n    except Order.DoesNotExist:\n        return Response({\"error\": \"\u0417\u0430\u043a\u0430\u0437 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\"}, status=status.HTTP_404_NOT_FOUND)\n\n    order.status = \"confirmed\"\n    order.save()\n    return Response({\"status\": \"Order confirmed\"}, status=status.HTTP_200_OK)\n</code></pre>"},{"location":"lr3/views/#_10","title":"\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u043a\u043e\u043d\u0446\u0435\u0440\u0442","text":"<p>POST <code>/create_concert/</code> - Summary: \u0421\u043e\u0437\u0434\u0430\u0442\u044c \u043a\u043e\u043d\u0446\u0435\u0440\u0442 - Description: \u042d\u0442\u043e\u0442 \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u0430\u043c \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0442\u044c \u043d\u043e\u0432\u044b\u0439 \u043a\u043e\u043d\u0446\u0435\u0440\u0442 \u0432 \u0441\u0438\u0441\u0442\u0435\u043c\u0443. - Request Body: <code>ConcertSerializer</code> - Responses:   - <code>201</code>: <code>ConcertSerializer</code>   - <code>400</code>: \u041e\u0448\u0438\u0431\u043a\u0438 \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u0438</p> <pre><code>@swagger_auto_schema(\n    method=\"post\",\n    operation_summary=\"\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u043a\u043e\u043d\u0446\u0435\u0440\u0442\",\n    request_body=ConcertSerializer,\n    responses={201: ConcertSerializer, 400: \"\u041e\u0448\u0438\u0431\u043a\u0438 \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u0438\"}\n)\n@api_view([\"POST\"])\n@permission_classes([IsAdminUser])\ndef create_concert(request):\n    serializer = ConcertSerializer(data=request.data)\n    if serializer.is_valid():\n        serializer.save()\n        return Response(serializer.data, status=status.HTTP_201_CREATED)\n    return Response(serializer.errors, status=status.HTTP_400_BAD_REQUEST)\n</code></pre>"},{"location":"lr3/views/#_11","title":"\u0423\u0434\u0430\u043b\u0438\u0442\u044c \u043a\u043e\u043d\u0446\u0435\u0440\u0442","text":"<p>DELETE <code>/delete_concert/&lt;pk&gt;/</code> - Summary: \u0423\u0434\u0430\u043b\u0438\u0442\u044c \u043a\u043e\u043d\u0446\u0435\u0440\u0442 - Description: \u042d\u0442\u043e\u0442 \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u0430\u043c \u0443\u0434\u0430\u043b\u044f\u0442\u044c \u043a\u043e\u043d\u0446\u0435\u0440\u0442 \u043f\u043e \u0435\u0433\u043e \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440\u0443. - Responses:   - <code>204</code>: \u041a\u043e\u043d\u0446\u0435\u0440\u0442 \u0443\u0434\u0430\u043b\u0435\u043d   - <code>404</code>: \u041a\u043e\u043d\u0446\u0435\u0440\u0442 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d</p> <pre><code>@swagger_auto_schema(\n    method=\"delete\",\n    operation_summary=\"\u0423\u0434\u0430\u043b\u0438\u0442\u044c \u043a\u043e\u043d\u0446\u0435\u0440\u0442\",\n    responses={204: \"\u041a\u043e\u043d\u0446\u0435\u0440\u0442 \u0443\u0434\u0430\u043b\u0435\u043d\", 404: \"\u041a\u043e\u043d\u0446\u0435\u0440\u0442 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\"}\n)\n@api_view([\"DELETE\"])\n@permission_classes([IsAdminUser])\ndef delete_concert(request, pk):\n    try:\n        concert = Concert.objects.get(pk=pk)\n        concert.delete()\n        return Response(status=status.HTTP_204_NO_CONTENT)\n    except Concert.DoesNotExist:\n        return Response({\"error\": \"\u041a\u043e\u043d\u0446\u0435\u0440\u0442 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\"}, status=status.HTTP_404_NOT_FOUND)\n</code></pre>"},{"location":"lr3/views/#_12","title":"\u0420\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043a\u043e\u043d\u0446\u0435\u0440\u0442","text":"<p>PUT <code>/update_concert/&lt;pk&gt;/</code> - Summary: \u0420\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043a\u043e\u043d\u0446\u0435\u0440\u0442 - Description: \u042d\u0442\u043e\u0442 \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u0430\u043c \u043e\u0431\u043d\u043e\u0432\u043b\u044f\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0435\u043c \u043a\u043e\u043d\u0446\u0435\u0440\u0442\u0435. - Request Body: <code>ConcertSerializer</code> - Responses:   - <code>200</code>: <code>ConcertSerializer</code>   - <code>400</code>: \u041e\u0448\u0438\u0431\u043a\u0438 \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u0438   - <code>404</code>: \u041a\u043e\u043d\u0446\u0435\u0440\u0442 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d</p> <pre><code>@swagger_auto_schema(\n    method=\"put\",\n    operation_summary=\"\u0420\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043a\u043e\u043d\u0446\u0435\u0440\u0442\",\n    request_body=ConcertSerializer,\n    responses={200: ConcertSerializer, 400: \"\u041e\u0448\u0438\u0431\u043a\u0438 \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u0438\", 404: \"\u041a\u043e\u043d\u0446\u0435\u0440\u0442 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\"}\n)\n@api_view([\"PUT\"])\n@permission_classes([IsAdminUser])\ndef update_concert(request, pk):\n    try:\n        concert = Concert.objects.get(pk=pk)\n    except Concert.DoesNotExist:\n        return Response({\"error\": \"\u041a\u043e\u043d\u0446\u0435\u0440\u0442 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\"}, status=status.HTTP_404_NOT_FOUND)\n\n    serializer = ConcertSerializer(concert, data=request.data)\n    if serializer.is_valid():\n        serializer.save()\n        return Response(serializer.data)\n    return Response(serializer.errors, status=status.HTTP_400_BAD_REQUEST)\n</code></pre>"},{"location":"lr3/views/#_13","title":"\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u044b\u0439 \u0437\u0430\u043a\u0430\u0437","text":"<p>GET <code>/get_order/&lt;pk&gt;/</code> - Summary: \u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u044b\u0439 \u0437\u0430\u043a\u0430\u0437 - Description: \u042d\u0442\u043e\u0442 \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442 \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u043c \u0437\u0430\u043a\u0430\u0437\u0435 \u043f\u043e \u0435\u0433\u043e \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440\u0443. - Responses:   - <code>200</code>: <code>OrderSerializer</code>   - <code>404</code>: \u0417\u0430\u043a\u0430\u0437 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d</p> <pre><code>@swagger_auto_schema(\n    method=\"get\",\n    operation_summary=\"\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u044b\u0439 \u0437\u0430\u043a\u0430\u0437\",\n    responses={200: OrderSerializer, 404: \"\u0417\u0430\u043a\u0430\u0437 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\"}\n)\n@api_view([\"GET\"])\n@permission_classes([IsAuthenticated])\ndef get_order(request, pk):\n    try:\n        order = Order.objects.get(pk=pk)\n        return Response(OrderSerializer(order).data)\n    except Order.DoesNotExist:\n        return Response({\"error\": \"\u0417\u0430\u043a\u0430\u0437 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\"}, status=status.HTTP_404_NOT_FOUND)\n</code></pre>"},{"location":"lr3/views/#_14","title":"\u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u043e\u0431\u043e\u0440\u0443\u0434\u043e\u0432\u0430\u043d\u0438\u0435 \u0434\u043b\u044f \u043a\u043e\u043d\u0446\u0435\u0440\u0442\u0430","text":"<p>POST <code>/add_equipment_to_concert/</code> - Summary: \u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u043e\u0431\u043e\u0440\u0443\u0434\u043e\u0432\u0430\u043d\u0438\u0435 \u0434\u043b\u044f \u043a\u043e\u043d\u0446\u0435\u0440\u0442\u0430 - Description: \u042d\u0442\u043e\u0442 \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u0430\u043c \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0442\u044c \u043e\u0431\u043e\u0440\u0443\u0434\u043e\u0432\u0430\u043d\u0438\u0435 \u043a \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u043c\u0443 \u043a\u043e\u043d\u0446\u0435\u0440\u0442\u0443. - Request Body: <code>ConcertEquipmentSerializer</code> - Responses:   - <code>201</code>: <code>ConcertEquipmentSerializer</code>   - <code>400</code>: \u041e\u0448\u0438\u0431\u043a\u0438 \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u0438</p> <pre><code>@swagger_auto_schema(\n    method=\"post\",\n    operation_summary=\"\u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u043e\u0431\u043e\u0440\u0443\u0434\u043e\u0432\u0430\u043d\u0438\u0435 \u0434\u043b\u044f \u043a\u043e\u043d\u0446\u0435\u0440\u0442\u0430\",\n    request_body=ConcertEquipmentSerializer,\n    responses={201: ConcertEquipmentSerializer, 400: \"\u041e\u0448\u0438\u0431\u043a\u0438 \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u0438\"}\n)\n@api_view([\"POST\"])\n@permission_classes([IsAdminUser])\ndef add_equipment_to_concert(request):\n    serializer = ConcertEquipmentSerializer(data=request.data)\n    if serializer.is_valid():\n        serializer.save()\n        return Response(serializer.data, status=status.HTTP_201_CREATED)\n    return Response(serializer.errors, status=status.HTTP_400_BAD_REQUEST)\n</code></pre>"},{"location":"lr3/views/#_15","title":"\u0423\u0434\u0430\u043b\u0438\u0442\u044c \u043e\u0431\u043e\u0440\u0443\u0434\u043e\u0432\u0430\u043d\u0438\u0435 \u0438\u0437 \u043a\u043e\u043d\u0446\u0435\u0440\u0442\u0430","text":"<p>DELETE <code>/remove_equipment_from_concert/&lt;pk&gt;/</code> - Summary: \u0423\u0434\u0430\u043b\u0438\u0442\u044c \u043e\u0431\u043e\u0440\u0443\u0434\u043e\u0432\u0430\u043d\u0438\u0435 \u0438\u0437 \u043a\u043e\u043d\u0446\u0435\u0440\u0442\u0430 - Description: \u042d\u0442\u043e\u0442 \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u0430\u043c \u0443\u0434\u0430\u043b\u044f\u0442\u044c \u043e\u0431\u043e\u0440\u0443\u0434\u043e\u0432\u0430\u043d\u0438\u0435 \u0438\u0437 \u043a\u043e\u043d\u0446\u0435\u0440\u0442\u0430 \u043f\u043e \u0435\u0433\u043e \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440\u0443. - Responses:   - <code>204</code>: \u041e\u0431\u043e\u0440\u0443\u0434\u043e\u0432\u0430\u043d\u0438\u0435 \u0443\u0434\u0430\u043b\u0435\u043d\u043e   - <code>404</code>: \u041e\u0431\u043e\u0440\u0443\u0434\u043e\u0432\u0430\u043d\u0438\u0435 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e</p> <pre><code>@swagger_auto_schema(\n    method=\"delete\",\n    operation_summary=\"\u0423\u0434\u0430\u043b\u0438\u0442\u044c \u043e\u0431\u043e\u0440\u0443\u0434\u043e\u0432\u0430\u043d\u0438\u0435 \u0438\u0437 \u043a\u043e\u043d\u0446\u0435\u0440\u0442\u0430\",\n    responses={204: \"\u041e\u0431\u043e\u0440\u0443\u0434\u043e\u0432\u0430\u043d\u0438\u0435 \u0443\u0434\u0430\u043b\u0435\u043d\u043e\", 404: \"\u041e\u0431\u043e\u0440\u0443\u0434\u043e\u0432\u0430\u043d\u0438\u0435 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e\"}\n)\n@api_view([\"DELETE\"])\n@permission_classes([IsAdminUser])\ndef remove_equipment_from_concert(request, pk):\n    try:\n        equipment = ConcertEquipment.objects.get(pk=pk)\n        equipment.delete()\n        return Response(status=status.HTTP_204_NO_CONTENT)\n    except ConcertEquipment.DoesNotExist:\n        return Response({\"error\": \"\u041e\u0431\u043e\u0440\u0443\u0434\u043e\u0432\u0430\u043d\u0438\u0435 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e\"}, status=status.HTTP_404_NOT_FOUND)\n</code></pre>"},{"location":"lr3/views/#_16","title":"\u0420\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043e\u0431\u043e\u0440\u0443\u0434\u043e\u0432\u0430\u043d\u0438\u0435 \u0434\u043b\u044f \u043a\u043e\u043d\u0446\u0435\u0440\u0442\u0430","text":"<p>PUT <code>/update_equipment_for_concert/&lt;pk&gt;/</code> - Summary: \u0420\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043e\u0431\u043e\u0440\u0443\u0434\u043e\u0432\u0430\u043d\u0438\u0435 \u0434\u043b\u044f \u043a\u043e\u043d\u0446\u0435\u0440\u0442\u0430 - Description: \u042d\u0442\u043e\u0442 \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u0430\u043c \u043e\u0431\u043d\u043e\u0432\u043b\u044f\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e\u0431 \u043e\u0431\u043e\u0440\u0443\u0434\u043e\u0432\u0430\u043d\u0438\u0438 \u0434\u043b\u044f \u043a\u043e\u043d\u0446\u0435\u0440\u0442\u0430. - Request Body: <code>ConcertEquipmentSerializer</code> - Responses:   - <code>200</code>: <code>ConcertEquipmentSerializer</code>   - <code>400</code>: \u041e\u0448\u0438\u0431\u043a\u0438 \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u0438   - <code>404</code>: \u041e\u0431\u043e\u0440\u0443\u0434\u043e\u0432\u0430\u043d\u0438\u0435 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e</p> <pre><code>@swagger_auto_schema(\n    method=\"put\",\n    operation_summary=\"\u0420\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043e\u0431\u043e\u0440\u0443\u0434\u043e\u0432\u0430\u043d\u0438\u0435 \u0434\u043b\u044f \u043a\u043e\u043d\u0446\u0435\u0440\u0442\u0430\",\n    request_body=ConcertEquipmentSerializer,\n    responses={200: ConcertEquipmentSerializer, 400: \"\u041e\u0448\u0438\u0431\u043a\u0438 \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u0438\", 404: \"\u041e\u0431\u043e\u0440\u0443\u0434\u043e\u0432\u0430\u043d\u0438\u0435 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e\"}\n)\n@api_view([\"PUT\"])\n@permission_classes([IsAdminUser])\ndef update_equipment_for_concert(request, pk):\n    try:\n        equipment = ConcertEquipment.objects.get(pk=pk)\n    except ConcertEquipment.DoesNotExist:\n        return Response({\"error\": \"\u041e\u0431\u043e\u0440\u0443\u0434\u043e\u0432\u0430\u043d\u0438\u0435 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e\"}, status=status.HTTP_404_NOT_FOUND)\n\n    serializer = ConcertEquipmentSerializer(equipment, data=request.data)\n    if serializer.is_valid():\n        serializer.save()\n        return Response(serializer.data)\n    return Response(serializer.errors, status=status.HTTP_400_BAD_REQUEST)\n</code></pre>"},{"location":"lr3/views/#_17","title":"\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043e\u0431\u043e\u0440\u0443\u0434\u043e\u0432\u0430\u043d\u0438\u0435 \u0434\u043b\u044f \u043a\u043e\u043d\u0446\u0435\u0440\u0442\u0430","text":"<p>GET <code>/get_equipment_for_concert/&lt;concert_id&gt;/</code> - Summary: \u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043e\u0431\u043e\u0440\u0443\u0434\u043e\u0432\u0430\u043d\u0438\u0435 \u0434\u043b\u044f \u043a\u043e\u043d\u0446\u0435\u0440\u0442\u0430 - Description: \u042d\u0442\u043e\u0442 \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442 \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0441\u043f\u0438\u0441\u043e\u043a \u043e\u0431\u043e\u0440\u0443\u0434\u043e\u0432\u0430\u043d\u0438\u044f, \u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u043d\u043e\u0433\u043e \u0434\u043b\u044f \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0433\u043e \u043a\u043e\u043d\u0446\u0435\u0440\u0442\u0430. - Responses:   - <code>200</code>: <code>ConcertEquipmentSerializer(many=True)</code>   - <code>404</code>: \u041a\u043e\u043d\u0446\u0435\u0440\u0442 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d</p> <pre><code>@swagger_auto_schema(\n    method=\"get\",\n    operation_summary=\"\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043e\u0431\u043e\u0440\u0443\u0434\u043e\u0432\u0430\u043d\u0438\u0435 \u0434\u043b\u044f \u043a\u043e\u043d\u0446\u0435\u0440\u0442\u0430\",\n    responses={200: ConcertEquipmentSerializer(many=True), 404: \"\u041a\u043e\u043d\u0446\u0435\u0440\u0442 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\"}\n)\n@api_view([\"GET\"])\n@permission_classes([IsAdminUser])\ndef get_equipment_for_concert(request, concert_id):\n    try:\n        concert = Concert.objects.get(pk=concert_id)\n    except Concert.DoesNotExist:\n        return Response({\"error\": \"\u041a\u043e\u043d\u0446\u0435\u0440\u0442 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\"}, status=status.HTTP_404_NOT_FOUND)\n\n    concert_equipment = ConcertEquipment.objects.filter(concert=concert)\n    return Response(ConcertEquipmentSerializer(concert_equipment, many=True).data)\n</code></pre>"},{"location":"lr3/views/#_18","title":"\u041d\u0430\u0437\u043d\u0430\u0447\u0438\u0442\u044c \u043a\u043e\u043d\u0446\u0435\u0440\u0442 \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0442\u043e\u0440\u0443","text":"<p>POST <code>/assign_concert/&lt;pk&gt;/</code> - Summary: \u041d\u0430\u0437\u043d\u0430\u0447\u0438\u0442\u044c \u043a\u043e\u043d\u0446\u0435\u0440\u0442 \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0442\u043e\u0440\u0443 - Description: \u042d\u0442\u043e\u0442 \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u043d\u0430\u0437\u043d\u0430\u0447\u0438\u0442\u044c \u043a\u043e\u043d\u0446\u0435\u0440\u0442 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u043e\u043c\u0443 \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0442\u043e\u0440\u0443. - Request Body: <code>OrganizerSerializer</code> - Responses:   - <code>200</code>: \u041a\u043e\u043d\u0446\u0435\u0440\u0442 \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0442\u043e\u0440\u0443   - <code>400</code>: \u041e\u0448\u0438\u0431\u043a\u0430 \u0432 \u0437\u0430\u043f\u0440\u043e\u0441\u0435   - <code>404</code>: \u041a\u043e\u043d\u0446\u0435\u0440\u0442 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d   - <code>403</code>: \u041d\u0435\u0434\u043e\u0441\u0442\u0430\u0442\u043e\u0447\u043d\u043e \u043f\u0440\u0430\u0432</p> <pre><code>@swagger_auto_schema(\n    method=\"post\",\n    operation_summary=\"\u041d\u0430\u0437\u043d\u0430\u0447\u0438\u0442\u044c \u043a\u043e\u043d\u0446\u0435\u0440\u0442 \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0442\u043e\u0440\u0443\",\n    request_body=OrganizerSerializer,\n    responses={\n        200: \"\u041a\u043e\u043d\u0446\u0435\u0440\u0442 \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0442\u043e\u0440\u0443\",\n        400: \"\u041e\u0448\u0438\u0431\u043a\u0430 \u0432 \u0437\u0430\u043f\u0440\u043e\u0441\u0435\",\n        404: \"\u041a\u043e\u043d\u0446\u0435\u0440\u0442 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\",\n        403: \"\u041d\u0435\u0434\u043e\u0441\u0442\u0430\u0442\u043e\u0447\u043d\u043e \u043f\u0440\u0430\u0432\"\n    }\n)\n@api_view([\"POST\"])\n@permission_classes([IsAdminUser])\ndef assign_concert(request, pk=None):\n    if not hasattr(request.user, \"employee\"):\n        return Response({\"error\": \"\u0423 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u043d\u0435\u0442 \u0441\u0432\u044f\u0437\u0430\u043d\u043d\u043e\u0433\u043e \u0441\u043e\u0442\u0440\u0443\u0434\u043d\u0438\u043a\u0430\"}, status=status.HTTP_403_FORBIDDEN)\n\n    try:\n        concert = Concert.objects.get(pk=pk)\n    except Concert.DoesNotExist:\n        return Response({\"error\": \"\u041a\u043e\u043d\u0446\u0435\u0440\u0442 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\"}, status=status.HTTP_404_NOT_FOUND)\n\n    try:\n        Organizer.objects.create(employee=request.user.employee, concert=concert)\n    except Exception as e:\n        return Response({\"error\": f\"\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0438 \u043a\u043e\u043d\u0446\u0435\u0440\u0442\u0430: {str(e)}\"}, status=status.HTTP_400_BAD_REQUEST)\n\n    return Response({\"status\": \"\u041a\u043e\u043d\u0446\u0435\u0440\u0442 \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0442\u043e\u0440\u0443\"}, status=status.HTTP_200_OK)\n</code></pre>"},{"location":"lr3/views/#_19","title":"\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0432\u0441\u0435\u0445 \u043a\u043e\u043d\u0446\u0435\u0440\u0442\u043e\u0432 \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0442\u043e\u0440\u0430","text":"<p>GET <code>/get_organizer_concerts/</code> - Summary: \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0432\u0441\u0435\u0445 \u043a\u043e\u043d\u0446\u0435\u0440\u0442\u043e\u0432 \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0442\u043e\u0440\u0430 - Description: \u042d\u0442\u043e\u0442 \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u043f\u0438\u0441\u043e\u043a \u0432\u0441\u0435\u0445 \u043a\u043e\u043d\u0446\u0435\u0440\u0442\u043e\u0432, \u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044b\u0445 \u0442\u0435\u043a\u0443\u0449\u0435\u043c\u0443 \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0442\u043e\u0440\u0443. - Responses:   - <code>200</code>: <code>ConcertDetailSerializer(many=True)</code>   - <code>403</code>: \u041d\u0435\u0434\u043e\u0441\u0442\u0430\u0442\u043e\u0447\u043d\u043e \u043f\u0440\u0430\u0432   - <code>400</code>: \u041e\u0448\u0438\u0431\u043a\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430</p> <p>```python @swagger_auto_schema(     method=\"get\",     operation_summary=\"\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0432\u0441\u0435\u0445 \u043a\u043e\u043d\u0446\u0435\u0440\u0442\u043e\u0432 \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0442\u043e\u0440\u0430\",     responses={         200: ConcertDetailSerializer(many=True),         403: \"\u041d\u0435\u0434\u043e\u0441\u0442\u0430\u0442\u043e\u0447\u043d\u043e \u043f\u0440\u0430\u0432\",         400: \"\u041e\u0448\u0438\u0431\u043a\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430\"     } ) @api_view([\"GET\"]) @permission_classes([IsAdminUser]) def get_organizer_concerts(request):     if not hasattr(request.user, \"employee\"):         return Response({\"error\": \"\u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u043d\u0435 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0441\u043e\u0442\u0440\u0443\u0434\u043d\u0438\u043a\u043e\u043c\"}, status=status.HTTP_403</p>"},{"location":"lr4/components/","title":"\u041a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u044b","text":""},{"location":"lr4/components/#_2","title":"\u041a\u0430\u0440\u0442\u043e\u0447\u043a\u0430 \u043a\u043e\u043d\u0446\u0435\u0440\u0442\u0430","text":"<pre><code>import { formatInTimeZone } from 'date-fns-tz';\nimport { ru } from 'date-fns/locale';\n\nconst ConcertCard = ({ concert }) =&gt; {\n  const { title, date, time, image, id } = concert;\n\n  const timeZone = 'Europe/Moscow';\n\n  const dateObj = new Date(date);\n  const timeObj = new Date(`${date}T${time}`);\n\n  const formattedDate = formatInTimeZone(dateObj, timeZone, \"d MMMM\", { locale: ru });\n  const formattedTime = formatInTimeZone(timeObj, timeZone, \"HH:mm\", { locale: ru });\n\n  return (\n    &lt;a href={`/concerts/${id}`} className=\"card mb-4 text-decoration-none\" style={{ width: '20rem', cursor: 'pointer', color: 'inherit' }}&gt;\n      &lt;img\n        src={image}\n        className=\"card-img-top\"\n        alt={title}\n        style={{ width: '100%', height: '200px', objectFit: 'cover' }}\n      /&gt;\n      &lt;div className=\"card-body\"&gt;\n        &lt;h5 className=\"card-title\"&gt;{title}&lt;/h5&gt;\n        &lt;p className=\"card-text\"&gt;&lt;small&gt;{formattedDate}, {formattedTime}&lt;/small&gt;&lt;/p&gt;\n      &lt;/div&gt;\n    &lt;/a&gt;\n  );\n};\n\nexport default ConcertCard;\n\n</code></pre>"},{"location":"lr4/components/#_3","title":"\u0425\u0435\u0434\u0435\u0440","text":"<pre><code>import React, { useContext } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { AuthContext } from \"../utils/AuthContext\";\n\nconst Header = () =&gt; {\n  const { userRole, isAuthenticated, logout } = useContext(AuthContext);\n  const navigate = useNavigate();\n\n  const handleLogout = () =&gt; {\n    logout();\n    navigate(\"/login\");\n  };\n\n  return (\n    &lt;nav className=\"navbar navbar-dark bg-dark p-3\"&gt;\n      &lt;div className=\"container d-flex justify-content-between\"&gt;\n        &lt;Link className=\"navbar-brand\" to=\"/\"&gt;Concert Hall&lt;/Link&gt;\n\n        {isAuthenticated ? (\n          &lt;div&gt;\n            {userRole === \"user\" ? (\n              &lt;Link className=\"btn btn-outline-light me-2\" to=\"/orders/my\"&gt;\u041c\u043e\u0438 \u0437\u0430\u043a\u0430\u0437\u044b&lt;/Link&gt;\n            ) : (\n              &lt;Link className=\"btn btn-outline-light me-2\" to=\"/admin\"&gt;\u0410\u0434\u043c\u0438\u043d-\u043f\u0430\u043d\u0435\u043b\u044c&lt;/Link&gt;\n            )}\n            &lt;button className=\"btn btn-danger\" onClick={handleLogout}&gt;\u0412\u044b\u0439\u0442\u0438&lt;/button&gt;\n          &lt;/div&gt;\n        ) : (\n          &lt;Link className=\"btn btn-outline-light\" to=\"/login\"&gt;\u0412\u043e\u0439\u0442\u0438&lt;/Link&gt;\n        )}\n      &lt;/div&gt;\n    &lt;/nav&gt;\n  );\n};\n\nexport default Header;\n</code></pre>"},{"location":"lr4/components/#_4","title":"\u0424\u0443\u0442\u0435\u0440","text":"<pre><code>import React from 'react';\n\nconst Footer = () =&gt; (\n  &lt;footer className=\"bg-dark text-white text-center p-3 mt-4\"&gt;\n    &lt;p&gt;&amp;copy; 2025 Concert Hall. \u0412\u0441\u0435 \u043f\u0440\u0430\u0432\u0430 \u0437\u0430\u0449\u0438\u0449\u0435\u043d\u044b.&lt;/p&gt;\n  &lt;/footer&gt;\n);\n\nexport default Footer;\n</code></pre>"},{"location":"lr4/components/#_5","title":"\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043a\u043e\u043d\u0446\u0435\u0440\u0442\u0430","text":"<pre><code>import React, { useState, useEffect } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport axios from 'axios';\n\nconst CreateConcert = () =&gt; {\n  const [concertDetails, setConcertDetails] = useState({\n    title: '',\n    performer: '',\n    description: '',\n    date: '',\n    time: '',\n    age_limit: '',\n    image: null, // \u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u043e \u0434\u043b\u044f \u0444\u043e\u0442\u043e\n  });\n\n  const [performers, setPerformers] = useState([]);\n\n  const token = localStorage.getItem('token');\n\n  useEffect(() =&gt; {\n    axios.get('http://localhost:8000/performers/', {\n      headers: token ? { Authorization: `Token ${token}` } : {},\n    })\n      .then((response) =&gt; {\n        setPerformers(response.data);\n      })\n      .catch((error) =&gt; {\n        console.error('\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0438 \u0441\u043f\u0438\u0441\u043a\u0430 \u0438\u0441\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u0435\u0439', error);\n      });\n  }, []);\n\n  const handleChange = (e) =&gt; {\n    const { name, value } = e.target;\n    setConcertDetails((prev) =&gt; ({ ...prev, [name]: value }));\n  };\n\n  const handleFileChange = (e) =&gt; {\n    const file = e.target.files[0];\n    setConcertDetails((prev) =&gt; ({ ...prev, image: file }));\n  };\n\n  const handleSubmit = (e) =&gt; {\n    e.preventDefault();\n\n    const formData = new FormData();\n    formData.append('title', concertDetails.title);\n    formData.append('performer', concertDetails.performer);\n    formData.append('description', concertDetails.description);\n    formData.append('date', concertDetails.date);\n    formData.append('time', concertDetails.time);\n    formData.append('age_limit', concertDetails.age_limit);\n    if (concertDetails.image) {\n      formData.append('image', concertDetails.image);\n    }\n\n    axios.post('http://localhost:8000/concerts/create/', formData, {\n      headers: {\n        Authorization: `Token ${token}`,\n        'Content-Type': 'multipart/form-data',\n      },\n    })\n      .then((response) =&gt; {\n        console.log('\u041a\u043e\u043d\u0446\u0435\u0440\u0442 \u0441\u043e\u0437\u0434\u0430\u043d', response.data);\n      })\n      .catch((error) =&gt; {\n        console.error('\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0438 \u043a\u043e\u043d\u0446\u0435\u0440\u0442\u0430', error);\n      });\n  };\n\n  return (\n    &lt;div&gt;\n      &lt;Form onSubmit={handleSubmit} className=\"mt-3\"&gt;\n        &lt;Form.Group&gt;\n          &lt;Form.Label&gt;\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043a\u043e\u043d\u0446\u0435\u0440\u0442\u0430&lt;/Form.Label&gt;\n          &lt;Form.Control\n            type=\"text\"\n            name=\"title\"\n            value={concertDetails.title}\n            onChange={handleChange}\n          /&gt;\n        &lt;/Form.Group&gt;\n\n        {/* \u0412\u044b\u043f\u0430\u0434\u0430\u044e\u0449\u0438\u0439 \u0441\u043f\u0438\u0441\u043e\u043a \u0434\u043b\u044f \u0438\u0441\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u0435\u0439 */}\n        &lt;Form.Group&gt;\n          &lt;Form.Label className=\"mt-3\"&gt;\u0418\u0441\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c&lt;/Form.Label&gt;\n          &lt;Form.Control\n            as=\"select\"\n            name=\"performer\"\n            value={concertDetails.performer}\n            onChange={handleChange}\n          &gt;\n            &lt;option value=\"\"&gt;\u0412\u044b\u0431\u0435\u0440\u0438\u0442\u0435 \u0438\u0441\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044f&lt;/option&gt;\n            {performers.map((performer) =&gt; (\n              &lt;option key={performer.id} value={performer.id}&gt;\n                {performer.name}\n              &lt;/option&gt;\n            ))}\n          &lt;/Form.Control&gt;\n        &lt;/Form.Group&gt;\n\n        &lt;Form.Group&gt;\n          &lt;Form.Label className=\"mt-3\"&gt;\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435&lt;/Form.Label&gt;\n          &lt;Form.Control\n            type=\"text\"\n            name=\"description\"\n            value={concertDetails.description}\n            onChange={handleChange}\n          /&gt;\n        &lt;/Form.Group&gt;\n        &lt;Form.Group&gt;\n          &lt;Form.Label className=\"mt-3\"&gt;\u0414\u0430\u0442\u0430&lt;/Form.Label&gt;\n          &lt;Form.Control\n            type=\"date\"\n            name=\"date\"\n            value={concertDetails.date}\n            onChange={handleChange}\n          /&gt;\n        &lt;/Form.Group&gt;\n        &lt;Form.Group className=\"mt-3\"&gt;\n          &lt;Form.Label&gt;\u0412\u0440\u0435\u043c\u044f&lt;/Form.Label&gt;\n          &lt;Form.Control\n            type=\"time\"\n            name=\"time\"\n            value={concertDetails.time}\n            onChange={handleChange}\n          /&gt;\n        &lt;/Form.Group&gt;\n        &lt;Form.Group className=\"mt-3\"&gt;\n          &lt;Form.Label&gt;\u0412\u043e\u0437\u0440\u0430\u0441\u0442\u043d\u043e\u0435 \u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u0435&lt;/Form.Label&gt;\n          &lt;Form.Control\n            type=\"text\"\n            name=\"age_limit\"\n            value={concertDetails.age_limit}\n            onChange={handleChange}\n          /&gt;\n        &lt;/Form.Group&gt;\n\n        {/* \u041f\u043e\u043b\u0435 \u0434\u043b\u044f \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0438 \u0444\u043e\u0442\u043e */}\n        &lt;Form.Group className=\"mt-3\"&gt;\n          &lt;Form.Label&gt;\u0424\u043e\u0442\u043e&lt;/Form.Label&gt;\n          &lt;Form.Control\n            type=\"file\"\n            onChange={handleFileChange}\n          /&gt;\n        &lt;/Form.Group&gt;\n\n      &lt;Button type=\"submit\" className=\"mt-3\"&gt;\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u043a\u043e\u043d\u0446\u0435\u0440\u0442&lt;/Button&gt;\n      &lt;/Form&gt;\n    &lt;/div&gt;\n  );\n};\n\nexport default CreateConcert;\n\n</code></pre>"},{"location":"lr4/components/#_6","title":"\u041a\u043e\u043d\u0446\u0435\u0440\u0442\u044b \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0442\u043e\u0440\u0430","text":"<pre><code>import React, { useState, useEffect } from 'react';\nimport { Button, Accordion, ListGroup, Form, Modal } from 'react-bootstrap';\nimport axios from 'axios';\n\nconst MyConcerts = () =&gt; {\n  const [concerts, setConcerts] = useState([]);\n  const [selectedConcert, setSelectedConcert] = useState(null);\n  const [ticketName, setTicketName] = useState('');\n  const [ticketPrice, setTicketPrice] = useState('');\n  const [ticketCount, setTicketCount] = useState(1);\n  const [showModal, setShowModal] = useState(false);\n  const [currentConcertId, setCurrentConcertId] = useState(null);\n  const token = localStorage.getItem('token');\n\n  useEffect(() =&gt; {\n    axios.get('http://localhost:8000/organizer/concerts/', {\n      headers: { Authorization: `Token ${token}` },\n    })\n      .then((response) =&gt; setConcerts(response.data))\n      .catch((error) =&gt; console.error('\u041e\u0448\u0438\u0431\u043a\u0430 \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0438 \u043a\u043e\u043d\u0446\u0435\u0440\u0442\u043e\u0432:', error));\n  }, [token]);\n\n  const handleAddTickets = () =&gt; {\n    if (!ticketName || !ticketPrice || ticketCount &lt;= 0) {\n      alert(\"\u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u0443\u043a\u0430\u0436\u0438\u0442\u0435 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435, \u0446\u0435\u043d\u0443 \u0438 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0431\u0438\u043b\u0435\u0442\u043e\u0432 \u0431\u043e\u043b\u044c\u0448\u0435 0.\");\n      return;\n    }\n\n\n    axios.post(`http://localhost:8000/concerts/tickets/`, {\n      concert: currentConcertId,\n      name: ticketName,\n      price: ticketPrice,\n      total_quantity: ticketCount\n    }, {\n      headers: { Authorization: `Token ${token}` }\n    })\n    .then(() =&gt; {\n      alert('\u0411\u0438\u043b\u0435\u0442\u044b \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u044b');\n      setTicketName('');\n      setTicketPrice('');\n      setTicketCount(1);\n      setShowModal(false);\n\n      axios.get(`http://localhost:8000/concerts/${currentConcertId}/`, {\n        headers: { Authorization: `Token ${token}` },\n      })\n      .then((response) =&gt; {\n        setConcerts((prevConcerts) =&gt; prevConcerts.map((concert) =&gt; {\n          if (concert.id === currentConcertId) {\n            return { ...concert, tickets: response.data.tickets };\n          }\n          return concert;\n        }));\n\n      })\n      .catch((error) =&gt; alert('\u041e\u0448\u0438\u0431\u043a\u0430 \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f \u0431\u0438\u043b\u0435\u0442\u043e\u0432: ' + error.response.data));\n    })\n    .catch((error) =&gt; alert('\u041e\u0448\u0438\u0431\u043a\u0430 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0431\u0438\u043b\u0435\u0442\u043e\u0432: ' + error.response.data));\n  };\n\n  const handleConcertClick = (concertId) =&gt; {\n    if (selectedConcert === concertId) {\n      setSelectedConcert(null);\n      setTicketName('');\n      setTicketPrice('');\n      setTicketCount(1);\n    } else {\n      setSelectedConcert(concertId);\n    }\n  };\n\n  const handleSendStatusUpdate = (concertId) =&gt; {\n    axios.post(`http://localhost:8000/concerts/${concertId}/status/`, {}, {\n      headers: { Authorization: `Token ${token}` }\n    })\n    .then(() =&gt; {\n      alert('\u0421\u0442\u0430\u0442\u0443\u0441 \u043a\u043e\u043d\u0446\u0435\u0440\u0442\u0430 \u0438\u0437\u043c\u0435\u043d\u0435\u043d \u043d\u0430 \"\u041f\u043e\u0434\u0433\u043e\u0442\u043e\u0432\u043b\u0435\u043d\"');\n      setConcerts((prevConcerts) =&gt;\n        prevConcerts.map((concert) =&gt;\n          concert.id === concertId ? { ...concert, status: '\u041f\u043e\u0434\u0433\u043e\u0442\u043e\u0432\u043b\u0435\u043d' } : concert\n        )\n      );\n    })\n    .catch((error) =&gt; alert('\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0438 \u0441\u0442\u0430\u0442\u0443\u0441\u0430: ' + error.response.data));\n  };\n\n  return (\n    &lt;div&gt;\n      {concerts.length === 0 &amp;&amp; &lt;p className=\"mt-3\"&gt;\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0445 \u043a\u043e\u043d\u0446\u0435\u0440\u0442\u043e\u0432&lt;/p&gt;}\n      &lt;Accordion className=\"mt-3\"&gt;\n        {concerts.map((concert) =&gt; (\n          &lt;Accordion.Item key={concert.id} eventKey={concert.id.toString()}&gt;\n            &lt;Accordion.Header&gt;{concert.title}&lt;/Accordion.Header&gt;\n            &lt;Accordion.Body&gt;\n              &lt;p&gt;\u0414\u0430\u0442\u0430: {concert.date}, \u0412\u0440\u0435\u043c\u044f: {concert.time}&lt;/p&gt;\n\n              {/* \u041e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u0431\u0438\u043b\u0435\u0442\u043e\u0432 \u0434\u043b\u044f \u043a\u043e\u043d\u0446\u0435\u0440\u0442\u0430 */}\n              &lt;ListGroup className=\"mt-2\"&gt;\n                {concert.tickets &amp;&amp; concert.tickets.map((ticket) =&gt; (\n                  &lt;ListGroup.Item key={ticket.id}&gt;\n                    {ticket.name} - \u0426\u0435\u043d\u0430: {ticket.price} - \u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e: {ticket.total_quantity}\n                  &lt;/ListGroup.Item&gt;\n                ))}\n              &lt;/ListGroup&gt;\n\n                &lt;div className=\"d-flex gap-2 mt-3\"&gt;\n                  &lt;div className=\"d-flex gap-2\"&gt;\n                    &lt;Button onClick={() =&gt; {\n                      setCurrentConcertId(concert.id);\n                      setShowModal(true);\n                    }}&gt;\u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0431\u0438\u043b\u0435\u0442\u044b&lt;/Button&gt;\n                    &lt;Button onClick={() =&gt; handleSendStatusUpdate(concert.id)}&gt;\u041e\u0442\u043f\u0440\u0430\u0432\u0438\u0442\u044c&lt;/Button&gt;\n                  &lt;/div&gt;\n                &lt;/div&gt;\n\n            &lt;/Accordion.Body&gt;\n          &lt;/Accordion.Item&gt;\n        ))}\n      &lt;/Accordion&gt;\n\n      {/* \u041c\u043e\u0434\u0430\u043b\u044c\u043d\u043e\u0435 \u043e\u043a\u043d\u043e \u0434\u043b\u044f \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0431\u0438\u043b\u0435\u0442\u043e\u0432 */}\n      &lt;Modal show={showModal} onHide={() =&gt; setShowModal(false)}&gt;\n      &lt;Modal.Header closeButton&gt;\n          &lt;Modal.Title&gt;\u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0431\u0438\u043b\u0435\u0442\u044b&lt;/Modal.Title&gt;\n        &lt;/Modal.Header&gt;\n        &lt;Modal.Body&gt;\n          &lt;Form&gt;\n            &lt;Form.Group&gt;\n              &lt;Form.Label&gt;\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0431\u0438\u043b\u0435\u0442\u0430&lt;/Form.Label&gt;\n              &lt;Form.Control\n                type=\"text\"\n                placeholder=\"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0431\u0438\u043b\u0435\u0442\u0430\"\n                value={ticketName}\n                onChange={(e) =&gt; setTicketName(e.target.value)}\n              /&gt;\n            &lt;/Form.Group&gt;\n\n            &lt;Form.Group className=\"mt-2\"&gt;\n              &lt;Form.Label&gt;\u0426\u0435\u043d\u0430 \u0431\u0438\u043b\u0435\u0442\u0430&lt;/Form.Label&gt;\n              &lt;Form.Control\n                type=\"number\"\n                placeholder=\"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0446\u0435\u043d\u0443 \u0431\u0438\u043b\u0435\u0442\u0430\"\n                value={ticketPrice}\n                onChange={(e) =&gt; setTicketPrice(e.target.value)}\n              /&gt;\n            &lt;/Form.Group&gt;\n\n            &lt;Form.Group className=\"mt-2\"&gt;\n              &lt;Form.Label&gt;\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0431\u0438\u043b\u0435\u0442\u043e\u0432&lt;/Form.Label&gt;\n              &lt;Form.Control\n                type=\"number\"\n                placeholder=\"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0431\u0438\u043b\u0435\u0442\u043e\u0432\"\n                value={ticketCount}\n                onChange={(e) =&gt; setTicketCount(e.target.value)}\n              /&gt;\n            &lt;/Form.Group&gt;\n          &lt;/Form&gt;\n        &lt;/Modal.Body&gt;\n        &lt;Modal.Footer&gt;\n          &lt;Button variant=\"secondary\" onClick={() =&gt; setShowModal(false)}&gt;\n            \u0417\u0430\u043a\u0440\u044b\u0442\u044c\n          &lt;/Button&gt;\n          &lt;Button variant=\"primary\" onClick={handleAddTickets}&gt;\n            \u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c\n          &lt;/Button&gt;\n        &lt;/Modal.Footer&gt;\n      &lt;/Modal&gt;\n    &lt;/div&gt;\n  );\n};\n\nexport default MyConcerts;\n\n</code></pre>"},{"location":"lr4/components/#_7","title":"\u041f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u0438\u0435 \u0437\u0430\u043a\u0430\u0437\u043e\u0432","text":"<pre><code>import React, { useState, useEffect } from 'react';\nimport { Button, ListGroup, Accordion, Badge, Row, Col } from 'react-bootstrap';\nimport axios from 'axios';\n\nconst OrderConfirmation = () =&gt; {\n  const [pendingOrders, setPendingOrders] = useState([]);\n  const [historyOrders, setHistoryOrders] = useState([]);\n\n  const fetchOrders = () =&gt; {\n    const token = localStorage.getItem(\"token\");\n\n    axios.get('http://localhost:8000/orders/', {\n      headers: { Authorization: `Token ${token}` }\n    })\n      .then((response) =&gt; {\n        const pending = response.data.filter(order =&gt; order.status === \"pending\");\n        const history = response.data.filter(order =&gt; order.status === \"confirmed\" || order.status === \"returned\");\n\n        setPendingOrders(pending);\n        setHistoryOrders(history);\n      })\n      .catch((error) =&gt; console.error(\"\u041e\u0448\u0438\u0431\u043a\u0430 \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0438 \u0437\u0430\u043a\u0430\u0437\u043e\u0432\", error));\n  };\n\n  useEffect(() =&gt; {\n    fetchOrders();\n  }, []);\n\n  const handleConfirmOrder = (orderId) =&gt; {\n    const token = localStorage.getItem(\"token\");\n\n    axios.post(`http://localhost:8000/orders/${orderId}/confirm/`, {}, {\n      headers: { Authorization: `Token ${token}` }\n    })\n      .then(() =&gt; {\n        fetchOrders();  // \u0417\u0430\u0433\u0440\u0443\u0436\u0430\u0435\u043c \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u043d\u044b\u0435 \u0437\u0430\u043a\u0430\u0437\u044b\n      })\n      .catch((error) =&gt; console.error(\"\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430\", error));\n  };\n\n  const handleReturnOrder = (orderId) =&gt; {\n    const token = localStorage.getItem(\"token\");\n\n    axios.post(`http://localhost:8000/orders/${orderId}/return/`, {}, {\n      headers: { Authorization: `Token ${token}` }\n    })\n      .then(() =&gt; {\n        fetchOrders();\n      })\n      .catch((error) =&gt; console.error(\"\u041e\u0448\u0438\u0431\u043a\u0430 \u0432\u043e\u0437\u0432\u0440\u0430\u0442\u0430 \u0437\u0430\u043a\u0430\u0437\u0430\", error));\n  };\n\n  return (\n    &lt;div&gt;\n      &lt;ListGroup className=\"mt-3\"&gt;\n        {pendingOrders.length === 0 ? &lt;p className=\"mt-3\"&gt;\u041d\u0435\u0442 \u0437\u0430\u043a\u0430\u0437\u043e\u0432 \u0434\u043b\u044f \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u0438\u044f&lt;/p&gt; : null}\n        {pendingOrders.map((order) =&gt; (\n          &lt;ListGroup.Item key={order.id} className=\"order-item\"&gt;\n            &lt;Row&gt;\n              &lt;Col md={8}&gt;\n                &lt;p&gt;&lt;strong&gt;{order.concert.title}&lt;/strong&gt;&lt;/p&gt;\n                &lt;p&gt;{order.user.username} - {order.user.email}&lt;/p&gt;\n                &lt;p&gt;{order.quantity} \u0431\u0438\u043b\u0435\u0442\u043e\u0432 - {order.total_price} \u20bd&lt;/p&gt;\n              &lt;/Col&gt;\n              &lt;Col md={4} className=\"text-end d-flex flex-column align-items-end justify-content-center\"&gt;\n                &lt;Button variant=\"success\" onClick={() =&gt; handleConfirmOrder(order.id)} style={{ width: \"100%\" }} className=\"mb-2\"&gt;\n                  \u041f\u043e\u0434\u0442\u0432\u0435\u0440\u0434\u0438\u0442\u044c\n                &lt;/Button&gt;\n                &lt;Button variant=\"danger\" onClick={() =&gt; handleReturnOrder(order.id)} style={{ width: \"100%\" }}&gt;\n                  \u0412\u043e\u0437\u0432\u0440\u0430\u0442\n                &lt;/Button&gt;\n              &lt;/Col&gt;\n            &lt;/Row&gt;\n          &lt;/ListGroup.Item&gt;\n        ))}\n      &lt;/ListGroup&gt;\n\n      &lt;h2 className=\"mt-4\"&gt;\u0418\u0441\u0442\u043e\u0440\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u043e\u0432&lt;/h2&gt;\n      &lt;Accordion&gt;\n        &lt;Accordion.Item eventKey=\"0\"&gt;\n          &lt;Accordion.Header&gt;\u041f\u043e\u043a\u0430\u0437\u0430\u0442\u044c \u0438\u0441\u0442\u043e\u0440\u0438\u044e \u0437\u0430\u043a\u0430\u0437\u043e\u0432&lt;/Accordion.Header&gt;\n          &lt;Accordion.Body&gt;\n            &lt;ListGroup&gt;\n              {historyOrders.length === 0 ? &lt;p&gt;\u0418\u0441\u0442\u043e\u0440\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u043e\u0432 \u043f\u0443\u0441\u0442\u0430&lt;/p&gt; : null}\n              {historyOrders.map((order) =&gt; (\n                &lt;ListGroup.Item key={order.id} className=\"order-item\"&gt;\n                  &lt;Row&gt;\n                    &lt;Col md={8}&gt;\n                      &lt;p&gt;&lt;strong&gt;{order.concert.title}&lt;/strong&gt;&lt;/p&gt;\n                      &lt;p&gt;{order.user.username} - {order.user.email}&lt;/p&gt;\n                      &lt;p&gt;{order.quantity} \u0431\u0438\u043b\u0435\u0442\u043e\u0432 - {order.total_price} \u20bd&lt;/p&gt;\n                    &lt;/Col&gt;\n                    &lt;Col md={4} className=\"text-end d-flex align-items-center justify-content-end\"&gt;\n                      &lt;Badge className=\"orders-bd\" bg={order.status === \"confirmed\" ? \"success\" : \"danger\"}&gt;\n                        {order.status === \"confirmed\" ? \"\u041f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\" : \"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0435\u043d\"}\n                      &lt;/Badge&gt;\n                    &lt;/Col&gt;\n                  &lt;/Row&gt;\n                &lt;/ListGroup.Item&gt;\n              ))}\n            &lt;/ListGroup&gt;\n          &lt;/Accordion.Body&gt;\n        &lt;/Accordion.Item&gt;\n      &lt;/Accordion&gt;\n    &lt;/div&gt;\n  );\n};\n\nexport default OrderConfirmation;\n\n\n</code></pre>"},{"location":"lr4/components/#_8","title":"\u041a\u043e\u043d\u0446\u0435\u0440\u0442\u044b \u0434\u043b\u044f \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0442\u043e\u0440\u043e\u0432","text":"<pre><code>import React, { useState, useEffect } from \"react\";\nimport { Button, Card, Modal, Form } from \"react-bootstrap\";\nimport axios from \"axios\";\n\nconst Organization = () =&gt; {\n  const [concerts, setConcerts] = useState([]);\n  const [editConcert, setEditConcert] = useState(null);\n  const [performers, setPerformers] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const token = localStorage.getItem(\"token\");\n\n  useEffect(() =&gt; {\n    fetchConcerts();\n    fetchPerformers();\n  }, []);\n\n  const fetchConcerts = () =&gt; {\n    axios\n      .get(\"http://localhost:8000/concerts/\", {\n        headers: { Authorization: `Token ${token}` },\n      })\n      .then((response) =&gt; {\n        const filteredConcerts = response.data.filter(\n          (concert) =&gt; concert.status === \"created\"\n        );\n        setConcerts(filteredConcerts);\n      })\n      .catch((error) =&gt; console.error(\"\u041e\u0448\u0438\u0431\u043a\u0430 \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0438 \u043a\u043e\u043d\u0446\u0435\u0440\u0442\u043e\u0432:\", error));\n  };\n\n  const fetchPerformers = () =&gt; {\n    axios\n      .get(\"http://localhost:8000/performers/\", {\n        headers: { Authorization: `Token ${token}` },\n      })\n      .then((response) =&gt; {\n        setPerformers(response.data);\n      })\n      .catch((error) =&gt; console.error(\"\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0438 \u0441\u043f\u0438\u0441\u043a\u0430 \u0438\u0441\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u0435\u0439\", error));\n  };\n\n  const handleTakeInWork = (concertId) =&gt; {\n    axios\n      .post(`http://localhost:8000/organizer/assign/${concertId}/`, {}, {\n        headers: { Authorization: `Token ${token}` },\n      })\n      .then(() =&gt; {\n        setConcerts((prev) =&gt; prev.filter((concert) =&gt; concert.id !== concertId));\n        alert(\"\u041a\u043e\u043d\u0446\u0435\u0440\u0442 \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0432\u0437\u044f\u0442 \u0432 \u0440\u0430\u0431\u043e\u0442\u0443!\");\n      })\n      .catch((error) =&gt; alert(\"\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0438 \u043a\u043e\u043d\u0446\u0435\u0440\u0442\u0430\"));\n  };\n\n  const handleDeleteConcert = (concertId) =&gt; {\n    axios\n      .delete(`http://localhost:8000/concerts/${concertId}/delete/`, {\n        headers: { Authorization: `Token ${token}` },\n      })\n      .then(() =&gt; {\n        setConcerts((prev) =&gt; prev.filter((concert) =&gt; concert.id !== concertId));\n        alert(\"\u041a\u043e\u043d\u0446\u0435\u0440\u0442 \u0443\u0434\u0430\u043b\u0435\u043d\");\n      })\n      .catch((error) =&gt; alert(\"\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0438 \u043a\u043e\u043d\u0446\u0435\u0440\u0442\u0430\"));\n  };\n\n  const handleEditConcert = (concert) =&gt; {\n    setEditConcert(concert);\n    setShowModal(true);\n  };\n\n  const handleSaveConcert = () =&gt; {\n    const formData = new FormData();\n    formData.append(\"title\", editConcert.title);\n    formData.append(\"description\", editConcert.description);\n    formData.append(\"performer\", editConcert.performer);\n    formData.append(\"image\", editConcert.image);\n\n    axios\n      .patch(`http://localhost:8000/concerts/${editConcert.id}/update/`, formData, {\n        headers: {\n          Authorization: `Token ${token}`,\n          \"Content-Type\": \"multipart/form-data\",  // \u0412\u0430\u0436\u043d\u044b\u0439 \u043c\u043e\u043c\u0435\u043d\u0442\n        },\n      })\n      .then(() =&gt; {\n        fetchConcerts();\n        setShowModal(false);\n      })\n      .catch((error) =&gt; alert(\"\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0438 \u043a\u043e\u043d\u0446\u0435\u0440\u0442\u0430\"));\n  };\n\n  const handleCreateConcert = (newConcert) =&gt; {\n    const formData = new FormData();\n    formData.append(\"title\", newConcert.title);\n    formData.append(\"description\", newConcert.description);\n    formData.append(\"performer\", newConcert.performer);\n    formData.append(\"image\", newConcert.image);\n\n    axios\n      .post(\"http://localhost:8000/concerts/create/\", formData, {\n        headers: {\n          Authorization: `Token ${token}`,\n          \"Content-Type\": \"multipart/form-data\",\n        },\n      })\n      .then((response) =&gt; {\n        setConcerts((prevConcerts) =&gt; [...prevConcerts, response.data]);\n        alert(\"\u041a\u043e\u043d\u0446\u0435\u0440\u0442 \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0441\u043e\u0437\u0434\u0430\u043d!\");\n      })\n      .catch((error) =&gt; alert(\"\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0438 \u043a\u043e\u043d\u0446\u0435\u0440\u0442\u0430\"));\n  };\n\n  return (\n    &lt;div&gt;\n      {concerts.length === 0 ? &lt;p className=\"mt-3\"&gt;\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0445 \u043a\u043e\u043d\u0446\u0435\u0440\u0442\u043e\u0432&lt;/p&gt; : null}\n      {concerts.map((concert) =&gt; (\n        &lt;Card key={concert.id} className=\"mt-3\"&gt;\n          &lt;Card.Body &gt;\n            &lt;Card.Title&gt;{concert.title}&lt;/Card.Title&gt;\n            &lt;Card.Text&gt;{concert.description}&lt;/Card.Text&gt;\n            &lt;Button variant=\"success\" onClick={() =&gt; handleTakeInWork(concert.id)}&gt;\n              \u0412\u0437\u044f\u0442\u044c \u0432 \u0440\u0430\u0431\u043e\u0442\u0443\n            &lt;/Button&gt;{\" \"}\n            &lt;Button variant=\"warning\" onClick={() =&gt; handleEditConcert(concert)}&gt;\n              \u0420\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c\n            &lt;/Button&gt;{\" \"}\n            &lt;Button variant=\"danger\" onClick={() =&gt; handleDeleteConcert(concert.id)}&gt;\n              \u0423\u0434\u0430\u043b\u0438\u0442\u044c\n            &lt;/Button&gt;\n          &lt;/Card.Body&gt;\n        &lt;/Card&gt;\n      ))}\n\n      {/* \u041c\u043e\u0434\u0430\u043b\u044c\u043d\u043e\u0435 \u043e\u043a\u043d\u043e \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u043a\u043e\u043d\u0446\u0435\u0440\u0442\u0430 */}\n      &lt;Modal show={showModal} onHide={() =&gt; setShowModal(false)}&gt;\n        &lt;Modal.Header closeButton&gt;\n          &lt;Modal.Title&gt;\u0420\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043a\u043e\u043d\u0446\u0435\u0440\u0442&lt;/Modal.Title&gt;\n        &lt;/Modal.Header&gt;\n        &lt;Modal.Body&gt;\n          &lt;Form&gt;\n            &lt;Form.Group className=\"mb-3\"&gt;\n              &lt;Form.Label&gt;\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435&lt;/Form.Label&gt;\n              &lt;Form.Control\n                type=\"text\"\n                value={editConcert?.title || \"\"}\n                onChange={(e) =&gt; setEditConcert({ ...editConcert, title: e.target.value })}\n              /&gt;\n            &lt;/Form.Group&gt;\n            &lt;Form.Group className=\"mb-3\"&gt;\n              &lt;Form.Label&gt;\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435&lt;/Form.Label&gt;\n              &lt;Form.Control\n                as=\"textarea\"\n                rows={3}\n                value={editConcert?.description || \"\"}\n                onChange={(e) =&gt; setEditConcert({ ...editConcert, description: e.target.value })}\n              /&gt;\n            &lt;/Form.Group&gt;\n            &lt;Form.Group className=\"mb-3\"&gt;\n              &lt;Form.Label&gt;\u0418\u0441\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c&lt;/Form.Label&gt;\n              &lt;Form.Control\n                as=\"select\"\n                value={editConcert?.performer || \"\"}\n                onChange={(e) =&gt; setEditConcert({ ...editConcert, performer: e.target.value })}\n              &gt;\n                &lt;option value=\"\"&gt;\u0412\u044b\u0431\u0435\u0440\u0438\u0442\u0435 \u0438\u0441\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044f&lt;/option&gt;\n                {performers.map((performer) =&gt; (\n                  &lt;option key={performer.id} value={performer.id}&gt;\n                    {performer.name}\n                  &lt;/option&gt;\n                ))}\n              &lt;/Form.Control&gt;\n            &lt;/Form.Group&gt;\n            &lt;Form.Group className=\"mb-3\"&gt;\n              &lt;Form.Label&gt;\u0424\u043e\u0442\u043e&lt;/Form.Label&gt;\n              &lt;Form.Control\n                type=\"file\"\n                onChange={(e) =&gt; setEditConcert({ ...editConcert, image: e.target.files[0] })}\n              /&gt;\n            &lt;/Form.Group&gt;\n          &lt;/Form&gt;\n        &lt;/Modal.Body&gt;\n        &lt;Modal.Footer&gt;\n          &lt;Button variant=\"secondary\" onClick={() =&gt; setShowModal(false)}&gt;\n            \u041e\u0442\u043c\u0435\u043d\u0430\n          &lt;/Button&gt;\n          &lt;Button variant=\"primary\" onClick={handleSaveConcert}&gt;\n            \u0421\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u044c\n          &lt;/Button&gt;\n        &lt;/Modal.Footer&gt;\n      &lt;/Modal&gt;\n    &lt;/div&gt;\n  );\n};\n\nexport default Organization;\n</code></pre>"},{"location":"lr4/components/#_9","title":"\u041e\u0442\u0447\u0435\u0442 \u043f\u043e \u043f\u0440\u043e\u0434\u0430\u0436\u0430\u043c","text":"<pre><code>import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst SalesReport = () =&gt; {\n  const [report, setReport] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() =&gt; {\n    const fetchReport = async () =&gt; {\n      try {\n        const response = await axios.get(\"http://localhost:8000/report/\", {\n          headers: { Authorization: `Token ${localStorage.getItem(\"token\")}` },\n        });\n        setReport(response.data);\n      } catch (error) {\n        console.error(\"\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0435 \u043e\u0442\u0447\u0435\u0442\u0430:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchReport();\n  }, []);\n\n  if (loading) return &lt;div className=\"container mt-4\"&gt;\u0417\u0430\u0433\u0440\u0443\u0437\u043a\u0430 \u043e\u0442\u0447\u0435\u0442\u0430...&lt;/div&gt;;\n\n  const totalRevenue = report.reduce((acc, concert) =&gt; acc + concert.total_revenue, 0);\n\n  return (\n    &lt;div className=\"container mt-4\"&gt;\n      &lt;table className=\"table\"&gt;\n        &lt;thead&gt;\n          &lt;tr&gt;\n            &lt;th&gt;#&lt;/th&gt;\n            &lt;th&gt;\u041a\u043e\u043d\u0446\u0435\u0440\u0442&lt;/th&gt;\n            &lt;th&gt;\u0414\u0430\u0442\u0430&lt;/th&gt;\n            &lt;th&gt;\u041f\u0440\u043e\u0434\u0430\u043d\u043e \u0431\u0438\u043b\u0435\u0442\u043e\u0432&lt;/th&gt;\n            &lt;th&gt;\u0412\u044b\u0440\u0443\u0447\u043a\u0430 (\u20bd)&lt;/th&gt;\n          &lt;/tr&gt;\n        &lt;/thead&gt;\n        &lt;tbody&gt;\n          {report.map((concert, index) =&gt; (\n            &lt;tr key={concert.concert_id}&gt;\n              &lt;td&gt;{index + 1}&lt;/td&gt;\n              &lt;td&gt;{concert.concert_title}&lt;/td&gt;\n              &lt;td&gt;{new Date(concert.date).toLocaleDateString()}&lt;/td&gt;\n              &lt;td&gt;{concert.tickets_sold}&lt;/td&gt;\n              &lt;td&gt;{concert.total_revenue.toLocaleString()} \u20bd&lt;/td&gt;\n            &lt;/tr&gt;\n          ))}\n        &lt;/tbody&gt;\n      &lt;/table&gt;\n\n      &lt;div className=\"mt-3\"&gt;\n        &lt;strong&gt;\u041e\u0431\u0449\u0430\u044f \u0432\u044b\u0440\u0443\u0447\u043a\u0430: &lt;/strong&gt;\n        {totalRevenue.toLocaleString()} \u20bd\n      &lt;/div&gt;\n    &lt;/div&gt;\n  );\n};\n\nexport default SalesReport;\n\n</code></pre>"},{"location":"lr4/leetcode/","title":"Leetcode","text":""},{"location":"lr4/leetcode/#leetcode","title":"Leetcode","text":""},{"location":"lr4/leetcode/#27-remove-element","title":"27. Remove Element","text":"<p>Given an integer array nums and an integer val, remove all occurrences of val in nums in-place. The order of the elements may be changed. Then return the number of elements in nums which are not equal to val.</p> <p>Consider the number of elements in nums which are not equal to val be k, to get accepted, you need to do the following things:</p> <p>Change the array nums such that the first k elements of nums contain the elements which are not equal to val. The remaining elements of nums are not important as well as the size of nums. Return k. Custom Judge:</p> <p>The judge will test your solution with the following code:</p> <p>int[] nums = [...]; // Input array int val = ...; // Value to remove int[] expectedNums = [...]; // The expected answer with correct length.                             // It is sorted with no values equaling val.</p> <p>int k = removeElement(nums, val); // Calls your implementation</p> <p>assert k == expectedNums.length; sort(nums, 0, k); // Sort the first k elements of nums for (int i = 0; i &lt; actualLength; i++) {     assert nums[i] == expectedNums[i]; } If all assertions pass, then your solution will be accepted.</p> <p>Example 1:</p> <p>Input: nums = [3,2,2,3], val = 3 Output: 2, nums = [2,2,,] Explanation: Your function should return k = 2, with the first two elements of nums being 2. It does not matter what you leave beyond the returned k (hence they are underscores). Example 2:</p> <p>Input: nums = [0,1,2,2,3,0,4,2], val = 2 Output: 5, nums = [0,1,4,0,3,,,_] Explanation: Your function should return k = 5, with the first five elements of nums containing 0, 0, 1, 3, and 4. Note that the five elements can be returned in any order. It does not matter what you leave beyond the returned k (hence they are underscores).</p> <p>Constraints:</p> <p>0 &lt;= nums.length &lt;= 100 0 &lt;= nums[i] &lt;= 50 0 &lt;= val &lt;= 100</p>"},{"location":"lr4/leetcode/#solution","title":"Solution","text":"<pre><code>class Solution:\n    def removeElement(self, nums: List[int], val: int) -&gt; int:\n        count = 0\n        for i in range(len(nums))[::-1]:\n            if nums[i] == val:\n                nums.pop(i)\n                nums.append('_')\n                count += 1\n        return len(nums)-count        \n\n</code></pre>"},{"location":"lr4/leetcode/#88-merge-sorted-array","title":"88. Merge Sorted Array","text":"<p>You are given two integer arrays nums1 and nums2, sorted in non-decreasing order, and two integers m and n, representing the number of elements in nums1 and nums2 respectively.</p> <p>Merge nums1 and nums2 into a single array sorted in non-decreasing order.</p> <p>The final sorted array should not be returned by the function, but instead be stored inside the array nums1. To accommodate this, nums1 has a length of m + n, where the first m elements denote the elements that should be merged, and the last n elements are set to 0 and should be ignored. nums2 has a length of n.</p> <p>Example 1:</p> <p>Input: nums1 = [1,2,3,0,0,0], m = 3, nums2 = [2,5,6], n = 3 Output: [1,2,2,3,5,6] Explanation: The arrays we are merging are [1,2,3] and [2,5,6]. The result of the merge is [1,2,2,3,5,6] with the underlined elements coming from nums1. Example 2:</p> <p>Input: nums1 = [1], m = 1, nums2 = [], n = 0 Output: [1] Explanation: The arrays we are merging are [1] and []. The result of the merge is [1]. Example 3:</p> <p>Input: nums1 = [0], m = 0, nums2 = [1], n = 1 Output: [1] Explanation: The arrays we are merging are [] and [1]. The result of the merge is [1]. Note that because m = 0, there are no elements in nums1. The 0 is only there to ensure the merge result can fit in nums1.</p> <p>Constraints:</p> <p>nums1.length == m + n nums2.length == n 0 &lt;= m, n &lt;= 200 1 &lt;= m + n &lt;= 200 -109 &lt;= nums1[i], nums2[j] &lt;= 109</p>"},{"location":"lr4/leetcode/#solution_1","title":"Solution","text":"<pre><code>class Solution:\n    def merge(self, nums1: List[int], m: int, nums2: List[int], n: int) -&gt; None:\n        \"\"\"\n        Do not return anything, modify nums1 in-place instead.\n        \"\"\"\n        del nums1[m:m+n]\n        for i in range(n):\n            k=0\n            while k in range (len(nums1)) and nums1[k] &lt; nums2[i]:\n                k+=1\n            nums1.insert(k, nums2[i])\n\n</code></pre>"},{"location":"lr4/leetcode/#238-product-of-array-except-self","title":"238. Product of Array Except Self","text":"<p>Given an integer array nums, return an array answer such that answer[i] is equal to the product of all the elements of nums except nums[i].</p> <p>The product of any prefix or suffix of nums is guaranteed to fit in a 32-bit integer.</p> <p>You must write an algorithm that runs in O(n) time and without using the division operation.</p> <p>Example 1:</p> <p>Input: nums = [1,2,3,4] Output: [24,12,8,6]</p> <p>Example 2:</p> <p>Input: nums = [-1,1,0,-3,3] Output: [0,0,9,0,0]</p> <p>Constraints:</p> <p>2 &lt;= nums.length &lt;= 105 -30 &lt;= nums[i] &lt;= 30 The product of any prefix or suffix of nums is guaranteed to fit in a 32-bit integer.</p>"},{"location":"lr4/leetcode/#solution_2","title":"Solution","text":"<pre><code>class Solution:\n    def productExceptSelf(self, nums: List[int]) -&gt; List[int]:\n        n = len(nums)\n        answer = [1] * n\n\n        left_product = 1\n        for i in range(n):\n            answer[i] = left_product\n            left_product *= nums[i]\n\n        right_product = 1\n        for i in range(n - 1, -1, -1):\n            answer[i] *= right_product\n            right_product *= nums[i]\n\n        return answer\n</code></pre>"},{"location":"lr4/pages/","title":"\u0421\u0442\u0440\u0430\u043d\u0438\u0446\u044b","text":""},{"location":"lr4/pages/#_2","title":"\u0421\u0442\u0430\u043d\u0438\u0446\u0430 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438","text":"<pre><code>import React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate, Link } from 'react-router-dom';\n\nconst RegisterPage = () =&gt; {\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n  const navigate = useNavigate();\n\n  const handleSubmit = async (e) =&gt; {\n    e.preventDefault();\n    try {\n      const response = await axios.post('http://localhost:8000/auth/register/', {\n        username,\n        email,\n        password\n      });\n      setSuccess('\u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u0443\u0441\u043f\u0435\u0448\u043d\u0430! \u0422\u0435\u043f\u0435\u0440\u044c \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0432\u043e\u0439\u0442\u0438.');\n      setError(null);\n      setTimeout(() =&gt; navigate('/login'), 2000);\n    } catch (err) {\n      setError('\u041e\u0448\u0438\u0431\u043a\u0430 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438. \u0412\u043e\u0437\u043c\u043e\u0436\u043d\u043e, \u0438\u043c\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0443\u0436\u0435 \u0437\u0430\u043d\u044f\u0442\u043e.');\n      setSuccess(null);\n    }\n  };\n\n  return (\n    &lt;div className=\"container d-flex justify-content-center align-items-center vh-100\"&gt;\n      &lt;div className=\"card p-4 shadow\" style={{ width: '300px' }}&gt;\n        &lt;h2 className=\"text-center\"&gt;\u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f&lt;/h2&gt;\n        &lt;form onSubmit={handleSubmit}&gt;\n          &lt;div className=\"mb-3\"&gt;\n            &lt;input className=\"form-control\" type=\"text\" placeholder=\"\u0418\u043c\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\" value={username} onChange={(e) =&gt; setUsername(e.target.value)} required /&gt;\n          &lt;/div&gt;\n          &lt;div className=\"mb-3\"&gt;\n            &lt;input className=\"form-control\" type=\"email\" placeholder=\"Email\" value={email} onChange={(e) =&gt; setEmail(e.target.value)} /&gt;\n          &lt;/div&gt;\n          &lt;div className=\"mb-3\"&gt;\n            &lt;input className=\"form-control\" type=\"password\" placeholder=\"\u041f\u0430\u0440\u043e\u043b\u044c\" value={password} onChange={(e) =&gt; setPassword(e.target.value)} required /&gt;\n          &lt;/div&gt;\n          &lt;button className=\"btn btn-primary w-100\" type=\"submit\"&gt;\u0417\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f&lt;/button&gt;\n        &lt;/form&gt;\n        {error &amp;&amp; &lt;p className=\"text-danger text-center mt-2\"&gt;{error}&lt;/p&gt;}\n        {success &amp;&amp; &lt;p className=\"text-success text-center mt-2\"&gt;{success}&lt;/p&gt;}\n        &lt;p className=\"text-center mt-3\"&gt;\u0423\u0436\u0435 \u0435\u0441\u0442\u044c \u0430\u043a\u043a\u0430\u0443\u043d\u0442? &lt;Link to=\"/login\"&gt;\u0412\u043e\u0439\u0442\u0438&lt;/Link&gt;&lt;/p&gt;\n      &lt;/div&gt;\n    &lt;/div&gt;\n  );\n};\n\nexport default RegisterPage;\n\n</code></pre>"},{"location":"lr4/pages/#_3","title":"\u0421\u0442\u0430\u043d\u0438\u0446\u0430 \u0432\u0445\u043e\u0434\u0430","text":"<pre><code>import React, { useState } from 'react';\nimport axios from 'axios';\nimport {Link, useNavigate} from \"react-router-dom\";\n\nconst LoginPage = () =&gt; {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n\n\n  const handleSubmit = async (e) =&gt; {\n    e.preventDefault();\n    try {\n      const response = await axios.post('http://localhost:8000/auth/login/', { username, password });\n      const response2 = await axios.post('http://localhost:8000/auth/token/token/login', { username, password });\n      localStorage.setItem('access_token', response.data.access);\n      localStorage.setItem('refresh_token', response.data.refresh);\n      localStorage.setItem('token', response2.data.auth_token)\n      console.log(response2)\n      setError(null);\n      navigate(\"/\");\n    } catch (err) {\n      setError('\u041d\u0435\u0432\u0435\u0440\u043d\u043e\u0435 \u0438\u043c\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0438\u043b\u0438 \u043f\u0430\u0440\u043e\u043b\u044c');\n    }\n  };\n\n  return (\n    &lt;div className=\"container d-flex justify-content-center align-items-center vh-100\"&gt;\n      &lt;div className=\"card p-4 shadow\" style={{width: '300px'}}&gt;\n        &lt;h2 className=\"text-center\"&gt;\u0412\u0445\u043e\u0434&lt;/h2&gt;\n        &lt;form onSubmit={handleSubmit}&gt;\n          &lt;div className=\"mb-3\"&gt;\n            &lt;input className=\"form-control\" type=\"text\" placeholder=\"\u0418\u043c\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\" value={username}\n                   onChange={(e) =&gt; setUsername(e.target.value)}/&gt;\n          &lt;/div&gt;\n          &lt;div className=\"mb-3\"&gt;\n            &lt;input className=\"form-control\" type=\"password\" placeholder=\"\u041f\u0430\u0440\u043e\u043b\u044c\" value={password}\n                   onChange={(e) =&gt; setPassword(e.target.value)}/&gt;\n          &lt;/div&gt;\n          &lt;button className=\"btn btn-primary w-100\" type=\"submit\"&gt;\u0412\u043e\u0439\u0442\u0438&lt;/button&gt;\n        &lt;/form&gt;\n        {error &amp;&amp; &lt;p className=\"text-danger text-center mt-2\"&gt;{error}&lt;/p&gt;}\n        &lt;p className=\"text-center mt-3\"&gt;\u0412\u043f\u0435\u0440\u0432\u044b\u0435 \u0437\u0434\u0435\u0441\u044c? &lt;Link to=\"/register\"&gt;\u0417\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f&lt;/Link&gt;&lt;/p&gt;\n      &lt;/div&gt;\n    &lt;/div&gt;\n  );\n};\n\nexport default LoginPage;\n</code></pre>"},{"location":"lr4/pages/#_4","title":"\u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u043a\u043e\u043d\u0446\u0435\u0440\u0442\u043e\u0432","text":"<pre><code>import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport ConcertCard from '../components/ConcertCard';\n\nconst HomePage = () =&gt; {\n  const [concerts, setConcerts] = useState([]);\n\n  useEffect(() =&gt; {\n    const fetchConcerts = async () =&gt; {\n      try {\n        const response = await axios.get('http://localhost:8000/concerts/');\n        setConcerts(response.data);\n      } catch (error) {\n        console.error('Error fetching concerts', error);\n      }\n    };\n    fetchConcerts();\n  }, []);\n\n  const upcomingConcerts = concerts.filter(concert =&gt; concert.status === 'prepared');\n  const pastConcerts = concerts.filter(concert =&gt; concert.status === 'held');\n\n  return (\n    &lt;div&gt;\n      &lt;main className=\"container mt-4\"&gt;\n        &lt;h2 className=\"mt-5 mb-3\"&gt;\u041f\u0440\u0435\u0434\u0441\u0442\u043e\u044f\u0449\u0438\u0435 \u043a\u043e\u043d\u0446\u0435\u0440\u0442\u044b&lt;/h2&gt;\n        &lt;div className=\"row gx-4 mt-2\"&gt;\n          {upcomingConcerts.map(concert =&gt; (\n              &lt;div className=\"col-md-4 col-sm-6 mb-4\" key={concert.id}&gt;\n                &lt;ConcertCard concert={concert}/&gt;\n              &lt;/div&gt;\n          ))}\n        &lt;/div&gt;\n\n        &lt;h2 className=\"mt-5 mb-3\"&gt;\u041f\u0440\u043e\u0448\u0435\u0434\u0448\u0438\u0435 \u043a\u043e\u043d\u0446\u0435\u0440\u0442\u044b&lt;/h2&gt;\n        &lt;div className=\"row gx-4 mt-2\"&gt;\n          {pastConcerts.map(concert =&gt; (\n              &lt;div className=\"col-md-4 col-sm-6 mb-4\" key={concert.id}&gt;\n                &lt;ConcertCard concert={concert}/&gt;\n              &lt;/div&gt;\n          ))}\n        &lt;/div&gt;\n      &lt;/main&gt;\n    &lt;/div&gt;\n  );\n};\n\nexport default HomePage;\n</code></pre>"},{"location":"lr4/pages/#_5","title":"\u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u043a\u043e\u043d\u0446\u0435\u0440\u0442\u0430","text":"<pre><code>import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { formatInTimeZone } from 'date-fns-tz';\nimport { ru } from 'date-fns/locale';\n\nconst ConcertDetail = () =&gt; {\n  const { id } = useParams();\n  const [concert, setConcert] = useState(null);\n\n  useEffect(() =&gt; {\n    const fetchConcert = async () =&gt; {\n      try {\n        const response = await axios.get(`http://localhost:8000/concerts/${id}/`);\n        setConcert(response.data);\n      } catch (error) {\n        console.error('Error fetching concert details', error);\n      }\n    };\n    fetchConcert();\n  }, [id]);\n\n  if (!concert) return &lt;div&gt;Loading...&lt;/div&gt;;\n\n  const timeZone = 'Europe/Moscow';\n  const dateObj = new Date(concert.date);\n  const timeObj = new Date(`${concert.date}T${concert.time}`);\n  const formattedDate = formatInTimeZone(dateObj, timeZone, \"d MMMM\", { locale: ru });\n  const formattedTime = formatInTimeZone(timeObj, timeZone, \"HH:mm\", { locale: ru });\n console.log(concert.tickets)\n  return (\n    &lt;div className=\"container mt-4\"&gt;\n      &lt;img\n        src={concert.image}\n        className=\"card-img-top\"\n        alt={concert.title}\n        style={{ width: '100%', height: '300px', objectFit: 'cover' }}\n      /&gt;\n      &lt;h1 className=\"mt-2\"&gt;{concert.title}&lt;/h1&gt;\n      &lt;p&gt;{formattedDate}, {formattedTime} \u2022 {concert.age_limit}+&lt;/p&gt;\n      &lt;p&gt;{concert.description}&lt;/p&gt;\n\n      {concert.status !== 'held' &amp;&amp; (\n        concert.tickets?.length &gt; 0 ? (\n            &lt;div&gt;\n                &lt;h3&gt;\u0414\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0435 \u0431\u0438\u043b\u0435\u0442\u044b&lt;/h3&gt;\n                &lt;div style={{overflowX: 'auto', whiteSpace: 'nowrap', paddingBottom: '10px'}}&gt;\n                    &lt;div className=\"d-flex mt-2\" style={{gap: '10px', flexWrap: 'nowrap'}}&gt;\n                        {concert.tickets.map(ticket =&gt; (\n                            &lt;div className=\"card\" key={ticket.id} style={{width: '300px', flex: '0 0 auto'}}&gt;\n                                &lt;div className=\"card-body\"&gt;\n                                    &lt;h5 className=\"card-title\"&gt;{ticket.name}&lt;/h5&gt;\n                                    &lt;p className=\"card-text\"&gt;&lt;strong&gt;\u0426\u0435\u043d\u0430:&lt;/strong&gt; {ticket.price} \u20bd&lt;/p&gt;\n                                    &lt;p className=\"card-text\"&gt;&lt;strong&gt;\u041e\u0441\u0442\u0430\u043b\u043e\u0441\u044c\n                                        \u0431\u0438\u043b\u0435\u0442\u043e\u0432:&lt;/strong&gt; {ticket.available_quantity}&lt;/p&gt;\n                                    &lt;a href={`/orders/${ticket.id}`} className=\"btn btn-primary\"&gt;\u041a\u0443\u043f\u0438\u0442\u044c \u0431\u0438\u043b\u0435\u0442&lt;/a&gt;\n                                &lt;/div&gt;\n                            &lt;/div&gt;\n                        ))}\n                    &lt;/div&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n        ) : (\n            &lt;p&gt;\u0411\u0438\u043b\u0435\u0442\u044b \u043d\u0435\u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b \u0434\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u043a\u043e\u043d\u0446\u0435\u0440\u0442\u0430.&lt;/p&gt;\n        )\n      )}\n    &lt;/div&gt;\n  );\n};\n\nexport default ConcertDetail;\n\n</code></pre>"},{"location":"lr4/pages/#_6","title":"\u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u043f\u043e\u043a\u0443\u043f\u043a\u0438 \u0431\u0438\u043b\u0435\u0442\u0430","text":"<pre><code>import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { formatInTimeZone } from 'date-fns-tz';\nimport { ru } from 'date-fns/locale';\n\nconst ConcertDetail = () =&gt; {\n  const { id } = useParams();\n  const [concert, setConcert] = useState(null);\n\n  useEffect(() =&gt; {\n    const fetchConcert = async () =&gt; {\n      try {\n        const response = await axios.get(`http://localhost:8000/concerts/${id}/`);\n        setConcert(response.data);\n      } catch (error) {\n        console.error('Error fetching concert details', error);\n      }\n    };\n    fetchConcert();\n  }, [id]);\n\n  if (!concert) return &lt;div&gt;Loading...&lt;/div&gt;;\n\n  const timeZone = 'Europe/Moscow';\n  const dateObj = new Date(concert.date);\n  const timeObj = new Date(`${concert.date}T${concert.time}`);\n  const formattedDate = formatInTimeZone(dateObj, timeZone, \"d MMMM\", { locale: ru });\n  const formattedTime = formatInTimeZone(timeObj, timeZone, \"HH:mm\", { locale: ru });\n console.log(concert.tickets)\n  return (\n    &lt;div className=\"container mt-4\"&gt;\n      &lt;img\n        src={concert.image}\n        className=\"card-img-top\"\n        alt={concert.title}\n        style={{ width: '100%', height: '300px', objectFit: 'cover' }}\n      /&gt;\n      &lt;h1 className=\"mt-2\"&gt;{concert.title}&lt;/h1&gt;\n      &lt;p&gt;{formattedDate}, {formattedTime} \u2022 {concert.age_limit}+&lt;/p&gt;\n      &lt;p&gt;{concert.description}&lt;/p&gt;\n\n      {concert.status !== 'held' &amp;&amp; (\n        concert.tickets?.length &gt; 0 ? (\n            &lt;div&gt;\n                &lt;h3&gt;\u0414\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0435 \u0431\u0438\u043b\u0435\u0442\u044b&lt;/h3&gt;\n                &lt;div style={{overflowX: 'auto', whiteSpace: 'nowrap', paddingBottom: '10px'}}&gt;\n                    &lt;div className=\"d-flex mt-2\" style={{gap: '10px', flexWrap: 'nowrap'}}&gt;\n                        {concert.tickets.map(ticket =&gt; (\n                            &lt;div className=\"card\" key={ticket.id} style={{width: '300px', flex: '0 0 auto'}}&gt;\n                                &lt;div className=\"card-body\"&gt;\n                                    &lt;h5 className=\"card-title\"&gt;{ticket.name}&lt;/h5&gt;\n                                    &lt;p className=\"card-text\"&gt;&lt;strong&gt;\u0426\u0435\u043d\u0430:&lt;/strong&gt; {ticket.price} \u20bd&lt;/p&gt;\n                                    &lt;p className=\"card-text\"&gt;&lt;strong&gt;\u041e\u0441\u0442\u0430\u043b\u043e\u0441\u044c\n                                        \u0431\u0438\u043b\u0435\u0442\u043e\u0432:&lt;/strong&gt; {ticket.available_quantity}&lt;/p&gt;\n                                    &lt;a href={`/orders/${ticket.id}`} className=\"btn btn-primary\"&gt;\u041a\u0443\u043f\u0438\u0442\u044c \u0431\u0438\u043b\u0435\u0442&lt;/a&gt;\n                                &lt;/div&gt;\n                            &lt;/div&gt;\n                        ))}\n                    &lt;/div&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n        ) : (\n            &lt;p&gt;\u0411\u0438\u043b\u0435\u0442\u044b \u043d\u0435\u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b \u0434\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u043a\u043e\u043d\u0446\u0435\u0440\u0442\u0430.&lt;/p&gt;\n        )\n      )}\n    &lt;/div&gt;\n  );\n};\n\nexport default ConcertDetail;\n\n</code></pre>"},{"location":"lr4/pages/#_7","title":"\u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0437\u0430\u043a\u0430\u0437\u043e\u0432 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f","text":"<pre><code>import React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\n\nconst statusColors = {\n  confirmed: \"bg-success\",\n  pending: \"bg-warning\",\n  returned: \"bg-danger\"\n};\n\nconst statusLabels = {\n  confirmed: \"\u041f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u043e\",\n  pending: \"\u0412 \u043e\u0436\u0438\u0434\u0430\u043d\u0438\u0438\",\n  returned: \"\u0412\u043e\u0437\u0432\u0440\u0430\u0442\"\n};\n\nconst UserProfile = () =&gt; {\n  const [orders, setOrders] = useState([]);\n  const navigate = useNavigate();\n\n  useEffect(() =&gt; {\n    const fetchOrders = async () =&gt; {\n      try {\n        const response = await axios.get(\"http://localhost:8000/orders/my/\", {\n          headers: { Authorization: `Token ${localStorage.getItem(\"token\")}` },\n        });\n        setOrders(response.data);\n      } catch (error) {\n        console.error(\"\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0435 \u0437\u0430\u043a\u0430\u0437\u043e\u0432:\", error);\n      }\n    };\n\n    fetchOrders();\n  }, []);\n\n  return (\n    &lt;div className=\"container mt-4\"&gt;\n      &lt;h2&gt;\u041c\u043e\u0438 \u0431\u0438\u043b\u0435\u0442\u044b&lt;/h2&gt;\n      {orders.length &gt; 0 ? (\n        &lt;ul className=\"list-group mt-2\"&gt;\n          {orders.map(order =&gt; (\n            &lt;li\n              key={order.id}\n              className=\"list-group-item d-flex justify-content-between align-items-center\"\n              onClick={() =&gt; navigate(`/concerts/${order.concert.id}`)}\n              style={{ cursor: \"pointer\" }}\n            &gt;\n              &lt;div&gt;\n                &lt;p className=\"mb-1\"&gt;&lt;strong&gt;{order.concert.title}&lt;/strong&gt; - {order.ticket.name}&lt;/p&gt;\n                &lt;p className=\"mb-1\"&gt;\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e: {order.quantity} ({order.ticket.price * order.quantity} \u20bd)&lt;/p&gt;\n              &lt;/div&gt;\n              &lt;span className={`badge ${statusColors[order.status]} text-white p-2`}&gt;\n                {statusLabels[order.status]}\n              &lt;/span&gt;\n            &lt;/li&gt;\n          ))}\n        &lt;/ul&gt;\n      ) : (\n        &lt;p&gt;\u0423 \u0432\u0430\u0441 \u043f\u043e\u043a\u0430 \u043d\u0435\u0442 \u0437\u0430\u043a\u0430\u0437\u043e\u0432.&lt;/p&gt;\n      )}\n    &lt;/div&gt;\n  );\n};\n\nexport default UserProfile;\n\n</code></pre>"},{"location":"lr4/pages/#_8","title":"\u0410\u0434\u043c\u0438\u043d \u043f\u0430\u043d\u0435\u043b\u044c","text":"<pre><code>import React, { useState } from 'react';\nimport { Tab, Tabs } from 'react-bootstrap';\nimport CreateConcert from '../components/CreateConcert';\nimport Organization from '../components/Organization';\nimport MyConcerts from '../components/MyConcerts';\nimport OrderConfirmation from '../components/OrderConfirmation';\nimport SalesReport from '../components/SalesReport';\n\nconst AdminDashboard = () =&gt; {\n  const [key, setKey] = useState('createConcert');\n\n  return (\n    &lt;div&gt;\n      &lt;h1&gt;\u0410\u0434\u043c\u0438\u043d \u041f\u0430\u043d\u0435\u043b\u044c&lt;/h1&gt;\n      &lt;Tabs activeKey={key} onSelect={(k) =&gt; setKey(k)} id=\"admin-tabs\"&gt;\n        &lt;Tab eventKey=\"createConcert\" title=\"\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u043a\u043e\u043d\u0446\u0435\u0440\u0442\"&gt;\n          &lt;CreateConcert /&gt;\n        &lt;/Tab&gt;\n        &lt;Tab eventKey=\"organization\" title=\"\u041e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u044f\"&gt;\n          &lt;Organization /&gt;\n        &lt;/Tab&gt;\n        &lt;Tab eventKey=\"myConcerts\" title=\"\u041c\u043e\u0438 \u043a\u043e\u043d\u0446\u0435\u0440\u0442\u044b\"&gt;\n          &lt;MyConcerts /&gt;\n        &lt;/Tab&gt;\n        &lt;Tab eventKey=\"orderConfirmation\" title=\"\u041f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u0438\u0435 \u0437\u0430\u043a\u0430\u0437\u043e\u0432\"&gt;\n          &lt;OrderConfirmation /&gt;\n        &lt;/Tab&gt;\n        &lt;Tab eventKey=\"salesReport\" title=\"\u041e\u0442\u0447\u0435\u0442 \u043f\u043e \u043f\u0440\u043e\u0434\u0430\u0436\u0430\u043c\"&gt;\n          &lt;SalesReport /&gt;\n        &lt;/Tab&gt;\n      &lt;/Tabs&gt;\n    &lt;/div&gt;\n  );\n};\n\nexport default AdminDashboard;\n\n\n</code></pre>"}]}